{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sett",
				"settings_batch_current"
			],
			[
				"settings_bat",
				"settings_batch_current"
			],
			[
				"setti",
				"settings_batch"
			],
			[
				"project",
				"project_current"
			],
			[
				"array",
				"array_assignment"
			],
			[
				"array_",
				"array_assignments"
			],
			[
				"wra",
				"wrapper_hit"
			],
			[
				"object",
				"object_account_mturk"
			],
			[
				"respons",
				"response_data_projects"
			],
			[
				"settin",
				"settings_django"
			],
			[
				"template_",
				"template_global"
			],
			[
				"wrapper",
				"wrapper_hits"
			],
			[
				"template",
				"template_global"
			],
			[
				"is",
				"is_table"
			],
			[
				"template_ass",
				"template_assignment_parsed"
			],
			[
				"id",
				"id_hit"
			],
			[
				"group",
				"groupBy"
			],
			[
				"objec",
				"object_assignments"
			],
			[
				"update",
				"update_project_info"
			],
			[
				"mess",
				"message_reject"
			],
			[
				"list_ids",
				"list_ids_assignment"
			],
			[
				"id_",
				"id_assignment"
			],
			[
				"data",
				"data_assignment"
			],
			[
				"OBJEC",
				"OBJECT_WORKERS"
			],
			[
				"set_",
				"set_ids_worker"
			],
			[
				"assignme",
				"assignment_real"
			],
			[
				"query",
				"queryset_batches"
			],
			[
				"id_template",
				"id_template_worker"
			],
			[
				"O",
				"OBJECT_ASSIGNMENTS"
			],
			[
				"for",
				"forEach"
			],
			[
				"OBJECT",
				"OBJECT_HITS"
			],
			[
				"load_",
				"load_data"
			],
			[
				"db_b",
				"db_obj_project"
			],
			[
				"assignment",
				"assignments_selected"
			],
			[
				"create",
				"create_project"
			],
			[
				"obj",
				"object_workers"
			],
			[
				"count",
				"count_assignments"
			],
			[
				"name",
				"name_field"
			],
			[
				"is_",
				"is_updating"
			],
			[
				"url_api_workers",
				"url_api_workers_get_blocks_hard"
			],
			[
				"val",
				"validated_data"
			],
			[
				"ob",
				"object_workers"
			],
			[
				"_count",
				"_count_assignments_total"
			],
			[
				"root",
				"rootState"
			],
			[
				"is_v",
				"is_valid_csv"
			],
			[
				"settings",
				"settings_batch_current"
			],
			[
				"snack",
				"snackbar_edited"
			],
			[
				"Descpti",
				"DESCRIPTIONS"
			],
			[
				"number",
				"number_parsed"
			],
			[
				"nubmer",
				"number_parsed"
			],
			[
				"valida",
				"validation_errors"
			],
			[
				"Serializer_",
				"Serializer_HIT"
			],
			[
				"sync_",
				"sync_batches"
			],
			[
				"text",
				"text-align"
			],
			[
				"align",
				"text-align"
			],
			[
				"dict",
				"dictionary_counters"
			],
			[
				"dictio",
				"dictionary_settings_batch"
			],
			[
				"v",
				"v-layout\tLayout component - Vuetify"
			],
			[
				"keywo",
				"keywords_processed"
			],
			[
				"costs_w",
				"costs_without_fee"
			],
			[
				"list",
				"lifetime_absolute"
			],
			[
				"slug",
				"slug_project_current"
			],
			[
				"Mana",
				"Manager_Global_DB"
			],
			[
				"set_blocked",
				"set_blocked_soft"
			],
			[
				"set",
				"set_blocked_hard"
			],
			[
				"data_",
				"data_status_block"
			],
			[
				"name_",
				"name_qualification_block_soft_hashed"
			],
			[
				"list_",
				"list_qualifications"
			],
			[
				"def",
				"def\tFunction"
			],
			[
				"class",
				"classmethod"
			],
			[
				"clas",
				"classmethod"
			],
			[
				"pars",
				"parsed_csv"
			],
			[
				"par",
				"parsed_csv"
			],
			[
				"file",
				"file_csv"
			],
			[
				"quali",
				"qualifications"
			],
			[
				"show_",
				"show_workers_blocked_none"
			],
			[
				"database",
				"database_object_project"
			],
			[
				"value",
				"value_new"
			],
			[
				"obje",
				"object_worker"
			],
			[
				"Status",
				"STATUS_BLOCK"
			],
			[
				"status",
				"status_block"
			],
			[
				"St",
				"STATUS_BLOCK"
			],
			[
				"qualific",
				"qualification_to_be_edited"
			],
			[
				"qual",
				"qualification_to_be_edited"
			],
			[
				"lsit_",
				"list_ids"
			],
			[
				"titl",
				"title_button"
			],
			[
				"dic",
				"dictionary_qualifications"
			],
			[
				"c",
				"get_client"
			],
			[
				"Quali",
				"Qualifications"
			],
			[
				"Qualifi",
				"Qualification"
			],
			[
				"cla",
				"classes_default"
			],
			[
				"dict_corpo",
				"dict_corpora"
			],
			[
				"hanlde_fil",
				"handle_file_ids_to_ids_internal"
			],
			[
				"update_",
				"update_sorted_columns"
			],
			[
				"glob_",
				"glob_sorted_columns"
			],
			[
				"index",
				"index_current"
			],
			[
				"glob",
				"glob_sorted_columns"
			],
			[
				"order",
				"order_active"
			],
			[
				"m_id",
				"m_id_wrapper"
			],
			[
				"PLACEHOLDER",
				"PLACEHOLDER_ID_WRAPPER"
			],
			[
				"m_in",
				"m_index_position"
			],
			[
				"key",
				"keyCode"
			],
			[
				"trigger",
				"trigger_tag_filter_change"
			],
			[
				"recommen",
				"recommendation_add_tag"
			],
			[
				"has",
				"has_access_to_tagging"
			],
			[
				"get_settin",
				"get_settings_for_corpus"
			],
			[
				"text_",
				"text_splitted"
			],
			[
				"posi",
				"position_of_first_difference"
			],
			[
				"char",
				"character_current_a"
			],
			[
				"string_a",
				"string_a"
			],
			[
				"string",
				"string_a"
			],
			[
				"overf",
				"overflow-y"
			],
			[
				"i",
				"i"
			],
			[
				"path",
				"path_template"
			],
			[
				"url",
				"url_params"
			],
			[
				"glob_tag",
				"glob_filter_tags"
			],
			[
				"glob_tags",
				"glob_dict_filter_tags"
			],
			[
				"exce",
				"exception_processed"
			],
			[
				"PLACE",
				"PLACEHOLDER_FILE"
			],
			[
				"dict_corpor",
				"dict_corpora_with_exceptions"
			],
			[
				"obj_",
				"obj_tmp_key"
			],
			[
				"id_item",
				"id_item_internal"
			],
			[
				"glob_sele",
				"glob_selected_items"
			],
			[
				"btn-group",
				"btn-group-sm"
			],
			[
				"fn",
				"function"
			],
			[
				"strin",
				"string_exception"
			],
			[
				"exists",
				"exists_in"
			],
			[
				"inter",
				"field_internal_id"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "<template>\n<div>\n    <!-- <router-view></router-view> -->\n    <template \n        v-if=\"$route.name === 'batches'\"\n    >\n        <component-list-batches\n        ></component-list-batches>\n\n        <component-download-batch\n        ></component-download-batch>\n\n        <component-create-batch></component-create-batch>\n    </template>\n    <template \n        v-else-if=\"$route.name === 'batch'\"\n    >\n        <component-batch-detail\n            v-bind:id_batch=\"id_batch\"\n        ></component-batch-detail>\n    </template>\n</div>\n</template>\n\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    \n    import ComponentCreateBatch from './create/component_create_batch.vue';\n    import ComponentListBatches from './list/component_list_batches.vue';\n    import ComponentBatchDetail from './detail/component_batch_detail.vue';\n    import ComponentDownloadBatch from './component_download_batch.vue';\n    // import ComponentShowMoneySpent from './component-show-money-spent.vue';\n    // import ComponentShowBatches from './component-show-batches.vue';\n    import slug_project from '../../mixins/slug_project';\nexport default {\n    mixins: [\n        slug_project,\n        // load_data,\n    ],\n    props: {\n        id_batch: {\n        },\n    },\n    name: 'app-batches',\n    data () {\n        return {\n        }\n    },\n    created() {\n    },\n    methods: {\n    },\n    computed: {\n    },\n    components: {\n     ComponentCreateBatch,\n     ComponentListBatches,\n     ComponentBatchDetail,\n     ComponentDownloadBatch,\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/app_batches.vue",
			"file_size": 2340,
			"file_write_time": 131917108372085576,
			"settings":
			{
				"buffer_size": 1544,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n    <v-btn\n        v-bind:loading=\"is_downloading_csv\"\n        v-bind:disabled=\"is_downloading_csv || count_hits_to_download == 0\"\n        color=\"primary\"\n        v-on:click.native=\"download_csv\"\n    >\n        Download data for {{ count_hits_to_download }} Batch(es)\n        <v-icon right>cloud_download</v-icon>\n    </v-btn>\n</div>\n</template>\n\n<script>\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n    import Papa from 'papaparse';\n    import {STATUS_EXTERNAL, STATUS_INTERNAL} from \"../../classes/enums\";\nexport default {\n    data() {\n        return {\n        \tis_downloading_csv: false,\n        }\n    },\n    methods: {\n    \tdownload_csv: function() {\n    \t\t// this.is_downloading_csv = true;\n\n    \t\tconsole.log\n    \t\tlet array_header = [\n    \t\t\t'id_assignment',\n    \t\t\t'id_hit',\n    \t\t\t'id_worker',\n    \t\t\t'sandbox',\n    \t\t\t'creation',\n    \t\t\t'expiration',\n    \t\t\t'status_external',\n    \t\t\t'status_internal',\n    \t\t];\n    \t\tconst array_assignments = [];\n    \t\tlet is_header_set_parameters = false;\n    \t\tlet is_header_set_answers = false;\n\n    \t\tconst status_external_inverted = _.invert(STATUS_EXTERNAL);\n    \t\tconst status_internal_inverted = _.invert(STATUS_INTERNAL);\n\n    \t\t_.forEach(this.array_batches_selected, (batch) => {\n    \t\t\tconsole.log(batch)\n    \t\t\t_.forEach(batch.object_hits, (hit) => {\n    \t\t\t\tconst parameters = JSON.parse(hit.parameters);\n    \t\t\t\tconst ordered_keys_parameters = _.orderBy(Object.keys(parameters));\n\n    \t\t\t\tif(is_header_set_parameters == false) {\n    \t\t\t\t\tarray_header = _.concat(array_header, ordered_keys_parameters);\n    \t\t\t\t\tis_header_set_parameters = true;\n    \t\t\t\t}\n\n\t    \t\t\t_.forEach(hit.object_assignments, (assignment) => {\n\t    \t\t\t\tconst answer_normalized = this.normalize_answer(assignment.answer);\n    \t\t\t\t\tconst ordered_keys_answers = _.orderBy(Object.keys(answer_normalized));\n\n\t    \t\t\t\tif(is_header_set_answers == false) {\n\t    \t\t\t\t\tarray_header = _.concat(array_header, ordered_keys_answers);\n\t    \t\t\t\t\tis_header_set_answers = true;\n\t    \t\t\t\t}\n\n\t    \t\t\t\tconst array_assignment = [];\n\n\t    \t\t\t\tarray_assignment.push(assignment.id_assignment);\n\t    \t\t\t\tarray_assignment.push(assignment.hit.id_hit);\n\t    \t\t\t\tarray_assignment.push(assignment.worker.id_worker);\n\t    \t\t\t\tarray_assignment.push(assignment.hit.batch.use_sandbox);\n\t    \t\t\t\tarray_assignment.push(assignment.hit.datetime_creation);\n\t    \t\t\t\tarray_assignment.push(assignment.hit.datetime_expiration);\n\t    \t\t\t\tarray_assignment.push(status_external_inverted[assignment.status_external]);\n\t    \t\t\t\tarray_assignment.push(status_internal_inverted[assignment.status_internal]);\n\n\t    \t\t\t\t_.forEach(ordered_keys_parameters, (key) => {\n\t    \t\t\t\t\tarray_assignment.push(_.get(parameters, key, undefined));\n\t    \t\t\t\t});\n\n\t    \t\t\t\t_.forEach(ordered_keys_answers, (key) => {\n\t    \t\t\t\t\tarray_assignment.push(_.get(answer_normalized, key, undefined));\n\t    \t\t\t\t});\n\n\t    \t\t\t\tarray_assignments.push(array_assignment);\n\t    \t\t\t})\n    \t\t\t})\n    \t\t});\n\n    \t\t// filter the selected hits\n    \t\t// const hits_selected = _.filter(this.list_hits_for_csv, hit => this.set_batches_selected.has(hit[2]));\n    \t\t// console.log(hits_selected)\n            const csv_string = Papa.unparse(\n            {\n                fields: array_header,\n                data: array_assignments,\n                // data: _.map(hits_selected, o => _.slice(o, 0, 2)),\n            });\n            let blob = new Blob([csv_string]);\n            let a = window.document.createElement(\"a\");\n            a.href = window.URL.createObjectURL(blob, {type: \"text/plain\"});\n            a.download = \"filename.csv\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n    \t\tthis.is_downloading_csv = false;\n    \t},\n    \tnormalize_answer(answer_raw) {\n\t\t\tlet answer = {};\n\t\t\tif(Array.isArray(answer_raw['QuestionFormAnswers']['Answer']))\n\t\t\t{\n\t\t\t\t_.forEach(answer_raw['QuestionFormAnswers']['Answer'], function(value) {\n\t\t\t\t\tanswer[value['QuestionIdentifier']] = value['FreeText'];\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tanswer[answer_raw['QuestionFormAnswers']['Answer']['QuestionIdentifier']] = answer_raw['QuestionFormAnswers']['Answer']['FreeText'];\n\t\t\t}\n\n\t\t\treturn answer;\n\t\t}\n    },\n    computed: {\n    \tcount_hits_to_download: function() {\n    \t\t// if(_.size(this.array_batches_selected) == 0) {\n    \t\t// \treturn 'all';\n    \t\t// } else {\n        \treturn _.size(this.array_batches_selected);\n            \t// return _.sumBy(this.batches_selected, 'hits.length');\n    \t\t// }\n    \t},\n        ...mapState('moduleBatches', {\n            'array_batches_selected': 'array_batches_selected',\n        }),\n\n    },\n    components: {\n\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/component_download_batch.vue",
			"file_size": 5745,
			"file_write_time": 131910064672004323,
			"settings":
			{
				"buffer_size": 4745,
				"line_ending": "Unix",
				"name": "component_download_batch.vue"
			}
		},
		{
			"contents": "<template>\n    <!-- <div>wda</div> -->\n\n<v-layout wrap>\n    <v-flex>\n    \t<!-- {{object_batches}} -->\n        <h2 class=\"headline\">\n        \tBatch {{batch.name}}\n            <v-btn\n                slot=\"activator\" \n                class=\"my-0\"\n                icon\n                small\n                v-bind:to=\"{name: 'batches'}\"\n            >\n                <v-icon>arrow_upward</v-icon>\n            </v-btn>\n        </h2>\n        <v-divider class=\"my-3\"></v-divider>\n        <component-list-hits\n            v-bind:list_hits=\"batch.hits\"\n        ></component-list-hits>\n\t</v-flex>\n</v-layout>\n    \n</template>\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import ComponentListHits from '../hits/list/component_list_hits.vue';\n\nexport default {\n    name: 'component-batch-detail',\n    // props: {\n    // \tid_batch: {\n    // \t\trequired: true,\n    // \t},\n    // },\n    props: {\n    \tid_batch: {\n    \t\trequired: true,\n    \t\ttype: Number,\n    \t}\n    },\n    data () {\n        return {\n        }\n    },\n    // watch: {\n    //     'worker.is_blocked': function() {\n    //         console.log(this.worker.is_blocked)\n    //     },\n    // },\n    computed: {\n    \tbatch() {\n    \t\tconst object_batches = this.get_object_batches();\n    \t\tif(object_batches == null) {\n    \t\t\treturn {}\n    \t\t} else {\n    \t\t\treturn object_batches[this.id_batch];\n    \t\t}\n    \t},\n\n        // status_block() {\n        //     if(this.worker.is_blocked == undefined)\n        //     {\n        //         return {\n        //             description: 'Loading',\n        //             color: 'success',\n        //             icon: '',\n        //         };\n        //     }\n\n        //     switch(this.worker.is_blocked)\n        //     {\n        //         case STATUS_BLOCK.NONE:\n        //             return {\n        //                 description: 'Not Blocked',\n        //                 color: 'success',\n        //                 icon: 'check',\n        //             };\n        //         case STATUS_BLOCK.SOFT:\n        //             return {\n        //                 description: 'Soft Blocked',\n        //                 color: 'warning',\n        //                 icon: 'block',\n        //             };\n        //         case STATUS_BLOCK.HARD:\n        //             return {\n        //                 description: 'Hard Blocked',\n        //                 color: 'error',\n        //                 icon: 'block',\n        //             };\n        //     }\n        // },\n        ...mapGetters('moduleBatches', {\n            'get_object_batches': 'get_object_batches',\n        }),\n        ...mapGetters(['get_show_progress_indicator']),\n    },\n    methods: {\n    },\n    components: {\n        ComponentListHits,\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    td {\n        height: unset !important;\n    }\n    td .v-input--selection-controls {\n        padding: unset;\n    }\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/component_batch_detail.vue",
			"file_size": 2905,
			"file_write_time": 131844440069466343,
			"settings":
			{
				"buffer_size": 2905,
				"line_ending": "Unix",
				"name": "component_batch_detail.vue"
			}
		},
		{
			"contents": "<template>\n    <!-- <div>wda</div> -->\n\n<v-layout wrap>\n    <v-flex>\n    \t<!-- {{object_batches}} -->\n        <h2 class=\"headline\">\n        \tAssignment {{assignment.id_assignment}}\n            <v-btn\n                slot=\"activator\" \n                class=\"my-0\"\n                icon\n                small\n                v-bind:to=\"{name: 'assignments'}\"\n            >\n                <v-icon>arrow_upward</v-icon>\n            </v-btn>\n        </h2>\n\t</v-flex>\n</v-layout>\n    \n</template>\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n\nexport default {\n    name: 'component-assignment-detail',\n    // props: {\n    // \tid_batch: {\n    // \t\trequired: true,\n    // \t},\n    // },\n    props: {\n    \tid_assignment: {\n    \t\trequired: true,\n    \t\ttype: Number\n    \t}\n    },\n    data () {\n        return {\n        }\n    },\n    // watch: {\n    //     'worker.is_blocked': function() {\n    //         console.log(this.worker.is_blocked)\n    //     },\n    // },\n    computed: {\n    \tassignment() {\n    \t\tconst object_assignments = this.get_object_assignments();\n    \t\tif(object_assignments == null) {\n    \t\t\treturn {}\n    \t\t} else {\n    \t\t\treturn object_assignments[this.id_assignment];\n    \t\t}\n    \t},\n\n        // status_block() {\n        //     if(this.worker.is_blocked == undefined)\n        //     {\n        //         return {\n        //             description: 'Loading',\n        //             color: 'success',\n        //             icon: '',\n        //         };\n        //     }\n\n        //     switch(this.worker.is_blocked)\n        //     {\n        //         case STATUS_BLOCK.NONE:\n        //             return {\n        //                 description: 'Not Blocked',\n        //                 color: 'success',\n        //                 icon: 'check',\n        //             };\n        //         case STATUS_BLOCK.SOFT:\n        //             return {\n        //                 description: 'Soft Blocked',\n        //                 color: 'warning',\n        //                 icon: 'block',\n        //             };\n        //         case STATUS_BLOCK.HARD:\n        //             return {\n        //                 description: 'Hard Blocked',\n        //                 color: 'error',\n        //                 icon: 'block',\n        //             };\n        //     }\n        // },\n        ...mapGetters('moduleAssignments', {\n            'get_object_assignments': 'get_object_assignments',\n        }),\n        ...mapGetters(['get_show_progress_indicator']),\n    },\n    methods: {\n    },\n    components: {\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    td {\n        height: unset !important;\n    }\n    td .v-input--selection-controls {\n        padding: unset;\n    }\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/assignments/component_assignment_detail.vue",
			"file_size": 2726,
			"file_write_time": 131843458559951758,
			"settings":
			{
				"buffer_size": 2726,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n    <!-- <div>wda</div> -->\n\n<v-layout wrap>\n    <v-flex>\n        <!-- {{object_batches}} -->\n        <h2 class=\"headline\">\n            HIT {{hit.id_hit}}\n            <v-btn\n                slot=\"activator\" \n                class=\"my-0\"\n                icon\n                small\n                v-bind:to=\"{name: 'hits'}\"\n            >\n                <v-icon>arrow_upward</v-icon>\n            </v-btn>\n        </h2>\n        <v-divider class=\"my-3\"></v-divider>\n        <component-list-assignments\n            v-bind:list_assignments=\"hit.assignments\"\n        ></component-list-assignments>\n    </v-flex>\n</v-layout>\n    \n</template>\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import ComponentListAssignments from '../assignments/list/component_list_assignments.vue';\n\nexport default {\n    name: 'component-hit-detail',\n    // props: {\n    //  id_hit: {\n    //      required: true,\n    //  },\n    // },\n    props: {\n        id_hit: {\n            required: true,\n            type: Number\n        }\n    },\n    data () {\n        return {\n        }\n    },\n    // watch: {\n    //     'worker.is_blocked': function() {\n    //         console.log(this.worker.is_blocked)\n    //     },\n    // },\n    computed: {\n        hit() {\n            const object_hits = this.get_object_hits();\n            if(object_hits == null) {\n                return {}\n            } else {\n                return object_hits[this.id_hit];\n            }\n        },\n\n        // status_block() {\n        //     if(this.worker.is_blocked == undefined)\n        //     {\n        //         return {\n        //             description: 'Loading',\n        //             color: 'success',\n        //             icon: '',\n        //         };\n        //     }\n\n        //     switch(this.worker.is_blocked)\n        //     {\n        //         case STATUS_BLOCK.NONE:\n        //             return {\n        //                 description: 'Not Blocked',\n        //                 color: 'success',\n        //                 icon: 'check',\n        //             };\n        //         case STATUS_BLOCK.SOFT:\n        //             return {\n        //                 description: 'Soft Blocked',\n        //                 color: 'warning',\n        //                 icon: 'block',\n        //             };\n        //         case STATUS_BLOCK.HARD:\n        //             return {\n        //                 description: 'Hard Blocked',\n        //                 color: 'error',\n        //                 icon: 'block',\n        //             };\n        //     }\n        // },\n        ...mapGetters('moduleHITs', {\n            'get_object_hits': 'get_object_hits',\n        }),\n        ...mapGetters(['get_show_progress_indicator']),\n    },\n    methods: {\n    },\n    components: {\n        ComponentListAssignments,\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    td {\n        height: unset !important;\n    }\n    td .v-input--selection-controls {\n        padding: unset;\n    }\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/hits/component_hit_detail.vue",
			"file_size": 3000,
			"file_write_time": 131843458761996065,
			"settings":
			{
				"buffer_size": 3000,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import { mapState, mapActions, mapGetters } from 'vuex';\nimport {Service_Batches} from \"../services/service_batches\";\n\nexport default {\n\tmethods: {\n\t    refresh_data(force=false) {\n\t    \t// console.log(this.use_sandbox)\n\t        this.set_show_progress_indicator(true);\n\t        // this.set_show_progress_indicator(true);\n\n\t        // this.sync_database().then(() => {\n\t        //     this.set_show_progress_indicator(false);\n\t        // });\n\t\t\tService_Batches.load_batches(force).then(() => {\n\t            this.set_show_progress_indicator(false);\n\t\t\t});\n\t        \n\t        // this.update_balance().then(() => {\n\t        //     this.set_show_progress_indicator(false);\n\t        // });\n\t    },\n        ...mapActions(['set_show_progress_indicator']),\n\t},\n\tcomputed: {\n        ...mapState(['use_sandbox']),\n\t},\n \tcreated() {\n        this.refresh_data(false);\n\t},\n    watch: {\n        use_sandbox: function() {\n            this.refresh_data(false);\n        },\n    },\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/load_data.js",
			"file_size": 963,
			"file_write_time": 131883281376324685,
			"settings":
			{
				"buffer_size": 963,
				"line_ending": "Unix",
				"name": "load_data.js"
			}
		},
		{
			"contents": "<template>\n<v-layout align-center justify-end>\n    <v-flex shrink>\n        <v-tooltip bottom>\n            <v-btn \n                flat\n                v-bind:loading=\"get_show_progress_indicator\" \n                v-on:click=\"refresh_data(true)\" \n                slot=\"activator\"\n            >\n                <v-icon>refresh</v-icon>\n                Refresh Data\n            </v-btn>\n            <span>Refresh batch data</span>\n        </v-tooltip>\n    </v-flex>\n    <v-flex shrink>\n        <v-tooltip bottom>\n            <v-btn \n                flat\n                v-bind:loading=\"is_syncing_mturk\" \n                v-on:click=\"sync_mturk(true)\" \n                slot=\"activator\"\n            >\n                <v-icon>sync</v-icon>\n                Sync with MTurk\n            </v-btn>\n            <span>Refresh batch data</span>\n        </v-tooltip>\n    </v-flex>\n</v-layout>\n</template>\n\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    // import slug_project from '../../mixins/slug_project';\n    import load_data from '../../mixins/load_data';\n    import {Service_Batches} from \"../../services/service_batches\";\nexport default {\n    mixins: [\n        // slug_project,\n        load_data,\n    ],\n    name: 'component-toolbar-batches',\n    props: {\n        name_route: {\n        },\n    },\n    data() {\n        return {\n    \t}\n    },\n    created() {\n        // console.log($route);\n    },\n    computed: {\n        ...mapGetters(['get_show_progress_indicator']),\n        ...mapGetters('moduleBatches', {\n            'is_syncing_mturk': 'get_is_syncing_mturk',\n        }),\n    },\n    methods: {\n        sync_mturk() {\n            Service_Batches.sync_mturk();\n        },\n        ...mapActions(['set_show_progress_indicator']),\n        ...mapActions('moduleBatches', {\n            'sync_database': 'sync_database',\n        }),\n    }\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/component_toolbar_batches.vue",
			"file_size": 1869,
			"file_write_time": 131883281376204686,
			"settings":
			{
				"buffer_size": 1866,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n    <v-tooltip bottom>\n        <v-btn icon v-bind:loading=\"get_show_progress_indicator\" v-on:click=\"refresh_data\" slot=\"activator\">\n            <v-icon>refresh</v-icon>\n        </v-btn>\n        <span>Refresh Workers</span>\n    </v-tooltip>\n</template>\n\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\nexport default {\n    name: 'component-toolbar-workers',\n    data() {\n        return {\n        }\n    },\n    computed: {\n        ...mapGetters(['get_show_progress_indicator']),\n    },\n    methods: {\n        refresh_data: function() {\n            this.set_show_progress_indicator(true);\n\n            this.sync_workers(true).then((result) => {\n                this.set_show_progress_indicator(false);\n            });\n        },\n        ...mapActions(['set_show_progress_indicator']),\n        ...mapActions('moduleWorkers', {\n            'sync_workers': 'sync_workers',\n        }),\n    }\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/component_toolbar_workers.vue",
			"file_size": 928,
			"file_write_time": 131883281376324685,
			"settings":
			{
				"buffer_size": 928,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n    <v-tooltip bottom>\n        <v-btn icon v-bind:loading=\"show_progress_indicator\" v-on:click=\"refresh_data\" slot=\"activator\">\n            <v-icon>refresh</v-icon>\n        </v-btn>\n        <span>Refresh qualifications</span>\n    </v-tooltip>\n</template>\n\n<script>\n    import { mapState, mapActions } from 'vuex';\nexport default {\n    name: 'component-toolbar-qualifications',\n    props: {\n    \tshow_progress_indicator: {\n    \t\trequired: true,\n    \t\ttype: Boolean,\n    \t}\n    } ,\n    data() {\n        return {\n    \t}\n    },\n    methods: {\n        refresh_data: function() {\n            this.set_show_progress_indicator(true);\n\n            this.sync_policies(true).then(() => {\n\t            this.set_show_progress_indicator(false);\n\t        });\n        },\n        ...mapActions(['set_show_progress_indicator']),\n        ...mapActions('modulePolicies', {\n        \t'sync_policies': 'sync_policies',\n        }),\n    }\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/policies/component-toolbar-qualifications.vue",
			"file_size": 936,
			"file_write_time": 131883281376244685,
			"settings":
			{
				"buffer_size": 936,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<v-layout wrap>\n    <v-flex>\n        <v-list subheader>\n            <v-subheader><h2>Summary</h2></v-subheader>\n            <v-list-tile>\n                <v-layout>\n                    <v-flex xs3>\n                        Valid CSV:  \n                    </v-flex>\n                    <v-flex>\n                        <template v-if=\"is_valid_csv\">\n                            <v-icon color=\"success\">check</v-icon>\n                        </template>\n                        <template v-else>\n                            None\n                        </template>\n                    </v-flex>\n                </v-layout>       \n            </v-list-tile>\n            <v-list-tile>\n                <v-layout>\n                    <v-flex xs3>\n                        Number of variables:  \n                    </v-flex>\n                    <v-flex>\n                        <template v-if=\"is_valid_csv\">\n                            {{ get_variables.length }} \n\n                            <v-tooltip top>\n                                <v-icon\n                                    slot=\"activator\"\n                                >info</v-icon>\n                                <span>{{ get_variables.join(', ') }}</span>\n                            </v-tooltip> \n                        </template>\n                        <template v-else>\n                            None\n                        </template> \n                    </v-flex>\n                </v-layout>       \n            </v-list-tile>\n            <v-list-tile>\n                <v-layout>\n                    <v-flex xs3>\n                        Number of HITs: \n                    </v-flex>\n                    <v-flex>\n                        <template v-if=\"is_valid_csv\">\n                            {{ count_hits }}   \n                        </template>\n                        <template v-else>\n                            None\n                        </template> \n                    </v-flex>\n                </v-layout>     \n            </v-list-tile>\n\n            <v-list-tile>\n                <v-layout>\n                    <v-flex xs3>\n                        Available until: \n                    </v-flex>\n                    <v-flex>\n                        <template v-if=\"is_valid\">\n                            {{ format_lifetime_absolute }} ({{ lifetime_formatted }}) \n                        </template>\n                        <template v-else>\n                            None\n                        </template> \n                    </v-flex>\n                </v-layout>     \n            </v-list-tile>\n\n            <v-list-tile>\n                <v-layout>\n                    <v-flex xs3>\n                        Costs: \n                    </v-flex>\n                    <v-flex>\n                        <template v-if=\"is_valid\">\n                            <component-display-money v-bind:amount=\"costs_total_with_fee\"></component-display-money> \n                            (without Amazon's fees: <component-display-money v-bind:amount=\"costs_total_without_fee\"></component-display-money>) \n                        </template>\n                        <template v-else>\n                            None\n                        </template> \n                    </v-flex>\n                </v-layout>     \n            </v-list-tile>\n        </v-list>\n        \n    </v-flex>\n</v-layout>\n</template>\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import Settings_Batch from '../../../classes/settings_batch';\n    import ComponentDisplayMoney from '../../component-display-money.vue';\n    import humanizeDuration from 'humanize-duration';\n\n    // import ComponentStepUploadCSV from './component_step_upload_csv.vue';\n    // import ComponentShowMoneySpent from './component-show-money-spent.vue';\n    // import ComponentShowBatches from './component-show-batches.vue';\nexport default {\n    name: 'component-overview',\n    props: {\n        settings_batch_current: {\n            required: true,\n            type: Settings_Batch|undefined,\n        },\n        is_invalid_settings_batch: {\n            required: true,\n            type: Boolean,\n        }\n    },\n    data () {\n        return {\n            current_time_ms: Date.now(),\n        }\n    },\n    methods: {\n    },\n    computed: {\n        lifetime_formatted() {\n            if(this.settings_batch_current == undefined) return undefined;\n\n            return humanizeDuration(this.settings_batch_current.lifetime * 1000)\n        },\n        costs_total_without_fee() {\n            if(this.settings_batch_current == undefined) return 0;\n\n            console.log(this.object_csv_parsed)\n            const reward = parseFloat(this.settings_batch_current.reward);\n            if(this.object_csv_parsed != undefined)\n            {\n                return reward * this.settings_batch_current.count_assignments * this.object_csv_parsed.data.length;\n            } else {\n                return reward * this.settings_batch_current.count_assignments\n            }\n        },\n        costs_total_with_fee() {\n            let costs_with_fee = undefined;\n\n            if(this.settings_batch_current.count_assignments < 10)\n            {\n                costs_with_fee = this.costs_total_without_fee * 1.2;\n            } else {\n                costs_with_fee = this.costs_total_without_fee * 1.4;\n            }\n\n            return costs_with_fee;\n        },\n        format_lifetime_absolute() {\n            if(this.settings_batch_current == undefined) return undefined;\n\n            const lifetime_absolute = this.current_time_ms + this.settings_batch_current.lifetime * 1000.0;\n            return new Date(lifetime_absolute).toLocaleString();\n        },\n        count_hits() {\n            if(this.is_valid_csv)\n            {\n                return this.data_csv.length;\n            }\n            return null;\n        },\n        get_variables() {\n            if(this.is_valid_csv)\n            {\n                return Object.keys(this.data_csv[0]);\n            }\n\n            return [];\n        },\n        data_csv() {\n            if(this.is_valid_csv) \n            {\n                return this.object_csv_parsed.data;\n            }\n            return null;\n        },\n        is_valid() {\n            return this.is_valid_csv && !this.is_invalid_settings_batch;\n        },\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n        ...mapGetters('moduleBatches', {\n            'object_csv_parsed': 'get_object_csv_parsed',\n            'is_valid_csv': 'is_valid_csv',\n        }),\n    },\n    created() {\n        setInterval(() => {this.current_time_ms = Date.now()}, 1000);\n    },\n    components: {\n      ComponentDisplayMoney,\n    }\n}\n</script>\n\n<style scoped>\n    \n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/create/component_overview.vue",
			"file_size": 6793,
			"file_write_time": 131883281376204686,
			"settings":
			{
				"buffer_size": 6793,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test.html",
			"settings":
			{
				"buffer_size": 2499,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_keyword.py",
			"settings":
			{
				"buffer_size": 447,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "serializer_keyword.py"
			}
		},
		{
			"file": "mturk_db/api/classes/keywords.py",
			"settings":
			{
				"buffer_size": 313,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "keywords.py"
			}
		},
		{
			"file": "mturk_db/api/models.py",
			"settings":
			{
				"buffer_size": 8199,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/views/messages_reject.py",
			"settings":
			{
				"buffer_size": 2727,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n    <h2 class=\"headline\">Default Reject Message</h2>\n    <v-layout row>\n        <v-flex>\n                <!-- v-model=\"$v.count_assignments_max_per_worker.$model\" -->\n                <!-- v-on:input=\"count_assignments_max_per_worker = $event\" -->\n                <!-- v-model=\"message_reject\" -->\n            <v-combobox\n                v-bind:value=\"project_current.message_reject_default\"\n                v-bind:items=\"list_messages_reject\"\n                v-bind:search-input.sync=\"search\"\n                label=\"Enter your default reject message\"\n                item-text=\"message\"\n            >\n                <template slot=\"no-data\">\n                    <v-list-tile>\n                        <v-list-tile-content>\n                            <v-list-tile-title>\n                                No results found. Press 'UPDATE' to create a new reject message.\n                            </v-list-tile-title>\n                        </v-list-tile-content>\n                    </v-list-tile>\n                </template>\n            </v-combobox>\n        </v-flex>\n        <v-flex shrink>\n            <v-btn \n                v-bind:disabled=\"$v.$invalid\"\n                color=\"primary\"\n                v-on:click=\"save\"\n            >Update</v-btn>\n        </v-flex>\n    </v-layout>\n\n    <v-snackbar\n        v-model=\"snackbar_updated\"\n        v-bind:timeout=\"1500\"\n        bottom\n        color=\"success\"\n    >\n        <v-spacer></v-spacer>\n        Updated!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n        <!-- append-icon=\"clear\" -->\n        <!-- v-on:input=\"$emit('update:count_assignments_max_per_worker', try_number($event)); v.settings_batch.count_assignments_max_per_worker.$touch()\" -->\n        <!-- v-on:click:append=\"$emit('update:count_assignments_max_per_worker', undefined); v.settings_batch.count_assignments_max_per_worker.$touch()\" -->\n</div>\n</template>\n\n<script>\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import { required, minValue, maxValue } from 'vuelidate/lib/validators'\n    import validations from '../../../mixins/validations';\nexport default {\n    mixins: [\n        validations,\n    ],\n    data() {\n        return {\n            // message_reject: null,\n            search: null,\n            snackbar_updated: false,\n        }\n    },\n    methods: {\n        save() {\n            this.set_message_reject_default({\n                project: this.project_current,\n                message_reject: this.search,\n            }).then(() => {\n                this.snackbar_updated = true;\n            });\n        },\n        ...mapActions('moduleMessagesReject', {\n            'load_messages_reject': 'load_messages_reject',\n        }),\n        ...mapActions('moduleProjects', {\n            'set_message_reject_default': 'set_message_reject_default',\n        }),\n    },\n    computed: {\n        ...mapGetters('moduleMessagesReject', {\n            'list_messages_reject': 'get_list_messages_reject',\n        }),\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    created() {\n        this.load_messages_reject();\n    },\n    components: {\n\n    },\n    validations: {\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/messages_reject/component_messages_reject_default.vue",
			"file_size": 3298,
			"file_write_time": 131917096955615631,
			"settings":
			{
				"buffer_size": 3253,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "export default class Project \n{\n\tconstructor(data={}) \n\t{\n\t\t// console.log(data)\n\t\tthis.id = data.id;\n\t\tthis.name = data.name;\n\t\tthis.slug = data.slug;\n\t\tthis.version = data.version;\n\t\tthis.settings_batch_default = data.settings_batch_default;\n\t\tthis.datetime_visited = new Date(data.datetime_visited);\n\t\tthis.count_assignments_max_per_worker = data.count_assignments_max_per_worker;\n\t\t\n        this.templates_worker = null;\n        this.templates_assignment = null;\n        this.templates_hit = null;\n        this.templates_global = null;\n\t\tthis.settings_batch = null;\n\n\t\tthis.message_reject_default = data.message_reject_default;\n\n        // this.title = data.title;\n        // this.description = data.description;\n        // this.keywords = data.keywords;\n        // this.assignments_max = data.count_assignments;\n        // this.reward = data.reward;\n        // this.lifetime = data.lifetime;\n        // this.duration = data.duration;\n        // this.use_sandbox = data.use_sandbox;\n        // this.has_content_adult = data.has_content_adult;\n        // this.qualification_assignments_approved = data.qualification_assignments_approved;\n        // this.qualification_hits_approved = data.qualification_hits_approved;\n        // this.qualification_locale = data.qualification_locale;\n        // this.block_workers = data.block_workers;\n        // this.templates = data.templates;\n        // this.template = data.fk_template_main;\n        // this.count_assignments_max_per_worker = data.count_assignments_max_per_worker;\n\t}\n\n\t// get_changes(project) {\n\t// \tconst object = {};\n\t// \tfor(const key in this)\n\t// \t{\n\t// \t\tif(project[key] != undefined)\n\t// \t\t{\n\t// \t\t\tif(this[key] != project[key])\n\t// \t\t\t{\n\t// \t\t\t\tconsole.log(`Changed value: ${key}`);\n\t// \t\t\t\tif(key == 'keywords')\n\t// \t\t\t\t{\n\t// \t\t\t\t\tconst keywords_processed = [];\n\t// \t\t\t\t\tfor(let keyword of project[key])\n\t// \t\t\t\t\t{\n\t// \t\t\t\t\t\tif(typeof(keyword) == 'string')\n\t// \t\t\t\t\t\t{\n\t// \t\t\t\t\t\t\tkeyword = {'text': keyword}\n\t// \t\t\t\t\t\t}\n\n\t// \t\t\t\t\t\tkeywords_processed.push(keyword)\n\t// \t\t\t\t\t}\n\t// \t\t\t\t\tobject[key] = keywords_processed;\n\t// \t\t\t\t} else if(key == 'qualification_assignments_approved' || key == 'qualification_hits_approved') {\n\t// \t\t\t\t\tproject[key].trim() == '' ? object[key] = null : object[key] = project[key];\n\t// \t\t\t\t} else if(key == 'qualification_locale') {\n\t// \t\t\t\t\tobject[key] = JSON.stringify(project[key]);\n\t// \t\t\t\t} else {\n\t// \t\t\t\t\tif(typeof(project[key]) == 'object')\n\t// \t\t\t\t\t{\n\t// \t\t\t\t\t\tobject[key] = project[key];\n\t// \t\t\t\t\t} else {\n\t// \t\t\t\t\t\tif(key == 'assignments_max') \n\t// \t\t\t\t\t\t{\n\t// \t\t\t\t\t\t\tobject['count_assignments'] = project[key];\n\t// \t\t\t\t\t\t} else if(key == 'template') {\n\t// \t\t\t\t\t\t\tobject['fk_template_main'] = project[key];\n\t// \t\t\t\t\t\t} else {\n\t// \t\t\t\t\t\t\tobject[key] = project[key];\n\t// \t\t\t\t\t\t}\n\t// \t\t\t\t\t}\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\n\t// \treturn object;\n\t// }\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/project.js",
			"file_size": 3332,
			"file_write_time": 131913598894111432,
			"settings":
			{
				"buffer_size": 2855,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_message_reject.py",
			"settings":
			{
				"buffer_size": 599,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "serializer_message_reject.py"
			}
		},
		{
			"file": "mturk_db/api/classes/messages_reject.py",
			"settings":
			{
				"buffer_size": 483,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "messages_reject.py"
			}
		},
		{
			"file": "mturk_db/api/enums/assignments.py",
			"settings":
			{
				"buffer_size": 230,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/views/settings_batch.py",
			"settings":
			{
				"buffer_size": 2906,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "settings_batch.py"
			}
		},
		{
			"file": "mturk_db/api/classes/templates_worker.py",
			"settings":
			{
				"buffer_size": 1596,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "templates_worker.py"
			}
		},
		{
			"contents": "import _ from 'lodash';\n\nexport default class Template_Worker \n{\n\tconstructor(data={}) \n\t{\n\t\tthis.id = data.id;\n\t\tthis.name = data.name;\n\t\tthis.height_frame = data.height_frame != undefined ? data.height_frame : 800;\n\t\tthis.template = data.template;\n\t\tthis.template_assignment = data.template_assignment;\n\t\tthis.template_hit = data.template_hit;\n\t\tthis.template_global = data.template_global;\n\t\tthis.dict_parameters = data.json_dict_parameters != undefined ? JSON.parse(data.json_dict_parameters) : {};\n\t\tthis.count_parameters = Object.keys(this.dict_parameters).length;\n\t}\n\n\tget_changes(template_worker) {\n\t\tconst object = {};\n\t\tfor(const key in this)\n\t\t{\n\t\t\t// if(template_worker[key] != undefined)\n\t\t\t{\n\t\t\t\tif(this[key] != template_worker[key])\n\t\t\t\t{\n\t\t\t\t\tif(typeof(template_worker[key]) == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(\n\t\t\t\t\t\t\t_.differenceBy(template_worker[key], this[key], (value) => value['text'].toLowerCase()).length > 0 ||\n\t\t\t\t\t\t\t_.differenceBy(this[key], template_worker[key], (value) => value['text'].toLowerCase()).length > 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tobject[key] = template_worker[key];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst value = template_worker[key];\n\t\t\t\t\t\tif(value == undefined)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tobject[key] = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobject[key] = value;\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/template_worker.js",
			"file_size": 1314,
			"file_write_time": 131898103837698549,
			"settings":
			{
				"buffer_size": 1314,
				"line_ending": "Unix",
				"name": "template_worker.js"
			}
		},
		{
			"file": "mturk_db/api/classes/settings_batch.py",
			"settings":
			{
				"buffer_size": 3338,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "settings_batch.py"
			}
		},
		{
			"file": "mturk_db/api/views/projects.py",
			"settings":
			{
				"buffer_size": 4314,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/classes/workers.py",
			"settings":
			{
				"buffer_size": 20282,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/classes/batches.py",
			"settings":
			{
				"buffer_size": 26973,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/views/workers.py",
			"settings":
			{
				"buffer_size": 4574,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_worker.py",
			"settings":
			{
				"buffer_size": 3009,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "serializer_worker.py"
			}
		},
		{
			"contents": "import Vuex from 'vuex';\n// import Vue from 'vue/dist/vue.common';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport _ from 'lodash';\n\nimport VueCookies from 'vue-cookies'\nVue.use(Vuex)\nVue.use(VueCookies)\nVue.use(VueAxios, axios)\n\nimport Service_Endpoint from '../services/service_endpoint';\n\nimport { moduleProjects } from './modules/projects.js';\nimport { moduleMoney } from './modules/money.js';\nimport { moduleQualifications } from './modules/qualifications.js';\nimport { moduleWorkers } from './modules/workers.js';\nimport { moduleBatches } from './modules/batches.js';\nimport { moduleHITs } from './modules/hits.js';\nimport { moduleAssignments } from './modules/assignments.js';\nimport { moduleKeywords } from './modules/keywords.js';\nimport { moduleMessagesReject } from './modules/messages_reject.js';\nimport { router } from './index.js';\n\nexport const store = new Vuex.Store({\n    modules: {\n        moduleProjects,\n        moduleMoney,\n        moduleQualifications,\n        moduleWorkers,\n        moduleBatches,\n        moduleHITs,\n        moduleAssignments,\n        moduleKeywords,\n        moduleMessagesReject,\n    },\n    state: {\n        has_loaded_projects: false,\n        token_instance: undefined,\n        token_csrf: undefined,\n        show_with_fee: true,\n        show_progress_indicator: 0,\n        // use_sandbox: false,\n        use_sandbox: true,\n    },\n    getters: {\n        get_show_progress_indicator(state, getters, rootState) {\n            return state.show_progress_indicator > 0 ? true : false;\n        },\n        get_url_api: (state, getters) => ({url, use_sandbox, value}) => {\n            if(value != undefined)\n            {\n                url += `/${value}`;\n            }\n\n            if(use_sandbox === false) {\n                url += '?use_sandbox=false&';\n            } else {\n                url += '?';\n            }\n\n            url = url.replace('PLACEHOLDER_SLUG_PROJECT', getters['moduleProjects/get_project_current'].slug);\n\n            return url;\n        },\n    },\n    mutations: {\n        set_token_csrf(state, token_csrf) {\n            state.token_csrf = token_csrf;\n        },\n        set_token_instance(state, token_instance) {\n            state.token_instance = token_instance;\n        },\n        set_show_with_fee(state, show) {\n            state.show_with_fee = show;\n        },\n        set_use_sandbox(state, use_sandbox) {\n            state.use_sandbox = use_sandbox;\n        },\n        set_show_progress_indicator(state, show) {\n            state.show_progress_indicator += show == true ? 1 : -1;\n        },\n        // set_urls(state, config) {\n        // },\n    },\n    actions: {\n        async init({state, commit, dispatch}) {\n            state.has_loaded_projects = false;\n            const configElement = document.getElementById( 'config' );\n            const config = JSON.parse( configElement.innerHTML );\n            // console.log(config);\n\n            commit('set_token_instance', config.token_instance);\n            commit('set_token_csrf', config.token_csrf);\n\n            Service_Endpoint.init(\n                state.token_instance,\n                () => {\n                    router.push({name: 'connection_error'});\n                }\n            );\n\n            // commit('setUrlProject', config.url_project);\n\n            commit('moduleMoney/setUrlApiGetBalance', config.url_api_get_balance);\n            \n            commit('moduleQualifications/set_url_api_qualifications', config.url_api_qualifications);\n            // commit('moduleQualifications/set_url_api_qualification', config.url_api_qualification);\n\n            // commit('set_urls', config);\n\n            commit('moduleWorkers/set_urls', config);\n            // commit('moduleWorkers/set_url_api_global_db', config.url_api_global_db);\n\n            commit('moduleProjects/set_urls', config);\n\n            // commit('moduleProjects/set_url_api_projects', config.url_api_projects);\n            // commit('moduleProjects/set_slug_project_current', config.slug_project_current);\n\n            commit('moduleBatches/set_urls', config);\n            \n            commit('moduleKeywords/set_urls', config);\n            commit('moduleMessagesReject/set_urls', config);\n\n            const success = await dispatch('moduleProjects/load_projects');\n            state.has_loaded_projects = true;\n            return success;\n        },\n        async set_show_with_fee({commit, state}, show) {\n            commit('set_show_with_fee', show);\n        },\n        async set_show_progress_indicator({commit, state}, show) {\n            commit('set_show_progress_indicator', show);\n        },\n        async set_use_sandbox({commit, state}, use_sandbox) {\n            commit('set_use_sandbox', use_sandbox);\n        },\n    }\n})",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/index.js",
			"file_size": 4782,
			"file_write_time": 131871714159380841,
			"settings":
			{
				"buffer_size": 4782,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import Vue from 'vue';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport Project from '../../classes/project';\nimport Settings_Batch from '../../classes/settings_batch';\nimport Template_Worker from '../../classes/template_worker';\nimport Template_Assignment from '../../classes/template_assignment';\nimport Template_HIT from '../../classes/template_hit';\nimport Template_Global from '../../classes/template_global';\nimport { router } from '../..//index.js';\nimport {Service_Endpoint} from '../../services/service_endpoint';\n\nexport const moduleProjects = {\n\tnamespaced: true,\n\tstate: {\n\t\tobject_projects: null,\n\t\tslug_project_current: null,\n\n        url_api_projects: undefined,\n        url_api_projects_check_uniqueness: undefined,\n        url_api_projects_settings_batch: undefined,\n        url_api_projects_templates_worker: undefined,\n        url_api_projects_templates_assignment: undefined,\n        url_api_projects_clear_sandbox: undefined,\n        url_api_ping: null,\n\n        // response_data_projects: undefined,\n\t},\n\tgetters: {\n\t\tget_project_current(state) {\n            if(state.slug_project_current == undefined) return {};\n\t\t\treturn state.object_projects[state.slug_project_current];\n\t\t},\n   //  \tget_object_project: (state, getters, rootState) => {\n   //  \t\tconsole.log(rootState.name_project)\n\t\t\t// return state.object_projects;\n   //  \t},\n    \tget_object_projects: (state) => {\n\t\t\treturn state.object_projects;\n    \t},\n\t\tget_slug_project_current(state) {\n\t\t\treturn state.slug_project_current;\n\t\t},\n\t},\n\tmutations: {\n        edit_project(state, data) {\n        \tconst project = new Project(data);\n        \tVue.set(state.object_projects, project.slug, project);\n        }, \n        set_slug_project_current(state, slug_project_current) {\n            state.slug_project_current = slug_project_current;\n        },\n        set_urls(state, config) {\n            state.url_api_projects = config.url_api_projects;\n            state.url_api_projects_check_uniqueness = config.url_api_projects_check_uniqueness;\n            state.url_api_projects_settings_batch = config.url_api_projects_settings_batch;\n            state.url_api_projects_templates_worker = config.url_api_projects_templates_worker;\n            state.url_api_projects_templates_assignment = config.url_api_projects_templates_assignment;\n            state.url_api_projects_templates_hit = config.url_api_projects_templates_hit;\n            state.url_api_projects_templates_global = config.url_api_projects_templates_global;\n            state.url_api_projects_clear_sandbox = config.url_api_projects_clear_sandbox;\n            state.url_api_ping = config.url_api_ping;\n        },\n        set_settings_batch(state, {data, project}) {\n            project.settings_batch = {};\n\n            _.forEach(data, function(data_settings_batch) {\n                const object_settings_batch = new Settings_Batch(data_settings_batch);\n                Vue.set(project.settings_batch, object_settings_batch.id, object_settings_batch);\n            });\n        },\n        set_templates_worker(state, {data, project}) {\n            project.templates_worker = {};\n\n            _.forEach(data, function(data_templates_worker) {\n                const object_template_worker = new Template_Worker(data_templates_worker);\n                Vue.set(project.templates_worker, object_template_worker.id, object_template_worker);\n\n                if(object_template_worker.template_assignment != undefined)\n                {\n                    Vue.set(object_template_worker, 'template_assignment', project.templates_assignment[object_template_worker.template_assignment]);\n                } \n                if(object_template_worker.template_hit != undefined)\n                {\n                    Vue.set(object_template_worker, 'template_hit', project.templates_hit[object_template_worker.template_hit]);\n                } \n                if(object_template_worker.template_global != undefined)\n                {\n                    Vue.set(object_template_worker, 'template_global', project.templates_global[object_template_worker.template_global]);\n                } \n            });\n        },\n        set_templates_assignment(state, {data, project}) {\n            project.templates_assignment = {};\n            _.forEach(data, function(data_templates_assignment) {\n                const object_template_assignment = new Template_Assignment(data_templates_assignment);\n                Vue.set(project.templates_assignment, object_template_assignment.id, object_template_assignment);\n            });\n        },\n        set_templates_hit(state, {data, project}) {\n            project.templates_hit = {};\n\n            _.forEach(data, function(data_templates_hit) {\n                const object_template_hit = new Template_HIT(data_templates_hit);\n                Vue.set(project.templates_hit, object_template_hit.id, object_template_hit);\n            });\n        },\n        set_templates_global(state, {data, project}) {\n            project.templates_global = {};\n            _.forEach(data, function(data_templates_global) {\n                const object_template_global = new Template_Global(data_templates_global);\n                Vue.set(project.templates_global, object_template_global.id, object_template_global);\n            });\n        },\n        // set_response_data_projects(state, data_projects) {\n        //     state.response_data_projects = data_projects;\n        // },\n        // add_to_response_data_projects(state, data_project) {\n        //     state.response_data_projects.push(data_project);\n        // },\n        // remove_from_response_data_projects(state, data_project) {\n        //     const index = _.findIndex(state.response_data_projects, (p) => p.id === data_project.id);\n        //     Vue.delete(state.response_data_projects, index);\n        // },\n        set_projects(state, data_projects) {\n            state.object_projects= {};\n            \n            _.forEach(data_projects, function(data_project){\n                const object_project = new Project(data_project);\n                Vue.set(state.object_projects, object_project.slug, object_project);\n            });\n        },\n        add_project(state, project) {\n            Vue.set(state.object_projects, project.slug, project);\n        },\n        set_project(state, {project, project_new, array_fields}) {\n            _.forEach(array_fields, function(name_field) {\n                Vue.set(project, name_field, project_new[name_field]);\n            });   \n        },\n        update_settings_batch(state, {data, project}) {\n            const object_settings_batch = new Settings_Batch(data);\n            Vue.set(project.settings_batch, object_settings_batch.id, object_settings_batch);\n        },\n        update_template_worker(state, {data, project}) {\n            const template_worker = new Template_Worker(data);\n            Vue.set(project.templates_worker, template_worker.id, template_worker);\n\n            if(template_worker.template_assignment != undefined)\n            {\n                Vue.set(template_worker, 'template_assignment', project.templates_assignment[template_worker.template_assignment]);\n            } \n\n            if(template_worker.template_hit != undefined)\n            {\n                Vue.set(template_worker, 'template_hit', project.templates_hit[template_worker.template_hit]);\n            } \n\n            if(template_worker.template_global != undefined)\n            {\n                Vue.set(template_worker, 'template_global', project.templates_global[template_worker.template_global]);\n            } \n        },\n        update_template_assignment(state, {data, project}) {\n            // const template_assignment = new Template_Assignment(data);\n            // Vue.set(project.templates_assignment, template_assignment.id, template_assignment);\n            project.templates_assignment[data.id].update(data);\n        },\n        update_template_hit(state, {data, project}) {\n            // const template_hit = new Template_HIT(data);\n            // Vue.set(project.templates_hit, template_hit.id, template_hit);\n            project.templates_hit[data.id].update(data);\n        },\n        update_template_global(state, {data, project}) {\n            project.templates_global[data.id].update(data);\n            // const template_global = new Template_Global(data);\n            // Vue.set(project.templates_global, template_global.id, template_global);\n        },\n        add_settings_batch(state, {data, project}) {\n            const object_settings_batch = new Settings_Batch(data);\n            Vue.set(project.settings_batch, object_settings_batch.id, object_settings_batch);\n        },\n        add_template_worker(state, {data, project}) {\n            const object_template_worker = new Template_Worker(data);\n            Vue.set(project.templates_worker, object_template_worker.id, object_template_worker);\n            if(object_template_worker.template_assignment != undefined)\n            {\n                Vue.set(object_template_worker, 'template_assignment', project.templates_assignment[object_template_worker.template_assignment]);\n            } \n        },\n        add_template_assignment(state, {data, project}) {\n            const object_template_assignment = new Template_Assignment(data);\n            Vue.set(project.templates_assignment, object_template_assignment.id, object_template_assignment);\n        },\n        add_template_hit(state, {data, project}) {\n            const object_template_hit = new Template_HIT(data);\n            Vue.set(project.templates_hit, object_template_hit.id, object_template_hit);\n        },\n        add_template_global(state, {data, project}) {\n            const object_template_global = new Template_Global(data);\n            Vue.set(project.templates_global, object_template_global.id, object_template_global);\n        },\n        remove_template_worker(state, {template, project}) {\n            Vue.delete(project.templates_worker, template.id);\n        },\n        remove_template_assignment(state, {template, project}) {\n            Vue.delete(project.templates_assignment, template.id);\n        },\n        remove_template_hit(state, {template, project}) {\n            Vue.delete(project.templates_hit, template.id);\n        },\n        remove_template_global(state, {template, project}) {\n            Vue.delete(project.templates_global, template.id);\n        },\n        remove_settings_batch(state, {settings_batch, project}) {\n            Vue.delete(project.settings_batch, settings_batch.id);\n        },\n        set_ping(state, {project, data}) {\n            Vue.set(project, 'datetime_visited', new Date(data.datetime));\n            console.log('project', project.slug, project.datetime_visited);\n        },\n        delete_project(state, { project }) {\n            Vue.delete(state.object_projects, project.slug);\n        },\n\t},\n\tactions: {\n        reset_projects({state, commit, getters, rootGetters, dispatch}) {\n            // commit('set_projects', state.response_data_projects);\n            commit('moduleBatches/reset', null, { root: true });\n            commit('moduleHITs/reset', null, { root: true });\n            commit('moduleAssignments/reset', null, { root: true });\n            commit('moduleWorkers/reset', null, { root: true });\n        },\n        clear_sandbox({state, commit, rootGetters, dispatch}) {\n            commit('moduleBatches/clear_sandbox', null, {root: true});\n            commit('moduleHITs/clear_sandbox', null, {root: true});\n            commit('moduleAssignments/clear_sandbox', null, {root: true});\n            commit('moduleWorkers/clear_sandbox', null, {root: true});\n        },\n\t},\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/projects.js",
			"file_size": 11660,
			"file_write_time": 131883281376364685,
			"settings":
			{
				"buffer_size": 11660,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/dist/app.py",
			"settings":
			{
				"buffer_size": 13929,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/dist/Dockerfile",
			"settings":
			{
				"buffer_size": 570,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/views/templates_global.py",
			"settings":
			{
				"buffer_size": 3603,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import _ from 'lodash';\n\nexport default class Template_Assignment \n{\n\tconstructor(data=undefined) \n\t{\n\t\tthis.id = data != undefined ? data.id : undefined;\n\t\tthis.name = data != undefined ? data.name : undefined;\n\t\tthis.template = data != undefined ? data.template : undefined;\n\t}\n\n\tupdate(data)\n\t{\n\t\t_.forEach(data, (value, key) => {\n\t\t\tthis[key] = value;\n\t\t});\n\t}\n\n\tget_changes(template_assignment) {\n\t\tconst object = {};\n\t\tfor(const key in this)\n\t\t{\n\t\t\t// if(template_assignment[key] != undefined)\n\t\t\t{\n\t\t\t\tif(this[key] != template_assignment[key])\n\t\t\t\t{\n\t\t\t\t\tif(typeof(template_assignment[key]) == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(\n\t\t\t\t\t\t\t_.differenceBy(template_assignment[key], this[key], (value) => value['text'].toLowerCase()).length > 0 ||\n\t\t\t\t\t\t\t_.differenceBy(this[key], template_assignment[key], (value) => value['text'].toLowerCase()).length > 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tobject[key] = template_assignment[key];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst value = template_assignment[key];\n\t\t\t\t\t\tif(value == undefined)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tobject[key] = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobject[key] = value;\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/template_assignment.js",
			"file_size": 1137,
			"file_write_time": 131883281376164686,
			"settings":
			{
				"buffer_size": 1137,
				"line_ending": "Unix",
				"name": "template_assignment.js"
			}
		},
		{
			"contents": "<template>\n<div>\n    <h2 class=\"headline\">Administration</h2>\n    <v-dialog \n        v-model=\"dialog\"\n        max-width=\"500\"\n    >\n\t    <v-btn \n            slot=\"activator\" \n\t        color=\"error\"\n\t    >\n            <v-icon>delete_forever</v-icon>\n\t    \tDelete Project\n\t\t</v-btn>\n\n\t\t<v-card>\n            <!-- <v-card-title>\n                <span class=\"headline\">Add Profile</span>\n                <v-spacer></v-spacer>\n                <v-btn icon v-on:click=\"dialog = false\">\n                    <v-icon>close</v-icon>\n                </v-btn>\n            </v-card-title> -->\n            <v-card-text>\n                Do you really want to delete this project? \n            </v-card-text>\n\n            <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn\n                    flat\n                    color=\"error\"\n                    v-on:click=\"confirm\"\n                >Delete</v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-dialog>\n</div>\n</template>\n\n<script>\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nexport default {\n\tname: 'component_delete_project',\n    data() {\n        return {\n        \tdialog: false,\n        }\n    },\n    methods: {\n    \tasync confirm() {\n    \t\tawait this.delete_project(this.$router);\n    \t},\n    \t...mapActions('moduleProjects', {\n    \t\t'delete_project': 'delete_project',\n    \t}),\n    },\n    computed: {\n\n    },\n    components: {\n\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/delete_project/component_delete_project.vue",
			"file_size": 1565,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 1481,
				"line_ending": "Unix",
				"name": "component_delete_project.vue"
			}
		},
		{
			"contents": "import axios from 'axios';\nimport _ from 'lodash';\nimport Vue from 'vue';\nimport { Service_Endpoint } from '../../services/service_endpoint';\n\nexport const moduleKeywords = {\n\tnamespaced: true,\n\tstate: {\n        object_keywords: null,\n        url_api_keywords: undefined,\n\t},\n\tgetters: {\n    \tget_object_keywords: (state) => {\n\t\t\treturn state.object_keywords;\n    \t},\n\t},\n\tmutations: {\n\t\tset_keywords(state, data) {\n        \tstate.object_keywords= {};\n        \t\n        \t_.forEach(data, function(keyword){\n    \t\t\t// const object_project = new Project(keyword);\n    \t\t\tVue.set(state.object_keywords, keyword.text, keyword);\n        \t});\n\t\t},\n        set_urls(state, config) {\n            state.url_api_keywords = config.url_api_keywords;\n\t\t},\n\t},\n\tactions: {\n\t},\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/keywords.js",
			"file_size": 763,
			"file_write_time": 131883281376364685,
			"settings":
			{
				"buffer_size": 763,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_settings_batch.py",
			"settings":
			{
				"buffer_size": 2510,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "serializer_settings_batch.py"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_template_worker.py",
			"settings":
			{
				"buffer_size": 4884,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "serializer_template_worker.py"
			}
		},
		{
			"contents": "<template>\n<v-app dark>\n    <router-view v-if=\"has_loaded_projects\">\n    </router-view>\n\n    <template v-else>\n        <v-spacer></v-spacer>\n            <div class=\"text-xs-center\">\n                <v-progress-circular\n                    indeterminate\n                    color=\"primary\"\n                ></v-progress-circular>\n            </div>\n        <v-spacer></v-spacer>\n    </template>\n</v-app>\n</template>\n\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import {Service_Endpoint} from \"./services/service_endpoint\";\n    import {router} from \"./services/service_router\";\n    import {Service_Projects} from \"./services/service_projects\";\n    // import ComponentToolbarWorkers from './components/workers/component_toolbar_workers.vue';\nexport default {\n    name: 'app',\n    data() {\n        return {\n            has_loaded_projects: false,\n        }\n    },\n    created: async function() {\n        await this.init();\n\n        Service_Endpoint.init(\n            this.token_instance,\n            () => {\n                router.push({name: 'connection_error'});\n            }\n        );\n\n        await Service_Projects.load_projects();\n\n        Service_Projects.load_project_data();\n\n        this.has_loaded_projects = true;\n    },\n    watch: {\n        slug_project_current() {\n            Service_Projects.load_project_data();\n        }\n    },\n    computed: {\n        ...mapState(['token_instance']),\n        ...mapGetters('moduleProjects', {\n            'slug_project_current': 'get_slug_project_current',\n        }),\n    },\n    methods: {\n        ...mapActions([\n            'init', \n        ]),\n    },\n    components: {\n    }\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/App.vue",
			"file_size": 1670,
			"file_write_time": 131883281376164686,
			"settings":
			{
				"buffer_size": 1670,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import \"@babel/polyfill\";\n\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport Vuetify from 'vuetify';\nimport Vuelidate from 'vuelidate'\nimport App from './App.vue';\nimport { store } from './store/vuex.js';\nimport UploadButton from 'vuetify-upload-button';\nimport 'material-design-icons-iconfont/dist/material-design-icons.css';\nimport 'vuetify/dist/vuetify.min.css';\n\nimport {router} from './services/service_router'\n\nVue.use(Vuetify)\nVue.use(VueRouter)\nVue.use(UploadButton);\nVue.use(Vuelidate);\n\nnew Vue({\n\trouter,\n\tstore,\n\tel: '#app',\n\trender: h => h(App)\n});",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/index.js",
			"file_size": 577,
			"file_write_time": 131883281376324685,
			"settings":
			{
				"buffer_size": 577,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n    <component-navigation-drawer    \n        v-bind:show_drawer.sync=\"show_drawer\"\n    ></component-navigation-drawer>\n    \n    <v-progress-linear \n        v-bind:active=\"get_show_progress_indicator\" \n        height=\"4\" \n        app \n        indeterminate \n        style=\"z-index: 50; position: absolute; margin: 0\"\n    ></v-progress-linear>\n\n    <v-toolbar \n        app \n        fixed \n        clipped-left\n        v-bind:style=\"object_styles_toolbar\"\n    >\n        <v-toolbar-side-icon @click.stop=\"show_drawer = !show_drawer\"></v-toolbar-side-icon>\n        <v-toolbar-title>\"{{ project_current.name }}\" - {{name_route_current}}</v-toolbar-title>\n\n        <v-spacer></v-spacer>\n\n        <v-layout align-center justify-end>\n            <v-flex shrink>\n                <v-tooltip bottom>\n                    <v-switch \n                        hide-details \n                        slot=\"activator\" \n                        v-bind:label=\"use_sandbox ? 'Toggle Sandbox' : 'Toggle Sandbox'\" \n                        v-bind:input-value=\"use_sandbox\" \n                        v-on:click.native=\"toggle_use_sandbox\"\n                    ></v-switch>\n                    <span>You are currently <b v-if=\"!use_sandbox\">not</b> using the Sandbox</span>\n                </v-tooltip>\n            </v-flex>\n\n            <v-divider \n                class=\"mx-2\"\n                inset\n                vertical\n            ></v-divider>\n\n            <v-flex shrink>\n                <component  \n                    v-bind:name_route=\"name_route_current\"\n                    v-bind:is=\"currentTabComponent\"\n                ></component>\n            </v-flex>\n        </v-layout>\n    </v-toolbar>\n\n    <v-content>\n        <v-container fluid>\n            <router-view></router-view>\n        </v-container>\n    </v-content>\n</div>\n</template>\n\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import ComponentNavigationDrawer from '../component-navigation-drawer.vue';\n    import ComponentToolbarBatches from '../batches/component_toolbar_batches.vue';\n    import ComponentToolbarQualifications from '../qualifications/component-toolbar-qualifications.vue';\n    import slug_project from '../../mixins/slug_project';\nexport default {\n    mixins: [\n        slug_project,\n        // load_data,\n    ],\n    // props: {\n    //     // id_batch: {\n    //     // },\n    // },\n    name: 'app-project',\n    data () {\n        return {\n            show_drawer: true,\n            id_interval: undefined,\n        }\n    },\n    methods: {\n        toggle_use_sandbox: function() {\n            this.set_use_sandbox(!this.use_sandbox);\n        },\n        ...mapActions([\n            'set_use_sandbox',\n        ]),\n    },\n    computed: {\n        object_styles_toolbar: function() {\n            if(this.use_sandbox) {\n                return {'background-color': '#dd6e00'};\n            } else {\n                return {};\n            }\n        },\n        currentTabComponent: function() {\n            console.log('this.route', this.$route)\n            switch(this.$route.name) \n            {\n                case 'finances':\n                case 'batches':\n                case 'batch':\n                case 'hits':\n                case 'hit':\n                case 'assignments':\n                case 'assignment':\n                case 'workers':\n                    return ComponentToolbarBatches;\n                case 'qualifications':\n                    return ComponentToolbarQualifications;\n                // case 'workers':\n                //     return ComponentToolbarWorkers;\n            }\n        },\n        name_route_current: function() {\n            // return this.$router.currentRoute;\n            return this.$route.name;\n        },\n        ...mapState(['use_sandbox']),\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n            'slug_project_current': 'get_slug_project_current',\n            'object_projects': 'get_object_projects',\n        }),\n        ...mapGetters(['get_show_progress_indicator']),\n    },\n    components: {\n        ComponentNavigationDrawer,\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    // sandbox switch\n    .v-input--selection-controls {\n        padding-top: 0;\n    }\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/project/app_project.vue",
			"file_size": 4331,
			"file_write_time": 131913600185346913,
			"settings":
			{
				"buffer_size": 4272,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<span>\n    <template \n        v-if=\"$route.name == 'assignments'\"\n    >\n        <component-list-assignments\n            v-bind:show_links=\"true\"\n        ></component-list-assignments>\n        <component-annotate>\n        </component-annotate>\n    </template>\n    <template \n        v-else-if=\"$route.name == 'assignment'\"\n    >\n        <component-assignment-detail\n            v-bind:id_assignment=\"id_assignment\"\n        ></component-assignment-detail>\n    </template>\n</span>\n</template>\n\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    \n    // import ComponentCreateBatch from './create/component_create_batch.vue';\n    import ComponentListAssignments from './list/component_list_assignments.vue';\n    import ComponentAssignmentDetail from './detail/component_assignment_detail.vue';\n    import ComponentAnnotate from './annotate/component_annotate.vue';\n    // import ComponentShowMoneySpent from './component-show-money-spent.vue';\n    // import ComponentShowBatches from './component-show-batches.vue';\n    import slug_project from '../../mixins/slug_project';\nexport default {\n    mixins: [\n        slug_project,\n    ],\n    props: {\n        id_assignment: {\n        }\n    },\n    name: 'app-assignments',\n    data () {\n        return {\n        }\n    },\n    methods: {\n    },\n    watch: {\n    },\n    computed: {\n    },\n    created: function() {\n    },\n\n    components: {\n     // ComponentCreateBatch,\n     ComponentListAssignments,\n     ComponentAssignmentDetail,\n     ComponentAnnotate,\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/assignments/app_assignments.vue",
			"file_size": 2333,
			"file_write_time": 131918795566570834,
			"settings":
			{
				"buffer_size": 1548,
				"line_ending": "Unix",
				"name": "app_assignments.vue"
			}
		},
		{
			"contents": "import _ from 'lodash';\nimport { normalize_answer } from './helpers';\n\nexport default class Loader\n{\n\tconstructor()\n\t{\n\t\tthis.context = JSON.parse($('#context').html());\n\t\tthis.project = {};\n\t\tthis.message_reject_default = '';\n\t\tthis.object_assignments = {};\n\t\tthis.object_hits = {};\n\t\tthis.object_batches = {};\n\t\tthis.object_workers = {};\n\t\tthis.set_ids_worker = new Set();\n\t\tthis.array_messages_reject = [];\n\n\t\tthis.object_assignments_selected = {};\n\t\tconsole.log(this.context)\n\n\t\tthis.init()\n\t}\n\n\tasync sync_data()\n\t{\n\t\tawait this.load_project();\n\t\tawait this.load_assignments();\n    \tawait this.load_hits();\n\t\tawait this.load_batches()\n\t\tawait this.load_workers();\n\t\tawait this.load_messages_reject();\n\t}\n\n\tasync load_messages_reject() {\n\t\tconst url = this.context.url_api_messages_reject;\n\n\t\tconst result = await $.ajax({\n\t        url: url,\n\t        method: 'GET',\n\t        contentType: 'application/json',\n\t        headers: {\n\t            Authorization: 'Token ' + this.context.token_instance,\n\t            \"Content-Type\": 'application/json',\n\t        },\n\t    });\n\n\t\tthis.array_messages_reject = _.orderBy(result, 'usage_count', 'desc')\n\t}\n\n\tasync load_project() {\n\t\tconst url = this.context.url_api_project;\n\n\t\tconst result = await $.ajax({\n\t        url: url,\n\t        method: 'GET',\n\t        data: JSON.stringify(_.toArray(this.set_ids_worker)),\n\t        contentType: 'application/json',\n\t        headers: {\n\t            Authorization: 'Token ' + this.context.token_instance,\n\t            \"Content-Type\": 'application/json',\n\t        },\n\t    });\n\n\t\tthis.project = result;\n\t\tif(this.project.message_reject_default != undefined)\n\t\t{\n\t\t\tthis.message_reject_default = this.project.message_reject_default.message\t\t\t\n\t\t}\n\t}\n\n\tasync load_assignments()\n\t{\n\t\tlet url = this.context.url_api_assignments;\n\t\turl += '?list_ids=['+this.context.list_ids.join(',')+']';\n\n\t\tconst result = await $.ajax({\n\t        url: url,\n\t        method: 'GET',\n\t        contentType: 'application/json',\n\t        headers: {\n\t            Authorization: 'Token ' + this.context.token_instance,\n\t            \"Content-Type\": 'application/json',\n\t        },\n\t    });\n\n\t\t_.forEach(result, (assignment) => {\n\t\t\tthis.set_ids_worker.add(assignment.worker);\n\t\t\tassignment.answer = normalize_answer(assignment.answer);\n    \t\tthis.object_assignments[assignment.id] = assignment;\n\t\t});\n\n\t}\n\n\tasync load_hits()\n\t{\n\t\tconst set_ids_hit = new Set();\n\t\t_.forEach(this.object_assignments, (assignment) => {\n\t\t\tset_ids_hit.add(assignment.hit);\n\t\t});\n\n\t\tlet url = this.context.url_api_hits;\n\t\turl += '?list_ids=['+_.toArray(set_ids_hit).join(',')+']';\n\n\t\tconst result = await $.ajax({\n\t        url: url,\n\t        method: 'GET',\n\t        contentType: 'application/json',\n\t        headers: {\n\t            Authorization: 'Token ' + this.context.token_instance,\n\t            'Content-Type': 'application/json',\n\t        },\n\t    });\n\n\t\t_.forEach(result, (hit) =>  {\n\t\t\thit.parameters = JSON.parse(hit.parameters);\n    \t\tthis.object_hits[hit.id] = hit;\n\t\t});\n\n\t\t_.forEach(this.object_assignments, (assignment) => {\n\t\t\tconst hit = this.object_hits[assignment.hit];\n\t\t\tassignment.hit = hit;\n\n\t\t\tif(hit.assignments == undefined)\n\t\t\t{\n\t\t\t\thit.assignments = [assignment];\n\t\t\t} else {\n\t\t\t\thit.assignments.push(assignment);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync load_batches()\n\t{\n\t\tconst set_ids_batch = new Set();\n\t\t_.forEach(this.object_hits, (hit) => {\n\t\t\tset_ids_batch.add(hit.batch);\n\t\t});\n\n\t\tlet url = this.context.url_api_batches;\n\t\turl += '?list_ids=['+_.toArray(set_ids_batch).join(',')+']';\n\n\t\tconst result = await $.ajax({\n\t        url: url,\n\t        method: 'GET',\n\t        contentType: 'application/json',\n\t        headers: {\n\t            Authorization: 'Token ' + this.context.token_instance,\n\t            'Content-Type': 'application/json',\n\t        },\n\t    });\n\n\t\t_.forEach(result, (batch) => {\n    \t\tthis.object_batches[batch.id] = batch;\n\t\t});\n\n\t\t_.forEach(this.object_hits, (hit) => {\n\t\t\tconst batch = this.object_batches[hit.batch];\n\t\t\thit.batch = batch;\n\n\t\t\tif(batch.hits == undefined)\n\t\t\t{\n\t\t\t\tbatch.hits = [hit];\n\t\t\t} else {\n\t\t\t\tbatch.hits.push(hit);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync load_workers() {\n\t\tconst url = this.context.url_api_workers;\n\n\t\tconst result = await $.ajax({\n\t        url: url,\n\t        method: 'PATCH',\n\t        data: JSON.stringify(_.toArray(this.set_ids_worker)),\n\t        contentType: 'application/json',\n\t        headers: {\n\t            Authorization: 'Token ' + this.context.token_instance,\n\t            \"Content-Type\": 'application/json',\n\t        },\n\t    });\n\n\t\t_.forEach(result, (worker) => {\n    \t\tthis.object_workers[worker.id] = worker;\n\t\t});\n\n\t\t_.forEach(this.object_assignments, (assignment) => {\n\t\t\tassignment.worker = this.object_workers[assignment.worker];\n\t\t});\n\t}\n\n\tinit() {\n\t\t_.forEach(this.context, (value, key) => {\n\t\t\tif(key.startsWith('url_'))\n\t\t\t{\n\t\t\t\tthis.context[key] = value.replace('PLACEHOLDER_SLUG_PROJECT', this.context.slug_project);\n\t\t\t}\n\t\t\t// console.log(key)\n\t\t\t// console.log(property)\n\t\t})\n\t}\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/annotate/loader.js",
			"file_size": 5130,
			"file_write_time": 131891282904219667,
			"settings":
			{
				"buffer_size": 4989,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk/package.json",
			"settings":
			{
				"buffer_size": 2226,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n    <v-dialog \n        v-model=\"dialog\"\n        max-width=\"500\"\n    >\n        <v-btn\n            slot=\"activator\" \n            icon\n            small\n            v-on:click=\"dialog = true\"\n        >\n            <v-icon color=\"error\">delete</v-icon>\n        </v-btn>\n\n        <v-card>\n            <!-- <v-card-title>\n                <span class=\"headline\">Add Profile</span>\n                <v-spacer></v-spacer>\n                <v-btn icon v-on:click=\"dialog = false\">\n                    <v-icon>close</v-icon>\n                </v-btn>\n            </v-card-title> -->\n            <v-card-text>\n                Do you really want to delete the batch profile '{{ settings_batch_current.name }}'? \n            </v-card-text>\n\n            <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn\n                    flat\n                    color=\"error\"\n                    v-on:click=\"remove()\"\n                >Delete</v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-dialog>\n</template>\n\n<script>\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nexport default {\n    props: {\n        settings_batch_current: {\n        }\n    },\n    data() {\n        return {\n            dialog: false,\n        }\n    },\n    methods: {\n        remove() {\n            this.delete_settings_batch({\n                project: this.project_current,\n                settings_batch: this.settings_batch_current,\n                callback: () => {\n                    this.$emit('deleted');\n                    this.dialog = false;\n                },\n            }).then(() => {\n            });\n        },\n        ...mapActions('moduleProjects', {\n            'delete_settings_batch': 'delete_settings_batch',\n        }),\n    },\n    computed: {\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    components: {\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/settings_batch/component_delete_settings_batch.vue",
			"file_size": 2069,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 1964,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n    <v-layout wrap>\n        <v-flex xs6 class=\"pa-1\">\n            <component-settings-batch>\n            </component-settings-batch>\n        </v-flex>\n        <v-flex xs6 class=\"pa-1\">\n            <component-block-limit>\n            </component-block-limit>\n            <component-messages-reject-default>\n            </component-messages-reject-default>\n        </v-flex>\n    </v-layout>\n    \n    <v-layout wrap>\n        <v-flex xs class=\"pa-1\">\n            <component-templates-worker>\n            </component-templates-worker>\n        </v-flex>\n    </v-layout>\n    \n    <v-layout wrap>\n        <v-flex xs6 class=\"pa-1\">\n            <component-templates-assignment>\n            </component-templates-assignment>\n        </v-flex>\n        <v-flex xs6 class=\"pa-1\">\n            <component-templates-hit>\n            </component-templates-hit>\n        </v-flex>\n    </v-layout>\n    \n    <v-layout wrap>\n        <v-flex xs6 class=\"pa-1\">\n            <component-templates-global>\n            </component-templates-global>\n        </v-flex>\n        <v-flex shrink class=\"pa-1\">\n            <component-clear-sandbox>\n            </component-clear-sandbox>\n        </v-flex>\n        <!--<v-flex shrink class=\"pa-1\">-->\n            <!--<component-delete-project>-->\n            <!--</component-delete-project>-->\n        <!--</v-flex>-->\n    </v-layout>\n</div>\n</template>\n\n<script>\n    import ComponentBlockLimit from './block_limit/component_block_limit.vue';\n    import ComponentMessagesRejectDefault from './messages_reject/component_messages_reject_default.vue';\n    import ComponentSettingsBatch from './settings_batch/component_settings_batch.vue';\n    import ComponentTemplatesWorker from './templates_worker/component_templates_worker.vue';\n    import ComponentTemplatesAssignment from './templates_assignment/component_templates_assignment.vue';\n    import ComponentTemplatesGlobal from './templates_global/component_templates_global.vue';\n    import ComponentTemplatesHit from './templates_hit/component_templates_hit.vue';\n    import ComponentClearSandbox from './clear_sandbox/component_clear_sandbox.vue';\n    import ComponentDeleteProject from './delete_project/component_delete_project.vue';\n    import slug_project from '../../mixins/slug_project';\n\nexport default {\n    mixins: [\n        slug_project,\n    ],\n    name: 'app_settings_project',\n\n    data () {\n        return {\n\n        }\n    },\n    components: {\n        ComponentBlockLimit,\n        ComponentMessagesRejectDefault,\n        ComponentSettingsBatch,\n        ComponentTemplatesWorker,\n        ComponentTemplatesAssignment,\n        ComponentTemplatesGlobal,\n        ComponentTemplatesHit,\n        ComponentClearSandbox,\n        ComponentDeleteProject,\n    }\n}\n</script>\n\n<style lang=\"css\" scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/app_settings_project.vue",
			"file_size": 2849,
			"file_write_time": 131898058746470407,
			"settings":
			{
				"buffer_size": 2793,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n\t<h2 class=\"headline\">Global Templates</h2>\n    <component-list-templates-global></component-list-templates-global>\n</div>\n</template>\n\n<script>\n    import ComponentListTemplatesGlobal from './component_list_templates_global.vue';\n\t// import settings_batch from '../../../mixins/settings_batch';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\nexport default {\n    // mixins: [\n    //     settings_batch,\n    // ],\n\tname: 'component-templates-global',\n\tdata () {\n\t\treturn {\n\t\t\t// search: undefined,\n\t\t}\n\t},\n\tmethods: {\n\t},\n    computed: {\n    },\n    components: {\n        ComponentListTemplatesGlobal\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_global/component_templates_global.vue",
			"file_size": 716,
			"file_write_time": 131883281376284685,
			"settings":
			{
				"buffer_size": 716,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n    <v-data-table\n        v-bind:headers=\"list_headers\"\n        v-bind:items=\"list_templates_global\"\n    >\n        <template\n            slot=\"items\"\n            slot-scope=\"props\"\n        >\n            <tr>\n                <td>\n                    {{ props.item.name }}\n                </td>\n                <td>\n                    <component-edit-template-global\n                        v-bind:key=\"`component-edit-template-global-${props.item.id}`\"\n                        v-bind:template_global_current=\"props.item\"\n                        v-on:edited=\"snackbar_edited = true\"\n                    ></component-edit-template-global>\n                    <component-delete-template-global\n                        v-bind:key=\"`component-delete-template-global-${props.item.id}`\"\n                        v-bind:template_global=\"props.item\"\n                        v-on:deleted=\"snackbar_deleted = true\"\n                    ></component-delete-template-global>\n                </td>\n            </tr>\n        </template>\n        <template slot=\"no-data\">\n            <div class=\"text-xs-center\">\n                There exist no templates!\n            </div>\n        </template>\n        <template slot=\"footer\">\n        <td colspan=\"100%\">\n        \t<component-add-template-global\n                v-on:created=\"snackbar_created = true\"\n            ></component-add-template-global>\n        </td>\n    </template>\n    </v-data-table>\n\n    <v-snackbar\n        v-model=\"snackbar_deleted\"\n        v-bind:timeout=\"1500\"\n        bottom\n    >\n        <v-spacer></v-spacer>\n        Deleted!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n\n    <v-snackbar\n        v-model=\"snackbar_created\"\n        v-bind:timeout=\"1500\"\n        bottom\n        color=\"success\"\n    >\n        <v-spacer></v-spacer>\n        Saved!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n\n    <v-snackbar\n        v-model=\"snackbar_edited\"\n        v-bind:timeout=\"1500\"\n        bottom\n        color=\"success\"\n    >\n        <v-spacer></v-spacer>\n        Updated!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n</div>\n</template>\n\n<script>\n    import ComponentAddTemplateGlobal from './component_add_template_global.vue';\n    import ComponentDeleteTemplateGlobal from './component_delete_template_global.vue';\n    import ComponentEditTemplateGlobal from './component_edit_template_global.vue';\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n    import table from '../../../mixins/table';\nexport default {\n    mixins: [\n        table,\n    ],\n    name: 'component-list-templates-global',\n    data () {\n        return {\n            list_headers: [\n                {\n                    text: 'Name',\n                    value: 'name',\n                },\n                {\n                    text: 'Actions',\n                    value: '',\n                    sortable: false,\n                },\n            ],\n\n            snackbar_deleted: false,\n            snackbar_edited: false,\n            snackbar_created: false,\n        }\n    },\n    computed: {\n        list_templates_global() {\n        \t// return [{name:\"dawd\"}]\n            if(this.project_current.templates_global == null) return [];\n\n            return _.orderBy(this.project_current.templates_global, (template) => template.name);\n        },\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    methods: {\n    },\n    created: function() {\n    },\n    components: {\n        ComponentAddTemplateGlobal,\n        ComponentDeleteTemplateGlobal,\n    \tComponentEditTemplateGlobal,\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_global/component_list_templates_global.vue",
			"file_size": 3636,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 3634,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n    <v-dialog \n        v-model=\"dialog\"\n        max-width=\"80%\"\n        persistent\n    >\n        <v-btn\n            slot=\"activator\" \n            icon\n            small\n            v-on:click=\"dialog = true\"\n        >\n            <v-icon color=\"warning\">edit</v-icon>\n        </v-btn>\n      \t<v-card>\n\t        <v-card-title>\n\t            <span class=\"headline\">Edit Global Template</span>\n\t            <v-spacer></v-spacer>\n\t            <v-btn icon v-on:click=\"dialog = false\">\n\t                <v-icon>close</v-icon>\n\t            </v-btn>\n\t        </v-card-title>\n\t        <v-card-text>\n\t      \t\t<v-form ref=\"form\" lazy-validation>\n\t\t\t\t\t<v-text-field\n\t\t\t            required\n\t\t\t            label=\"Name\"\n\t\t\t  \t\t\tv-bind:value=\"template_global.name\"\n\t\t\t            v-on:input=\"template_global.name=$event; $v.template_global.name.$touch()\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_global.name\"\n\t\t\t        ></v-text-field>\n\t\t\t\t\t<v-textarea\n\t\t\t            required\n\t\t\t            rows=\"20\"\n\t\t\t  \t\t\tv-bind:value=\"template_global.template\"\n\t\t\t            v-on:input=\"template_global.template=$event; $v.template_global.template.$touch()\"\n\t\t\t            label=\"Template\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_global.template\"\n\t\t\t        ></v-textarea>\n\t\t    \t</v-form>\n\t\t\t</v-card-text>\n\n       \t \t<v-card-actions>\n\t\t\t    <v-btn\n\t\t\t    \tflat\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"înfo\"\n\t\t\t        v-on:click=\"dialog = false; reset();\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Cancel</v-btn>\n\t\t\t    <v-spacer></v-spacer>\n\t\t\t    <v-btn\n\t\t\t    \tflat\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"primary\"\n\t\t\t        v-on:click=\"update()\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Save</v-btn>\n\n\t\t\t    <v-btn\n\t\t\t    \tflat\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"success\"\n\t\t\t        v-on:click=\"update(true)\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Save and Close</v-btn>\n\t\t\t</v-card-actions>\n    \t</v-card>\n\t</v-dialog>\n\n\t<!-- <v-snackbar\n\t    v-model=\"show_snackbar\"\n\t    v-bind:timeout=\"1500\"\n\t    bottom\n\t    color=\"success\"\n\t>\n\t    Saved!\n\t    <v-btn\n\t        flat\n\t        v-on:click=\"show_snackbar = false\"\n\t    >\n\t        Close\n\t    </v-btn>\n\t</v-snackbar> -->\n</template>\n<script>\n\timport validations from '../../../mixins/validations';\n\timport helpers from '../../../mixins/helpers';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n    import { required, minValue, maxValue } from 'vuelidate/lib/validators'\n\timport Template_Global from '../../../classes/template_global';\nexport default {\n    mixins: [\n        helpers,\n        validations,\n    ],\n    props: {\n        template_global_current: {\n        }\n    },\n    data() {\n    \treturn {\n            template_global: new Template_Global(this.template_global_current),\n\t\t\tdialog: false,\n    \t}\n\n    },\n    methods: {\n\t\tupdate(close) {\n            if(this.$refs.form.validate()) \n            {\n    \t\t\tthis.edit_template_global({\n    \t\t\t\tdata: {\n\t    \t\t\t\ttemplate_global_current: this.template_global_current,\n\t    \t\t\t\ttemplate_global_new: this.template_global,\n    \t\t\t\t\tproject: this.project_current,\n\t    \t\t\t},\n    \t\t\t}).then(() => {\n    \t\t\t\tif(close == true)\n    \t\t\t\t{\n                    \tthis.dialog = false;\n    \t\t\t\t\tthis.reset();\n    \t\t\t\t}\n    \t\t\t\tthis.$emit('edited');\n                });\n            }\n\t\t\t// console.log(this.project_current);\n\t\t},\t\n    \treset() {\n            this.template_global = new Template_Global(this.template_global_current),\n    \t\tthis.$v.$reset();\n\t\t\tthis.$v.$touch();\n    \t},\n\t\t...mapActions('moduleProjects', {\n\t\t\t'edit_template_global': 'edit_template_global',\n\t\t}),\n    },\n    computed: {\n\t\tlist_templates_global() {\n            return _.orderBy(this.project_current.templates_global, (template) => template.name);\n\t\t},\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    watch: {\n    \tdialog() {\n    \t\tthis.reset();\n    \t},\n    },\n    validations: {\n    \ttemplate_global: {\n\t    \tname: {\n\t    \t\trequired,\n\t    \t},\n\t    \ttemplate: {\n\t    \t\trequired,\n\t    \t},\n    \t},\n    },\n    created() {\n\t\tthis.$v.$touch();\n\t},\n    components: {\n    },\t\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_global/component_edit_template_global.vue",
			"file_size": 4325,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 4224,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<v-dialog \n    v-model=\"dialog\"\n    max-width=\"500\"\n>\n    <v-btn\n        slot=\"activator\" \n        icon\n        small\n        v-on:click=\"dialog = true\"\n    >\n        <v-icon color=\"error\">delete</v-icon>\n    </v-btn>\n\n    <v-card>\n        <!-- <v-card-title>\n            <span class=\"headline\">Add Profile</span>\n            <v-spacer></v-spacer>\n            <v-btn icon v-on:click=\"dialog = false\">\n                <v-icon>close</v-icon>\n            </v-btn>\n        </v-card-title> -->\n        <v-card-text>\n            Do you really want to delete the global template '{{ template_global.name }}'? \n        </v-card-text>\n\n        <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n                flat\n                color=\"error\"\n                v-on:click=\"remove()\"\n            >Delete</v-btn>\n        </v-card-actions>\n    </v-card>\n</v-dialog>\n</template>\n\n<script>\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nexport default {\n    props: {\n        template_global: {\n        }\n    },\n    data() {\n        return {\n            dialog: false,\n        }\n    },\n    methods: {\n        remove() {\n            this.delete_template_global({\n                project: this.project_current,\n                template_global: this.template_global,\n                callback: () => {\n                    this.$emit('deleted');\n                    this.dialog = false;\n                },\n            }).then(() => {\n            });\n        },\n        ...mapActions('moduleProjects', {\n            'delete_template_global': 'delete_template_global',\n        }),\n    },\n    computed: {\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    components: {\n\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_global/component_delete_template_global.vue",
			"file_size": 1942,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 1818,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n\t<v-dialog v-model=\"dialog\">\n\t\t<v-btn \n\t\t\tslot=\"activator\" \n\t\t\tcolor=\"primary\"\n\t\t\tsmall\n\t\t><v-icon>add</v-icon> Add Template</v-btn>\n      \t<v-card>\n\t        <v-card-title>\n\t            <span class=\"headline\">Add Global Template</span>\n\t            <v-spacer></v-spacer>\n\t            <v-btn icon v-on:click=\"dialog = false\">\n\t                <v-icon>close</v-icon>\n\t            </v-btn>\n\t        </v-card-title>\n\t        <v-card-text>\n\t      \t\t<v-form ref=\"form\">\n\t\t\t\t\t<v-text-field\n\t\t\t            required\n\t\t\t            label=\"Name\"\n\t\t\t  \t\t\tv-bind:value=\"name\"\n\t\t\t            v-on:input=\"name=$event; $v.name.$touch()\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.name\"\n\t\t\t        ></v-text-field>\n\t\t\t\t\t<v-textarea\n\t\t\t            required\n\t\t\t            rows=\"20\"\n\t\t\t  \t\t\tv-bind:value=\"template\"\n\t\t\t            v-on:input=\"template=$event; $v.template.$touch()\"\n\t\t\t            label=\"Template\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template\"\n\t\t\t        ></v-textarea>\n\n\t\t\t        <!-- <component-form-settings-batch\n\t\t\t        \tv-bind.sync=\"settings_batch\"\n\t\t\t        ></component-form-settings-batch> -->\n\t\t    \t</v-form>\n\t\t\t    <v-btn\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"primary\"\n\t\t\t        v-on:click=\"create()\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Create</v-btn>\n\t\t\t</v-card-text>\n    \t</v-card>\n\t</v-dialog>\n</div>\n</template>\n\n<script>\n\t// import ComponentFormSettingsBatch from './component_form_settings_batch';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n\n\timport { required, minValue } from 'vuelidate/lib/validators'\n\timport validations from '../../../mixins/validations';\nexport default {\n    mixins: [\n        validations,\n    ],\n    data() {\n    \treturn {\n    \t\tname: undefined,\n    \t\ttemplate: undefined,\n\n\t\t\tdialog: false,\n    \t}\n    },\n    watch: {\n    \tdialog() {\n    \t\tthis.reset();\n    \t},\n    },\n    validations: {\n    \tname: {\n    \t\trequired,\n    \t},\n    \ttemplate: {\n    \t\trequired,\n    \t},\n    },\n    methods: {\n    \treset() {\n    \t\tthis.name = undefined;\n    \t\tthis.template = undefined;\n    \t\tthis.$v.$reset();\n    \t},\n\t\tcreate() {\n            if(this.$refs.form.validate()) \n            {\n    \t\t\tthis.create_template_global({\n    \t\t\t\ttemplate_global: {\n    \t\t\t\t\tname: this.name,\n    \t\t\t\t\ttemplate: this.template,\n    \t\t\t\t},\n    \t\t\t\tproject: this.project_current,\n    \t\t\t}).then(() => {\n    \t\t\t\tthis.$emit('created');\n                    this.dialog = false;\n                    this.reset();\n                });\n            }\n\t\t},\t\t\n\t\t...mapActions('moduleProjects', {\n\t\t\t'create_template_global': 'create_template_global',\n\t\t}),\n    },\n    computed: {\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n\tcomponents: {\n\t},\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_global/component_add_template_global.vue",
			"file_size": 2982,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 2838,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import _ from 'lodash';\n\nexport default class Template_Global \n{\n\tconstructor(data=undefined) \n\t{\n\t\tthis.id = data != undefined ? data.id : undefined;\n\t\tthis.name = data != undefined ? data.name : undefined;\n\t\tthis.template = data != undefined ? data.template : undefined;\n\t}\n\n\tupdate(data)\n\t{\n\t\t_.forEach(data, (value, key) => {\n\t\t\tthis[key] = value;\n\t\t});\n\t}\n\n\tget_changes(template_global) {\n\t\tconst object = {};\n\t\tfor(const key in this)\n\t\t{\n\t\t\t// if(template_global[key] != undefined)\n\t\t\t{\n\t\t\t\tif(this[key] != template_global[key])\n\t\t\t\t{\n\t\t\t\t\tif(typeof(template_global[key]) == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(\n\t\t\t\t\t\t\t_.differenceBy(template_global[key], this[key], (value) => value['text'].toLowerCase()).length > 0 ||\n\t\t\t\t\t\t\t_.differenceBy(this[key], template_global[key], (value) => value['text'].toLowerCase()).length > 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tobject[key] = template_global[key];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst value = template_global[key];\n\t\t\t\t\t\tif(value == undefined)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tobject[key] = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobject[key] = value;\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/template_global.js",
			"file_size": 1101,
			"file_write_time": 131883281376164686,
			"settings":
			{
				"buffer_size": 1101,
				"line_ending": "Unix",
				"name": "template_global.js"
			}
		},
		{
			"contents": "import _ from 'lodash';\n\nexport default class Template_HIT\n{\n\tconstructor(data=undefined) \n\t{\n\t\tthis.id = data != undefined ? data.id : undefined;\n\t\tthis.name = data != undefined ? data.name : undefined;\n\t\tthis.template = data != undefined ? data.template : undefined;\n\t}\n\n\tupdate(data)\n\t{\n\t\t_.forEach(data, (value, key) => {\n\t\t\tthis[key] = value;\n\t\t});\n\t}\n\n\tget_changes(template_hit) {\n\t\tconst object = {};\n\t\tfor(const key in this)\n\t\t{\n\t\t\t// if(template_hit[key] != undefined)\n\t\t\t{\n\t\t\t\tif(this[key] != template_hit[key])\n\t\t\t\t{\n\t\t\t\t\tif(typeof(template_hit[key]) == 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif(\n\t\t\t\t\t\t\t_.differenceBy(template_hit[key], this[key], (value) => value['text'].toLowerCase()).length > 0 ||\n\t\t\t\t\t\t\t_.differenceBy(this[key], template_hit[key], (value) => value['text'].toLowerCase()).length > 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tobject[key] = template_hit[key];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst value = template_hit[key];\n\t\t\t\t\t\tif(value == undefined)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tobject[key] = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobject[key] = value;\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/template_hit.js",
			"file_size": 1073,
			"file_write_time": 131883281376164686,
			"settings":
			{
				"buffer_size": 1073,
				"line_ending": "Unix",
				"name": "template_hit.js"
			}
		},
		{
			"contents": "import axios from 'axios';\nimport _ from 'lodash';\nimport Vue from 'vue';\nimport {Service_Endpoint} from '../../services/service_endpoint';\n\nexport const moduleMessagesReject = {\n\tnamespaced: true,\n\tstate: {\n        object_messages_reject: null,\n        url_api_messages_reject: undefined,\n\t},\n\tgetters: {\n    \tget_object_messages_reject: (state) => {\n\t\t\treturn state.object_messages_reject;\n    \t},\n    \tget_list_messages_reject: (state) => {\n\t\t\treturn _.orderBy(state.object_messages_reject, 'count_usage', 'desc');\n    \t},\n\t},\n\tmutations: {\n\t\tset_messages_reject(state, data) {\n        \tstate.object_messages_reject= {};\n        \t\n        \t_.forEach(data, function(message_reject){\n    \t\t\t// const object_project = new Project(message_reject);\n    \t\t\tVue.set(state.object_messages_reject, message_reject.message, message_reject);\n        \t});\n\t\t},\n\t\tadd_message_reject(state, {message_reject}) {\n\t\t\tVue.set(state.object_messages_reject, message_reject.message, message_reject);\n\t\t},\n        set_urls(state, config) {\n            state.url_api_messages_reject = config.url_api_messages_reject;\n\t\t},\n\t},\n\tactions: {\n\t},\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/messages_reject.js",
			"file_size": 1122,
			"file_write_time": 131883281376364685,
			"settings":
			{
				"buffer_size": 1122,
				"line_ending": "Unix",
				"name": "messages_reject.js"
			}
		},
		{
			"contents": "<template>\n<div>\n\t<h2 class=\"headline\">Worker Templates</h2>\n    <component-list-templates-worker></component-list-templates-worker>\n</div>\n</template>\n\n<script>\n    import ComponentListTemplatesWorker from './component_list_templates_worker.vue';\n\t// import settings_batch from '../../../mixins/settings_batch';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\nexport default {\n    // mixins: [\n    //     settings_batch,\n    // ],\n\tname: 'component-templates-worker',\n\tdata () {\n\t\treturn {\n\t\t\t// search: undefined,\n\t\t}\n\t},\n\tmethods: {\n\t},\n    computed: {\n    },\n    components: {\n        ComponentListTemplatesWorker\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_worker/component_templates_worker.vue",
			"file_size": 716,
			"file_write_time": 131883281376284685,
			"settings":
			{
				"buffer_size": 716,
				"line_ending": "Unix",
				"name": "component_templates_worker.vue"
			}
		},
		{
			"contents": "import axios from 'axios';\nimport Vue from 'vue';\nimport _ from 'lodash';\nimport Worker from '../../classes/workers.js';\nimport { STATUS_BLOCK } from '../../classes/enums.js';\nimport {Service_Endpoint} from '../../services/service_endpoint';\n\nexport const moduleWorkers = {\n\tnamespaced: true,\n\tstate: {\n        url_api_workers: undefined,\n        object_workers: {},\n        object_workers_sandbox: {},\n        \n        url_api_global_db: undefined,\n        // loaded_status_block: false,\n        // loaded_status_block_sandbox: false,\n\t},  \n    getters: {\n    \t// get_object_workers: (state, getters, rootState) => {\n    \tget_object_workers: (state, getters, rootState) => (use_sandbox=undefined) => {\n    \t\tif(use_sandbox == undefined)\n    \t\t{\n    \t\t\treturn rootState.use_sandbox ? state.object_workers_sandbox : state.object_workers;\n    \t\t} else {\n    \t\t\treturn use_sandbox ? state.object_workers_sandbox : state.object_workers;\n    \t\t}\n    \t},\n    \tlist_workers: (state, getters, rootState) => {\n    \t\t// console.log('done')\n    \t\t// const object_current = rootState.use_sandbox ? state.object_workers_sandbox : state.object_workers;\n    \t\t// console.log(state.object_workers_sandbox)\n    \t\tif(getters.get_object_workers() == null)\n    \t\t{\n    \t\t\treturn [];\n    \t\t\t// return {};\n\t\t\t}\n            return _.values(getters.get_object_workers());\n            // return _.orderBy(object_current, ['created_at'], ['desc']);\n    \t},\n\t},\n\tmutations: {\n        set_urls(state, config) {\n            state.url_api_workers = config.url_api_workers;\n            state.url_api_workers_get_blocks_hard = config.url_api_workers_get_blocks_hard;\n        },\n        // set_url_api_global_db(state, url_new) {\n        //     state.url_api_global_db = url_new;\n        // },\n\t\tupdate_worker(state, {data_worker, use_sandbox}) {\n\t\t\tlet object_workers = null;\n\t\t\tif(use_sandbox)\n\t\t\t{\n\t\t\t\tobject_workers = state.object_workers_sandbox;\n\t\t\t} else {\n\t\t\t\tobject_workers = state.object_workers;\n\t\t\t}\n\n\t\t\tconst obj_worker = new Worker(data_worker);\n\t\t\tVue.set(object_workers, obj_worker.name, obj_worker);\n\t\t},\n        set_worker(state, {worker, worker_new, array_fields}) {\n            _.forEach(array_fields, function(name_field) {\n                Vue.set(worker, name_field, worker_new[name_field]);\n            });   \n        },\n\t\t// update_worker_count_assignments_limit(state, {worker, value, use_sandbox}) {\n\t\t// \tlet object_workers = null;\n\t\t// \tif(use_sandbox)\n\t\t// \t{\n\t\t// \t\tobject_workers = state.object_workers_sandbox;\n\t\t// \t} else {\n\t\t// \t\tobject_workers = state.object_workers;\n\t\t// \t}\n\n\t\t// \tVue.set(object_workers[worker.name], 'count_assignments_limit', value);\n\t\t// },\n\t\tupdate_status_block_soft(state, {worker, data, use_sandbox}) {\n\t\t\tlet object_workers = null;\n\t\t\tif(use_sandbox)\n\t\t\t{\n\t\t\t\tobject_workers = state.object_workers_sandbox;\n\t\t\t} else {\n\t\t\t\tobject_workers = state.object_workers;\n\t\t\t}\n\n\t\t\tVue.set(object_workers[worker.id], 'is_blocked_soft', data.is_blocked_soft);\n\t\t},\n\t\tupdate_status_block_hard(state, {worker, data, use_sandbox}) {\n\t\t\tlet object_workers = null;\n\t\t\tif(use_sandbox)\n\t\t\t{\n\t\t\t\tobject_workers = state.object_workers_sandbox;\n\t\t\t} else {\n\t\t\t\tobject_workers = state.object_workers;\n\t\t\t}\n\n\t\t\tVue.set(object_workers[worker.id], 'is_blocked_hard', data.is_blocked_hard);\n\t\t},\n\t\tupdate_status_block_global(state, {worker, data, use_sandbox}) {\n\t\t\tlet object_workers = null;\n\t\t\tif(use_sandbox)\n\t\t\t{\n\t\t\t\tobject_workers = state.object_workers_sandbox;\n\t\t\t} else {\n\t\t\t\tobject_workers = state.object_workers;\n\t\t\t}\n\n\t\t\tVue.set(object_workers[worker.id], 'is_blocked_global', data.is_blocked_global);\n\t\t},\n\t\t// update_worker_sandbox(state, data_worker) {\n\t\t// \tconst obj_worker = new Worker(data_worker);\n\t\t// \tVue.set(state.object_workers_sandbox, obj_worker.name, obj_worker);\n\t\t// },\n\t\tset_workers(state, {data_workers, use_sandbox}) {\n\t\t\tlet object_workers = null;\n\t\t\tif(use_sandbox)\n\t\t\t{\n\t\t\t\tstate.object_workers_sandbox = {};\n\t\t\t\tobject_workers = state.object_workers_sandbox;\n\t\t\t} else {\n\t\t\t\tstate.object_workers = {};\n\t\t\t\tobject_workers = state.object_workers;\n\t\t\t}\n\n        \t_.forEach(data_workers, function(data_worker){\n    \t\t\tconst obj_worker = new Worker(data_worker);\n    \t\t\tVue.set(object_workers, obj_worker.id, obj_worker);\n        \t});\n\t\t},\n\t\tappend_workers(state, {data_workers, use_sandbox}) {\n\t\t\tlet object_workers = null;\n\t\t\tif(use_sandbox)\n\t\t\t{\n\t\t\t\tobject_workers = state.object_workers_sandbox;\n\t\t\t} else {\n\t\t\t\tobject_workers = state.object_workers;\n\t\t\t}\n\n        \t_.forEach(data_workers, function(data_worker){\n    \t\t\tconst obj_worker = new Worker(data_worker);\n    \t\t\tVue.set(object_workers, obj_worker.id, obj_worker);\n        \t});\n\t\t},\n\t\t// set_workers(state, {data_workers, use_sandbox}) {\n\t\t// \tlet object_workers = null;\n\t\t// \tif(use_sandbox)\n\t\t// \t{\n\t\t// \t\tstate.object_workers_sandbox = {};\n\t\t// \t\tobject_workers = state.object_workers_sandbox;\n\t\t// \t} else {\n\t\t// \t\tstate.object_workers = {};\n\t\t// \t\tobject_workers = state.object_workers;\n\t\t// \t}\n\n  //       \t_.forEach(data_workers, function(data_worker){\n  //   \t\t\tconst obj_worker = new Worker(data_worker);\n  //   \t\t\tVue.set(object_workers, obj_worker.name, obj_worker);\n  //       \t});\n\t\t// },\n\t\tset_blocks_hard(state, {array_blocks_hard, use_sandbox}) {\n\t\t\tconst set_blocked_hard = new Set(array_blocks_hard);\n\n\t\t\tlet object_workers = null;\n\t\t\tif(use_sandbox)\n\t\t\t{\n\t\t\t\tobject_workers = state.object_workers_sandbox;\n\t\t\t} else {\n\t\t\t\tobject_workers = state.object_workers;\n\t\t\t}\n\n\t\t\t_.forEach(object_workers, (worker) => {\n\t\t\t\tif(set_blocked_hard.has(worker.id)) {\n\t\t\t\t\tVue.set(worker, 'is_blocked_hard', true);\n\t\t\t\t} else {\n\t\t\t\t\tVue.set(worker, 'is_blocked_hard', false);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tset_data_global_db(state, {data, use_sandbox}) {\n\t\t\tconst data_status_block = data.blocks;\n\t\t\tconst object_counters = data.counters;\n\n\t\t\tconst set_blocked_soft = new Set(data_status_block.soft);\n\t\t\tconst set_blocked_hard = new Set(data_status_block.hard);\n\n\t\t\tlet object_workers = null;\n\t\t\tif(use_sandbox)\n\t\t\t{\n\t\t\t\tobject_workers = state.object_workers_sandbox;\n\t\t\t} else {\n\t\t\t\tobject_workers = state.object_workers;\n\t\t\t}\n\t\t\t\n\t\t\t_.forEach(object_workers, (worker) => {\n\t\t\t\tif(set_blocked_soft.has(worker.name))\n\t\t\t\t{\n\t\t\t\t\tVue.set(worker, 'is_blocked_soft', true);\n\t\t\t\t} else {\n\t\t\t\t\tVue.set(worker, 'is_blocked_soft', false);\n\t\t\t\t}\n\n\t\t\t\tif(set_blocked_hard.has(worker.name)) {\n\t\t\t\t\tVue.set(worker, 'is_blocked_hard', true);\n\t\t\t\t} else {\n\t\t\t\t\tVue.set(worker, 'is_blocked_hard', false);\n\t\t\t\t}\n\n\t\t\t\tif(object_counters.hasOwnProperty(worker.name))\n\t\t\t\t{\n\t\t\t\t\tVue.set(worker, 'count_assignments_limit', object_counters[worker.name]);\n\t\t\t\t} else {\n\t\t\t\t\tVue.set(worker, 'count_assignments_limit', 0);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n        clear_sandbox(state) {\n            state.object_workers_sandbox = {}; \n        },\n        reset: (state) => {\n        \tstate.object_workers = {};\n        \tstate.object_workers_sandbox = {};\n        }\n\t},\n\tactions: {\n\t\t// async sync_workers({commit, state, getters, rootState, rootGetters}, force=false) {\n\t\t// \tconst use_sandbox = rootState.use_sandbox;\n\n  //           if(getters.get_object_workers(use_sandbox) == null || force) {\n\t\t// \t\tawait axios.get(rootGetters.get_url_api(state.url_api_workers, use_sandbox))\n\t\t// \t    .then(response => {\n  //               \tcommit('set_workers', {'data_workers': response.data, use_sandbox});\n\t\t// \t    })\n\n\t\t// \t\tawait axios.get(rootGetters.get_url_api(state.url_api_global_db, use_sandbox))\n\t\t// \t    .then(response => {\n  //               \tcommit('set_data_global_db', {'data': response.data, use_sandbox});\n\t\t// \t    })\n\t\t// \t}\n\t\t// },\n\t\t// async update_status_block({commit, state, getters, rootState, rootGetters}, {worker, status_block_new, status_block_old}) {\n\t\t// \tconst use_sandbox = rootState.use_sandbox;\n\n\n  //           const response = await dispatch('make_request', {\n  //               method: 'patch',\n  //               url: rootGetters.get_url_api({\n  //                   url: state.url_api_workers, \n  //                   use_sandbox, \n  //               }),\n  //               data: Array.from(list_ids),\n  //           }, { root: true });\n\n\t\t// \tconst form_data = new FormData();\n\t\t// \tform_data.set('is_blocked', JSON.stringify({\n\t\t// \t\tstatus_block_new,\n\t\t// \t\tstatus_block_old,\n\t\t// \t}));\n\n\t\t// \tawait axios.put(\n\t\t// \t\trootGetters.get_url_api(state.url_api_workers, use_sandbox, worker.name),\n\t\t// \t\tform_data,\n\t\t// \t\t{\n\t\t// \t\t\theaders: {\"X-CSRFToken\": rootState.token_csrf}\n\t\t// \t\t},\n\t\t// \t)\n\t\t//     .then(response => {\n\t\t//     \t// if(rootState.use_sandbox) {\n  //      //      \t\tcommit('update_worker_sandbox', response.data);\n\t\t//     \t// } else {\n  //           \tcommit('update_worker_status_block', {worker, status_block_new, use_sandbox});\n\t\t//     \t// }\n\t\t//     })\n\t\t// },\n\t},\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/workers.js",
			"file_size": 8873,
			"file_write_time": 131889469814645540,
			"settings":
			{
				"buffer_size": 8774,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n    <h2 class=\"headline\">Sandbox</h2>\n    <v-dialog \n        v-model=\"dialog\"\n        max-width=\"500\"\n    >\n\t    <v-btn \n            slot=\"activator\" \n\t        color=\"warning\"\n\t    >\n            <v-icon>delete</v-icon>\n\t    \tClear Sandbox\n\t\t</v-btn>\n\n\t\t<v-card>\n            <!-- <v-card-title>\n                <span class=\"headline\">Add Profile</span>\n                <v-spacer></v-spacer>\n                <v-btn icon v-on:click=\"dialog = false\">\n                    <v-icon>close</v-icon>\n                </v-btn>\n            </v-card-title> -->\n            <v-card-text>\n                Do you really want to clear the sandbox? \n            </v-card-text>\n\n            <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn\n                    flat\n                    color=\"warning\"\n                    v-on:click=\"clear\"\n                >Clear</v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-dialog>\n</div>\n</template>\n\n<script>\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nexport default {\n\tname: 'component_clear_sandbox',\n    data() {\n        return {\n        \tdialog: false,\n        }\n    },\n    methods: {\n    \tasync clear() {\n    \t\tawait this.clear_sandbox();\n    \t\tthis.dialog = false;\n    \t},\n    \t...mapActions('moduleProjects', {\n    \t\t'clear_sandbox': 'clear_sandbox',\n    \t}),\n    },\n    computed: {\n\n    },\n    components: {\n\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/clear_sandbox/component_clear_sandbox.vue",
			"file_size": 1561,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 1473,
				"line_ending": "Unix",
				"name": "component_clear_sandbox.vue"
			}
		},
		{
			"contents": "<template>\n<div>\n\t\t<!-- v-bind:action=\"`/view/${this.project_current.slug}`\" -->\n\t<form \n\t \tv-on:submit.prevent=\"submit\"\n\t>\n\t\t<input type=\"hidden\" name=\"list_ids[]\" value=\"1\">\n\t\t<input type=\"hidden\" name=\"list_ids[]\" value=\"3\">\n\t    <v-btn \n\t    \ttype=\"submit\"\n\t        color=\"primary\"\n\t        v-bind:disabled=\"assignments_selected.length == 0\"\n\t    >\n\t    \tAnnotate {{ assignments_selected.length }} assignment(s)\n\t\t</v-btn>\n\t</form>\n</div>\n</template>\n\n<script>\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\nexport default {\n\tname: 'component_annotate',\n    data() {\n        return {\n        }\n    },\n    methods: {\n    \tsubmit() {\n    \t\twindow.location.href = this.url;\n    \t}\n    },\n    computed: {\n    \turl() {\n    \t\tlet url = `/view/${this.project_current.slug}?list_ids=[`;\n    \t\t\n    \t\turl += _.join(_.map(this.assignments_selected, (assignment) => assignment.id), ',');\n\n    \t\treturn url + ']';\n    \t},\n        ...mapState('moduleAssignments', {\n            'assignments_selected': 'assignments_selected',\n        }),\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    components: {\n\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/assignments/annotate/component_annotate.vue",
			"file_size": 1441,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 1262,
				"line_ending": "Unix",
				"name": "component_annotate.vue"
			}
		},
		{
			"file": "/home/kritten/password_mturk.txt",
			"settings":
			{
				"buffer_size": 49,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/kritten/Downloads/input-real-money-03c-10.csv",
			"settings":
			{
				"buffer_size": 369,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/kritten/pgadmin/venv/lib/python3.6/site-packages/pgadmin4/config_distro.py",
			"settings":
			{
				"buffer_size": 64,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/kritten/pgadmin/venv/lib/python3.6/site-packages/pgadmin4/config.py",
			"settings":
			{
				"buffer_size": 15934,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# -----------------------------\n# PostgreSQL configuration file\n# -----------------------------\n#\n# This file consists of lines of the form:\n#\n#   name = value\n#\n# (The \"=\" is optional.)  Whitespace may be used.  Comments are introduced with\n# \"#\" anywhere on a line.  The complete list of parameter names and allowed\n# values can be found in the PostgreSQL documentation.\n#\n# The commented-out settings shown in this file represent the default values.\n# Re-commenting a setting is NOT sufficient to revert it to the default value;\n# you need to reload the server.\n#\n# This file is read on server startup and when the server receives a SIGHUP\n# signal.  If you edit the file on a running system, you have to SIGHUP the\n# server for the changes to take effect, or use \"pg_ctl reload\".  Some\n# parameters, which are marked below, require a server shutdown and restart to\n# take effect.\n#\n# Any parameter can also be given as a command-line option to the server, e.g.,\n# \"postgres -c log_connections=on\".  Some parameters can be changed at run time\n# with the \"SET\" SQL command.\n#\n# Memory units:  kB = kilobytes        Time units:  ms  = milliseconds\n#                MB = megabytes                     s   = seconds\n#                GB = gigabytes                     min = minutes\n#                TB = terabytes                     h   = hours\n#                                                   d   = days\n\n\n#------------------------------------------------------------------------------\n# FILE LOCATIONS\n#------------------------------------------------------------------------------\n\n# The default values of these variables are driven from the -D command-line\n# option or PGDATA environment variable, represented here as ConfigDir.\n\ndata_directory = '/var/lib/postgresql/9.6/main'\t\t# use data in another directory\n\t\t\t\t\t# (change requires restart)\nhba_file = '/etc/postgresql/9.6/main/pg_hba.conf'\t# host-based authentication file\n\t\t\t\t\t# (change requires restart)\nident_file = '/etc/postgresql/9.6/main/pg_ident.conf'\t# ident configuration file\n\t\t\t\t\t# (change requires restart)\n\n# If external_pid_file is not explicitly set, no extra PID file is written.\nexternal_pid_file = '/var/run/postgresql/9.6-main.pid'\t\t\t# write an extra PID file\n\t\t\t\t\t# (change requires restart)\n\n\n#------------------------------------------------------------------------------\n# CONNECTIONS AND AUTHENTICATION\n#------------------------------------------------------------------------------\n\n# - Connection Settings -\n\n#listen_addresses = 'localhost'\t\t# what IP address(es) to listen on;\n\t\t\t\t\t# comma-separated list of addresses;\n\t\t\t\t\t# defaults to 'localhost'; use '*' for all\n\t\t\t\t\t# (change requires restart)\nport = 5432\t\t\t\t# (change requires restart)\nmax_connections = 100\t\t\t# (change requires restart)\n#superuser_reserved_connections = 3\t# (change requires restart)\nunix_socket_directories = '/var/run/postgresql'\t# comma-separated list of directories\n\t\t\t\t\t# (change requires restart)\n#unix_socket_group = ''\t\t\t# (change requires restart)\n#unix_socket_permissions = 0777\t\t# begin with 0 to use octal notation\n\t\t\t\t\t# (change requires restart)\n#bonjour = off\t\t\t\t# advertise server via Bonjour\n\t\t\t\t\t# (change requires restart)\n#bonjour_name = ''\t\t\t# defaults to the computer name\n\t\t\t\t\t# (change requires restart)\n\n# - Security and Authentication -\n\n#authentication_timeout = 1min\t\t# 1s-600s\nssl = on\t\t\t\t# (change requires restart)\n#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers\n\t\t\t\t\t# (change requires restart)\n#ssl_prefer_server_ciphers = on\t\t# (change requires restart)\n#ssl_ecdh_curve = 'prime256v1'\t\t# (change requires restart)\nssl_cert_file = '/etc/ssl/certs/ssl-cert-snakeoil.pem'\t\t# (change requires restart)\nssl_key_file = '/etc/ssl/private/ssl-cert-snakeoil.key'\t\t# (change requires restart)\n#ssl_ca_file = ''\t\t\t# (change requires restart)\n#ssl_crl_file = ''\t\t\t# (change requires restart)\n#password_encryption = on\n#db_user_namespace = off\n#row_security = on\n\n# GSSAPI using Kerberos\n#krb_server_keyfile = ''\n#krb_caseins_users = off\n\n# - TCP Keepalives -\n# see \"man 7 tcp\" for details\n\n#tcp_keepalives_idle = 0\t\t# TCP_KEEPIDLE, in seconds;\n\t\t\t\t\t# 0 selects the system default\n#tcp_keepalives_interval = 0\t\t# TCP_KEEPINTVL, in seconds;\n\t\t\t\t\t# 0 selects the system default\n#tcp_keepalives_count = 0\t\t# TCP_KEEPCNT;\n\t\t\t\t\t# 0 selects the system default\n\n\n#------------------------------------------------------------------------------\n# RESOURCE USAGE (except WAL)\n#------------------------------------------------------------------------------\n\n# - Memory -\n\nshared_buffers = 128MB\t\t\t# min 128kB\n\t\t\t\t\t# (change requires restart)\n#huge_pages = try\t\t\t# on, off, or try\n\t\t\t\t\t# (change requires restart)\n#temp_buffers = 8MB\t\t\t# min 800kB\n#max_prepared_transactions = 0\t\t# zero disables the feature\n\t\t\t\t\t# (change requires restart)\n# Caution: it is not advisable to set max_prepared_transactions nonzero unless\n# you actively intend to use prepared transactions.\n#work_mem = 4MB\t\t\t\t# min 64kB\n#maintenance_work_mem = 64MB\t\t# min 1MB\n#replacement_sort_tuples = 150000\t# limits use of replacement selection sort\n#autovacuum_work_mem = -1\t\t# min 1MB, or -1 to use maintenance_work_mem\n#max_stack_depth = 2MB\t\t\t# min 100kB\ndynamic_shared_memory_type = posix\t# the default is the first option\n\t\t\t\t\t# supported by the operating system:\n\t\t\t\t\t#   posix\n\t\t\t\t\t#   sysv\n\t\t\t\t\t#   windows\n\t\t\t\t\t#   mmap\n\t\t\t\t\t# use none to disable dynamic shared memory\n\t\t\t\t\t# (change requires restart)\n\n# - Disk -\n\n#temp_file_limit = -1\t\t\t# limits per-process temp file space\n\t\t\t\t\t# in kB, or -1 for no limit\n\n# - Kernel Resource Usage -\n\n#max_files_per_process = 1000\t\t# min 25\n\t\t\t\t\t# (change requires restart)\n#shared_preload_libraries = ''\t\t# (change requires restart)\n\n# - Cost-Based Vacuum Delay -\n\n#vacuum_cost_delay = 0\t\t\t# 0-100 milliseconds\n#vacuum_cost_page_hit = 1\t\t# 0-10000 credits\n#vacuum_cost_page_miss = 10\t\t# 0-10000 credits\n#vacuum_cost_page_dirty = 20\t\t# 0-10000 credits\n#vacuum_cost_limit = 200\t\t# 1-10000 credits\n\n# - Background Writer -\n\n#bgwriter_delay = 200ms\t\t\t# 10-10000ms between rounds\n#bgwriter_lru_maxpages = 100\t\t# 0-1000 max buffers written/round\n#bgwriter_lru_multiplier = 2.0\t\t# 0-10.0 multiplier on buffers scanned/round\n#bgwriter_flush_after = 512kB\t\t# measured in pages, 0 disables\n\n# - Asynchronous Behavior -\n\n#effective_io_concurrency = 1\t\t# 1-1000; 0 disables prefetching\n#max_worker_processes = 8\t\t# (change requires restart)\n#max_parallel_workers_per_gather = 0\t# taken from max_worker_processes\n#old_snapshot_threshold = -1\t\t# 1min-60d; -1 disables; 0 is immediate\n\t\t\t\t\t# (change requires restart)\n#backend_flush_after = 0\t\t# measured in pages, 0 disables\n\n\n#------------------------------------------------------------------------------\n# WRITE AHEAD LOG\n#------------------------------------------------------------------------------\n\n# - Settings -\n\n#wal_level = minimal\t\t\t# minimal, replica, or logical\n\t\t\t\t\t# (change requires restart)\n#fsync = on\t\t\t\t# flush data to disk for crash safety\n\t\t\t\t\t\t# (turning this off can cause\n\t\t\t\t\t\t# unrecoverable data corruption)\n#synchronous_commit = on\t\t# synchronization level;\n\t\t\t\t\t# off, local, remote_write, remote_apply, or on\n#wal_sync_method = fsync\t\t# the default is the first option\n\t\t\t\t\t# supported by the operating system:\n\t\t\t\t\t#   open_datasync\n\t\t\t\t\t#   fdatasync (default on Linux)\n\t\t\t\t\t#   fsync\n\t\t\t\t\t#   fsync_writethrough\n\t\t\t\t\t#   open_sync\n#full_page_writes = on\t\t\t# recover from partial page writes\n#wal_compression = off\t\t\t# enable compression of full-page writes\n#wal_log_hints = off\t\t\t# also do full page writes of non-critical updates\n\t\t\t\t\t# (change requires restart)\n#wal_buffers = -1\t\t\t# min 32kB, -1 sets based on shared_buffers\n\t\t\t\t\t# (change requires restart)\n#wal_writer_delay = 200ms\t\t# 1-10000 milliseconds\n#wal_writer_flush_after = 1MB\t\t# measured in pages, 0 disables\n\n#commit_delay = 0\t\t\t# range 0-100000, in microseconds\n#commit_siblings = 5\t\t\t# range 1-1000\n\n# - Checkpoints -\n\n#checkpoint_timeout = 5min\t\t# range 30s-1d\n#max_wal_size = 1GB\n#min_wal_size = 80MB\n#checkpoint_completion_target = 0.5\t# checkpoint target duration, 0.0 - 1.0\n#checkpoint_flush_after = 256kB\t\t# measured in pages, 0 disables\n#checkpoint_warning = 30s\t\t# 0 disables\n\n# - Archiving -\n\n#archive_mode = off\t\t# enables archiving; off, on, or always\n\t\t\t\t# (change requires restart)\n#archive_command = ''\t\t# command to use to archive a logfile segment\n\t\t\t\t# placeholders: %p = path of file to archive\n\t\t\t\t#               %f = file name only\n\t\t\t\t# e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'\n#archive_timeout = 0\t\t# force a logfile segment switch after this\n\t\t\t\t# number of seconds; 0 disables\n\n\n#------------------------------------------------------------------------------\n# REPLICATION\n#------------------------------------------------------------------------------\n\n# - Sending Server(s) -\n\n# Set these on the master and on any standby that will send replication data.\n\n#max_wal_senders = 0\t\t# max number of walsender processes\n\t\t\t\t# (change requires restart)\n#wal_keep_segments = 0\t\t# in logfile segments, 16MB each; 0 disables\n#wal_sender_timeout = 60s\t# in milliseconds; 0 disables\n\n#max_replication_slots = 0\t# max number of replication slots\n\t\t\t\t# (change requires restart)\n#track_commit_timestamp = off\t# collect timestamp of transaction commit\n\t\t\t\t# (change requires restart)\n\n# - Master Server -\n\n# These settings are ignored on a standby server.\n\n#synchronous_standby_names = ''\t# standby servers that provide sync rep\n\t\t\t\t# number of sync standbys and comma-separated list of application_name\n\t\t\t\t# from standby(s); '*' = all\n#vacuum_defer_cleanup_age = 0\t# number of xacts by which cleanup is delayed\n\n# - Standby Servers -\n\n# These settings are ignored on a master server.\n\n#hot_standby = off\t\t\t# \"on\" allows queries during recovery\n\t\t\t\t\t# (change requires restart)\n#max_standby_archive_delay = 30s\t# max delay before canceling queries\n\t\t\t\t\t# when reading WAL from archive;\n\t\t\t\t\t# -1 allows indefinite delay\n#max_standby_streaming_delay = 30s\t# max delay before canceling queries\n\t\t\t\t\t# when reading streaming WAL;\n\t\t\t\t\t# -1 allows indefinite delay\n#wal_receiver_status_interval = 10s\t# send replies at least this often\n\t\t\t\t\t# 0 disables\n#hot_standby_feedback = off\t\t# send info from standby to prevent\n\t\t\t\t\t# query conflicts\n#wal_receiver_timeout = 60s\t\t# time that receiver waits for\n\t\t\t\t\t# communication from master\n\t\t\t\t\t# in milliseconds; 0 disables\n#wal_retrieve_retry_interval = 5s\t# time to wait before retrying to\n\t\t\t\t\t# retrieve WAL after a failed attempt\n\n\n#------------------------------------------------------------------------------\n# QUERY TUNING\n#------------------------------------------------------------------------------\n\n# - Planner Method Configuration -\n\n#enable_bitmapscan = on\n#enable_hashagg = on\n#enable_hashjoin = on\n#enable_indexscan = on\n#enable_indexonlyscan = on\n#enable_material = on\n#enable_mergejoin = on\n#enable_nestloop = on\n#enable_seqscan = on\n#enable_sort = on\n#enable_tidscan = on\n\n# - Planner Cost Constants -\n\n#seq_page_cost = 1.0\t\t\t# measured on an arbitrary scale\n#random_page_cost = 4.0\t\t\t# same scale as above\n#cpu_tuple_cost = 0.01\t\t\t# same scale as above\n#cpu_index_tuple_cost = 0.005\t\t# same scale as above\n#cpu_operator_cost = 0.0025\t\t# same scale as above\n#parallel_tuple_cost = 0.1\t\t# same scale as above\n#parallel_setup_cost = 1000.0\t# same scale as above\n#min_parallel_relation_size = 8MB\n#effective_cache_size = 4GB\n\n# - Genetic Query Optimizer -\n\n#geqo = on\n#geqo_threshold = 12\n#geqo_effort = 5\t\t\t# range 1-10\n#geqo_pool_size = 0\t\t\t# selects default based on effort\n#geqo_generations = 0\t\t\t# selects default based on effort\n#geqo_selection_bias = 2.0\t\t# range 1.5-2.0\n#geqo_seed = 0.0\t\t\t# range 0.0-1.0\n\n# - Other Planner Options -\n\n#default_statistics_target = 100\t# range 1-10000\n#constraint_exclusion = partition\t# on, off, or partition\n#cursor_tuple_fraction = 0.1\t\t# range 0.0-1.0\n#from_collapse_limit = 8\n#join_collapse_limit = 8\t\t# 1 disables collapsing of explicit\n\t\t\t\t\t# JOIN clauses\n#force_parallel_mode = off\n\n\n#------------------------------------------------------------------------------\n# ERROR REPORTING AND LOGGING\n#------------------------------------------------------------------------------\n\n# - Where to Log -\n\n#log_destination = 'stderr'\t\t# Valid values are combinations of\n\t\t\t\t\t# stderr, csvlog, syslog, and eventlog,\n\t\t\t\t\t# depending on platform.  csvlog\n\t\t\t\t\t# requires logging_collector to be on.\n\n# This is used when logging to stderr:\n#logging_collector = off\t\t# Enable capturing of stderr and csvlog\n\t\t\t\t\t# into log files. Required to be on for\n\t\t\t\t\t# csvlogs.\n\t\t\t\t\t# (change requires restart)\n\n# These are only used if logging_collector is on:\n#log_directory = 'pg_log'\t\t# directory where log files are written,\n\t\t\t\t\t# can be absolute or relative to PGDATA\n#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'\t# log file name pattern,\n\t\t\t\t\t# can include strftime() escapes\n#log_file_mode = 0600\t\t\t# creation mode for log files,\n\t\t\t\t\t# begin with 0 to use octal notation\n#log_truncate_on_rotation = off\t\t# If on, an existing log file with the\n\t\t\t\t\t# same name as the new log file will be\n\t\t\t\t\t# truncated rather than appended to.\n\t\t\t\t\t# But such truncation only occurs on\n\t\t\t\t\t# time-driven rotation, not on restarts\n\t\t\t\t\t# or size-driven rotation.  Default is\n\t\t\t\t\t# off, meaning append to existing files\n\t\t\t\t\t# in all cases.\n#log_rotation_age = 1d\t\t\t# Automatic rotation of logfiles will\n\t\t\t\t\t# happen after that time.  0 disables.\n#log_rotation_size = 10MB\t\t# Automatic rotation of logfiles will\n\t\t\t\t\t# happen after that much log output.\n\t\t\t\t\t# 0 disables.\n\n# These are relevant when logging to syslog:\n#syslog_facility = 'LOCAL0'\n#syslog_ident = 'postgres'\n#syslog_sequence_numbers = on\n#syslog_split_messages = on\n\n# This is only relevant when logging to eventlog (win32):\n# (change requires restart)\n#event_source = 'PostgreSQL'\n\n# - When to Log -\n\n#client_min_messages = notice\t\t# values in order of decreasing detail:\n\t\t\t\t\t#   debug5\n\t\t\t\t\t#   debug4\n\t\t\t\t\t#   debug3\n\t\t\t\t\t#   debug2\n\t\t\t\t\t#   debug1\n\t\t\t\t\t#   log\n\t\t\t\t\t#   notice\n\t\t\t\t\t#   warning\n\t\t\t\t\t#   error\n\n#log_min_messages = warning\t\t# values in order of decreasing detail:\n\t\t\t\t\t#   debug5\n\t\t\t\t\t#   debug4\n\t\t\t\t\t#   debug3\n\t\t\t\t\t#   debug2\n\t\t\t\t\t#   debug1\n\t\t\t\t\t#   info\n\t\t\t\t\t#   notice\n\t\t\t\t\t#   warning\n\t\t\t\t\t#   error\n\t\t\t\t\t#   log\n\t\t\t\t\t#   fatal\n\t\t\t\t\t#   panic\n\n#log_min_error_statement = error\t# values in order of decreasing detail:\n\t\t\t\t\t#   debug5\n\t\t\t\t\t#   debug4\n\t\t\t\t\t#   debug3\n\t\t\t\t\t#   debug2\n\t\t\t\t\t#   debug1\n\t\t\t\t\t#   info\n\t\t\t\t\t#   notice\n\t\t\t\t\t#   warning\n\t\t\t\t\t#   error\n\t\t\t\t\t#   log\n\t\t\t\t\t#   fatal\n\t\t\t\t\t#   panic (effectively off)\n\n#log_min_duration_statement = -1\t# -1 is disabled, 0 logs all statements\n\t\t\t\t\t# and their durations, > 0 logs only\n\t\t\t\t\t# statements running at least this number\n\t\t\t\t\t# of milliseconds\n\n\n# - What to Log -\n\n#debug_print_parse = off\n#debug_print_rewritten = off\n#debug_print_plan = off\n#debug_pretty_print = on\n#log_checkpoints = off\n#log_connections = off\n#log_disconnections = off\n#log_duration = off\n#log_error_verbosity = default\t\t# terse, default, or verbose messages\n#log_hostname = off\nlog_line_prefix = '%m [%p] %q%u@%d '\t\t\t# special values:\n\t\t\t\t\t#   %a = application name\n\t\t\t\t\t#   %u = user name\n\t\t\t\t\t#   %d = database name\n\t\t\t\t\t#   %r = remote host and port\n\t\t\t\t\t#   %h = remote host\n\t\t\t\t\t#   %p = process ID\n\t\t\t\t\t#   %t = timestamp without milliseconds\n\t\t\t\t\t#   %m = timestamp with milliseconds\n\t\t\t\t\t#   %n = timestamp with milliseconds (as a Unix epoch)\n\t\t\t\t\t#   %i = command tag\n\t\t\t\t\t#   %e = SQL state\n\t\t\t\t\t#   %c = session ID\n\t\t\t\t\t#   %l = session line number\n\t\t\t\t\t#   %s = session start timestamp\n\t\t\t\t\t#   %v = virtual transaction ID\n\t\t\t\t\t#   %x = transaction ID (0 if none)\n\t\t\t\t\t#   %q = stop here in non-session\n\t\t\t\t\t#        processes\n\t\t\t\t\t#   %% = '%'\n\t\t\t\t\t# e.g. '<%u%%%d> '\n#log_lock_waits = off\t\t\t# log lock waits >= deadlock_timeout\n#log_statement = 'none'\t\t\t# none, ddl, mod, all\n#log_replication_commands = off\n#log_temp_files = -1\t\t\t# log temporary files equal or larger\n\t\t\t\t\t# than the specified size in kilobytes;\n\t\t\t\t\t# -1 disables, 0 logs all temp files\nlog_timezone = 'localtime'\n\n\n# - Process Title -\n\ncluster_name = '9.6/main'\t\t\t# added to process titles if nonempty\n\t\t\t\t\t# (change requires restart)\n#update_process_title = on\n\n\n#------------------------------------------------------------------------------\n# RUNTIME STATISTICS\n#------------------------------------------------------------------------------\n\n# - Query/Index Statistics Collector -\n\n#track_activities = on\n#track_counts = on\n#track_io_timing = off\n#track_functions = none\t\t\t# none, pl, all\n#track_activity_query_size = 1024\t# (change requires restart)\nstats_temp_directory = '/var/run/postgresql/9.6-main.pg_stat_tmp'\n\n\n# - Statistics Monitoring -\n\n#log_parser_stats = off\n#log_planner_stats = off\n#log_executor_stats = off\n#log_statement_stats = off\n\n\n#------------------------------------------------------------------------------\n# AUTOVACUUM PARAMETERS\n#------------------------------------------------------------------------------\n\n#autovacuum = on\t\t\t# Enable autovacuum subprocess?  'on'\n\t\t\t\t\t# requires track_counts to also be on.\n#log_autovacuum_min_duration = -1\t# -1 disables, 0 logs all actions and\n\t\t\t\t\t# their durations, > 0 logs only\n\t\t\t\t\t# actions running at least this number\n\t\t\t\t\t# of milliseconds.\n#autovacuum_max_workers = 3\t\t# max number of autovacuum subprocesses\n\t\t\t\t\t# (change requires restart)\n#autovacuum_naptime = 1min\t\t# time between autovacuum runs\n#autovacuum_vacuum_threshold = 50\t# min number of row updates before\n\t\t\t\t\t# vacuum\n#autovacuum_analyze_threshold = 50\t# min number of row updates before\n\t\t\t\t\t# analyze\n#autovacuum_vacuum_scale_factor = 0.2\t# fraction of table size before vacuum\n#autovacuum_analyze_scale_factor = 0.1\t# fraction of table size before analyze\n#autovacuum_freeze_max_age = 200000000\t# maximum XID age before forced vacuum\n\t\t\t\t\t# (change requires restart)\n#autovacuum_multixact_freeze_max_age = 400000000\t# maximum multixact age\n\t\t\t\t\t# before forced vacuum\n\t\t\t\t\t# (change requires restart)\n#autovacuum_vacuum_cost_delay = 20ms\t# default vacuum cost delay for\n\t\t\t\t\t# autovacuum, in milliseconds;\n\t\t\t\t\t# -1 means use vacuum_cost_delay\n#autovacuum_vacuum_cost_limit = -1\t# default vacuum cost limit for\n\t\t\t\t\t# autovacuum, -1 means use\n\t\t\t\t\t# vacuum_cost_limit\n\n\n#------------------------------------------------------------------------------\n# CLIENT CONNECTION DEFAULTS\n#------------------------------------------------------------------------------\n\n# - Statement Behavior -\n\n#search_path = '\"$user\", public'\t# schema names\n#default_tablespace = ''\t\t# a tablespace name, '' uses the default\n#temp_tablespaces = ''\t\t\t# a list of tablespace names, '' uses\n\t\t\t\t\t# only default tablespace\n#check_function_bodies = on\n#default_transaction_isolation = 'read committed'\n#default_transaction_read_only = off\n#default_transaction_deferrable = off\n#session_replication_role = 'origin'\n#statement_timeout = 0\t\t\t# in milliseconds, 0 is disabled\n#lock_timeout = 0\t\t\t# in milliseconds, 0 is disabled\n#idle_in_transaction_session_timeout = 0\t\t# in milliseconds, 0 is disabled\n#vacuum_freeze_min_age = 50000000\n#vacuum_freeze_table_age = 150000000\n#vacuum_multixact_freeze_min_age = 5000000\n#vacuum_multixact_freeze_table_age = 150000000\n#bytea_output = 'hex'\t\t\t# hex, escape\n#xmlbinary = 'base64'\n#xmloption = 'content'\n#gin_fuzzy_search_limit = 0\n#gin_pending_list_limit = 4MB\n\n# - Locale and Formatting -\n\ndatestyle = 'iso, dmy'\n#intervalstyle = 'postgres'\ntimezone = 'localtime'\n#timezone_abbreviations = 'Default'     # Select the set of available time zone\n\t\t\t\t\t# abbreviations.  Currently, there are\n\t\t\t\t\t#   Default\n\t\t\t\t\t#   Australia (historical usage)\n\t\t\t\t\t#   India\n\t\t\t\t\t# You can create your own file in\n\t\t\t\t\t# share/timezonesets/.\n#extra_float_digits = 0\t\t\t# min -15, max 3\n#client_encoding = sql_ascii\t\t# actually, defaults to database\n\t\t\t\t\t# encoding\n\n# These settings are initialized by initdb, but they can be changed.\nlc_messages = 'en_US.UTF-8'\t\t\t# locale for system error message\n\t\t\t\t\t# strings\nlc_monetary = 'de_DE.UTF-8'\t\t\t# locale for monetary formatting\nlc_numeric = 'de_DE.UTF-8'\t\t\t# locale for number formatting\nlc_time = 'de_DE.UTF-8'\t\t\t\t# locale for time formatting\n\n# default configuration for text search\ndefault_text_search_config = 'pg_catalog.english'\n\n# - Other Defaults -\n\n#dynamic_library_path = '$libdir'\n#local_preload_libraries = ''\n#session_preload_libraries = ''\n\n\n#------------------------------------------------------------------------------\n# LOCK MANAGEMENT\n#------------------------------------------------------------------------------\n\n#deadlock_timeout = 1s\n#max_locks_per_transaction = 64\t\t# min 10\n\t\t\t\t\t# (change requires restart)\n#max_pred_locks_per_transaction = 64\t# min 10\n\t\t\t\t\t# (change requires restart)\n\n\n#------------------------------------------------------------------------------\n# VERSION/PLATFORM COMPATIBILITY\n#------------------------------------------------------------------------------\n\n# - Previous PostgreSQL Versions -\n\n#array_nulls = on\n#backslash_quote = safe_encoding\t# on, off, or safe_encoding\n#default_with_oids = off\n#escape_string_warning = on\n#lo_compat_privileges = off\n#operator_precedence_warning = off\n#quote_all_identifiers = off\n#sql_inheritance = on\n#standard_conforming_strings = on\n#synchronize_seqscans = on\n\n# - Other Platforms and Clients -\n\n#transform_null_equals = off\n\n\n#------------------------------------------------------------------------------\n# ERROR HANDLING\n#------------------------------------------------------------------------------\n\n#exit_on_error = off\t\t\t# terminate session on any error?\n#restart_after_crash = on\t\t# reinitialize after backend crash?\n\n\n#------------------------------------------------------------------------------\n# CONFIG FILE INCLUDES\n#------------------------------------------------------------------------------\n\n# These options allow settings to be loaded from files other than the\n# default postgresql.conf.\n\ninclude_dir = 'conf.d'\t\t\t# include files ending in '.conf' from\n\t\t\t\t\t# directory 'conf.d'\n#include_if_exists = 'exists.conf'\t# include file only if it exists\n#include = 'special.conf'\t\t# include file\n\n\n#------------------------------------------------------------------------------\n# CUSTOMIZED OPTIONS\n#------------------------------------------------------------------------------\n\n# Add settings for extensions here\n",
			"file": "/etc/postgresql/9.6/main/postgresql.conf",
			"file_size": 22502,
			"file_write_time": 131856428152089419,
			"settings":
			{
				"buffer_size": 22502,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "2018-12-03 17:39:57.113 CET [1139] LOG:  received fast shutdown request\n2018-12-03 17:39:57.117 CET [1139] LOG:  aborting any active transactions\n2018-12-03 17:39:57.123 CET [1214] LOG:  autovacuum launcher shutting down\n2018-12-03 17:39:57.154 CET [1211] LOG:  shutting down\n2018-12-03 17:39:57.264 CET [1139] LOG:  database system is shut down\n2018-12-03 18:40:35.735 CET [1015] LOG:  database system was shut down at 2018-12-03 17:39:57 CET\n2018-12-03 18:40:35.755 CET [1015] LOG:  MultiXact member wraparound protections are now enabled\n2018-12-03 18:40:35.757 CET [1009] LOG:  database system is ready to accept connections\n2018-12-03 18:40:35.757 CET [1019] LOG:  autovacuum launcher started\n2018-12-03 18:40:36.139 CET [1130] [unknown]@[unknown] LOG:  incomplete startup packet\n2018-12-03 17:43:22.338 CET [1009] LOG:  received fast shutdown request\n2018-12-03 17:43:22.338 CET [1009] LOG:  aborting any active transactions\n2018-12-03 17:43:22.339 CET [1019] LOG:  autovacuum launcher shutting down\n2018-12-03 17:43:22.341 CET [1016] LOG:  shutting down\n2018-12-03 17:43:22.360 CET [1009] LOG:  database system is shut down\n2018-12-03 19:48:39.336 CET [1045] LOG:  database system was shut down at 2018-12-03 17:43:22 CET\n2018-12-03 19:48:39.362 CET [1045] LOG:  MultiXact member wraparound protections are now enabled\n2018-12-03 19:48:39.364 CET [1052] LOG:  autovacuum launcher started\n2018-12-03 19:48:39.364 CET [1022] LOG:  database system is ready to accept connections\n2018-12-03 19:48:39.680 CET [1123] [unknown]@[unknown] LOG:  incomplete startup packet\n2018-12-03 20:11:40.400 CET [1022] LOG:  received fast shutdown request\n2018-12-03 20:11:40.400 CET [1022] LOG:  aborting any active transactions\n2018-12-03 20:11:40.401 CET [1052] LOG:  autovacuum launcher shutting down\n2018-12-03 20:11:40.406 CET [1049] LOG:  shutting down\n2018-12-03 20:11:40.427 CET [1022] LOG:  database system is shut down\n2018-12-04 12:20:29.831 CET [1040] LOG:  database system was shut down at 2018-12-03 20:11:40 CET\n2018-12-04 12:20:29.849 CET [1040] LOG:  MultiXact member wraparound protections are now enabled\n2018-12-04 12:20:29.851 CET [1046] LOG:  autovacuum launcher started\n2018-12-04 12:20:29.851 CET [1025] LOG:  database system is ready to accept connections\n2018-12-04 12:20:30.217 CET [1119] [unknown]@[unknown] LOG:  incomplete startup packet\n2018-12-04 12:20:42.767 CET [1025] LOG:  received fast shutdown request\n2018-12-04 12:20:42.767 CET [1025] LOG:  aborting any active transactions\n2018-12-04 12:20:42.767 CET [1046] LOG:  autovacuum launcher shutting down\n2018-12-04 12:20:42.768 CET [1043] LOG:  shutting down\n2018-12-04 12:20:42.926 CET [1025] LOG:  database system is shut down\n2018-12-07 15:34:59.991 CET [1043] LOG:  database system was shut down at 2018-12-04 12:20:42 CET\n2018-12-07 15:35:00.010 CET [1043] LOG:  MultiXact member wraparound protections are now enabled\n2018-12-07 15:35:00.013 CET [1050] LOG:  autovacuum launcher started\n2018-12-07 15:35:00.013 CET [1038] LOG:  database system is ready to accept connections\n2018-12-07 15:35:00.375 CET [1127] [unknown]@[unknown] LOG:  incomplete startup packet\n",
			"file": "/var/log/postgresql/postgresql-9.6-main.log.1",
			"file_size": 3140,
			"file_write_time": 131886671999883667,
			"settings":
			{
				"buffer_size": 3140,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "2018-12-11 18:44:12.088 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_account_mturk\" does not exist\n2018-12-11 18:44:12.088 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_account_mturk (id, name, key_access, key_secret) FROM stdin;\n\t\n2018-12-11 18:44:12.089 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_account_mturk_id_seq\" does not exist at character 26\n2018-12-11 18:44:12.089 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_account_mturk_id_seq', 1, true);\n\t\n\t\n\t\n2018-12-11 18:44:12.089 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_message_reject\" does not exist\n2018-12-11 18:44:12.089 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_message_reject (id, message) FROM stdin;\n\t\n2018-12-11 18:44:12.089 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_project\" does not exist\n2018-12-11 18:44:12.089 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_project (id, slug, fk_account_mturk_id, name, version, datetime_visited, settings_batch_default_id, count_assignments_max_per_worker, message_reject_default_id) FROM stdin;\n\t\n2018-12-11 18:44:12.089 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_batch\" does not exist\n2018-12-11 18:44:12.089 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_batch (id, name, use_sandbox, project_id) FROM stdin;\n\t\n2018-12-11 18:44:12.089 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_hit\" does not exist\n2018-12-11 18:44:12.089 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_hit (id, id_hit, datetime_creation, datetime_expiration, parameters, count_assignments_additional, batch_id) FROM stdin;\n\t\n2018-12-11 18:44:12.092 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_worker\" does not exist\n2018-12-11 18:44:12.092 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_worker (id, id_worker, is_blocked_global) FROM stdin;\n\t\n2018-12-11 18:44:12.093 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_assignment\" does not exist\n2018-12-11 18:44:12.093 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_assignment (id, id_assignment, status_external, status_internal, datetime_update, hit_id, worker_id, answer) FROM stdin;\n\t\n2018-12-11 18:44:14.211 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_assignment_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.211 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_assignment_id_seq', 11398, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.211 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_assignment_worker\" does not exist\n2018-12-11 18:44:14.211 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_assignment_worker (id, id_worker, id_assignment) FROM stdin;\n\t\n2018-12-11 18:44:14.212 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_assignment_worker_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.212 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_assignment_worker_id_seq', 6276, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.212 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_batch_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.212 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_batch_id_seq', 109, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_count_assignments_worker_project\" does not exist\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_count_assignments_worker_project (id, count_assignments, project_id, worker_id) FROM stdin;\n\t\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_count_assignments_worker_project_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_count_assignments_worker_project_id_seq', 3063, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_hit_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_hit_id_seq', 2953, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_keyword\" does not exist\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_keyword (id, text) FROM stdin;\n\t\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_keyword_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_keyword_id_seq', 6, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_message_reject_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_message_reject_id_seq', 1, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_project_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_project_id_seq', 57, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_template_assignment\" does not exist\n2018-12-11 18:44:14.213 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_template_assignment (id, name, template, is_active, project_id) FROM stdin;\n\t\n2018-12-11 18:44:14.214 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_template_global\" does not exist\n2018-12-11 18:44:14.214 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_template_global (id, name, template, is_active, project_id) FROM stdin;\n\t\n2018-12-11 18:44:14.214 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_template_hit\" does not exist\n2018-12-11 18:44:14.214 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_template_hit (id, name, template, is_active, project_id) FROM stdin;\n\t\n2018-12-11 18:44:14.214 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_template_worker\" does not exist\n2018-12-11 18:44:14.214 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_template_worker (id, name, template, height_frame, is_active, json_dict_parameters, project_id, template_assignment_id, template_hit_id, template_global_id) FROM stdin;\n\t\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_settings_batch\" does not exist\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_settings_batch (id, name, title, description, reward, count_assignments, count_assignments_max_per_worker, lifetime, duration, block_workers, has_content_adult, qualification_assignments_approved, qualification_hits_approved, qualification_locale, project_id, template_worker_id, batch_id) FROM stdin;\n\t\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_settings_batch_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_settings_batch_id_seq', 116, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_settings_batch_keywords\" does not exist\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_settings_batch_keywords (id, settings_batch_id, keyword_id) FROM stdin;\n\t\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_settings_batch_keywords_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_settings_batch_keywords_id_seq', 270, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_template_assignment_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_template_assignment_id_seq', 3, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_template_global_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.216 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_template_global_id_seq', 2, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_template_hit_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_template_hit_id_seq', 3, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_template_worker_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_template_worker_id_seq', 29, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_worker_block_project\" does not exist\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.api_worker_block_project (id, project_id, worker_id) FROM stdin;\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_worker_block_project_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_worker_block_project_id_seq', 254, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.api_worker_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_worker_id_seq', 3025, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.auth_group\" does not exist\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.auth_group (id, name) FROM stdin;\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.auth_group_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);\n\t\n\t\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.auth_group_permissions\" does not exist\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.auth_group_permissions_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);\n\t\n\t\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.auth_permission_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_permission_id_seq', 69, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.auth_user\" does not exist\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;\n\t\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.auth_user_groups\" does not exist\n2018-12-11 18:44:14.217 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;\n\t\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.auth_user_groups_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);\n\t\n\t\n\t\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.auth_user_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_user_id_seq', 2, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.auth_user_user_permissions\" does not exist\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;\n\t\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.auth_user_user_permissions_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);\n\t\n\t\n\t\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.authtoken_token\" does not exist\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.authtoken_token (key, created, user_id) FROM stdin;\n\t\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.django_admin_log\" does not exist\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;\n\t\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.django_admin_log_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);\n\t\n\t\n\t\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.django_content_type_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.django_content_type_id_seq', 23, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.django_migrations_id_seq\" does not exist at character 26\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.django_migrations_id_seq', 57, true);\n\t\n\t\n\t\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 ERROR:  relation \"public.django_session\" does not exist\n2018-12-11 18:44:14.218 CET [21386] kritten@2018_12_11 STATEMENT:  COPY public.django_session (session_key, session_data, expire_date) FROM stdin;\n\t\n2018-12-11 18:47:20.191 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_account_mturk\" does not exist\n2018-12-11 18:47:20.191 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_account_mturk (id, name, key_access, key_secret) FROM stdin;\n\t\n2018-12-11 18:47:20.192 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_account_mturk_id_seq\" does not exist at character 26\n2018-12-11 18:47:20.192 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_account_mturk_id_seq', 1, true);\n\t\n\t\n\t\n2018-12-11 18:47:20.192 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_message_reject\" does not exist\n2018-12-11 18:47:20.192 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_message_reject (id, message) FROM stdin;\n\t\n2018-12-11 18:47:20.192 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_project\" does not exist\n2018-12-11 18:47:20.192 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_project (id, slug, fk_account_mturk_id, name, version, datetime_visited, settings_batch_default_id, count_assignments_max_per_worker, message_reject_default_id) FROM stdin;\n\t\n2018-12-11 18:47:20.192 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_batch\" does not exist\n2018-12-11 18:47:20.192 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_batch (id, name, use_sandbox, project_id) FROM stdin;\n\t\n2018-12-11 18:47:20.192 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_hit\" does not exist\n2018-12-11 18:47:20.192 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_hit (id, id_hit, datetime_creation, datetime_expiration, parameters, count_assignments_additional, batch_id) FROM stdin;\n\t\n2018-12-11 18:47:20.195 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_worker\" does not exist\n2018-12-11 18:47:20.195 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_worker (id, id_worker, is_blocked_global) FROM stdin;\n\t\n2018-12-11 18:47:20.196 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_assignment\" does not exist\n2018-12-11 18:47:20.196 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_assignment (id, id_assignment, status_external, status_internal, datetime_update, hit_id, worker_id, answer) FROM stdin;\n\t\n2018-12-11 18:47:22.242 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_assignment_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.242 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_assignment_id_seq', 11398, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.242 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_assignment_worker\" does not exist\n2018-12-11 18:47:22.242 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_assignment_worker (id, id_worker, id_assignment) FROM stdin;\n\t\n2018-12-11 18:47:22.244 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_assignment_worker_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.244 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_assignment_worker_id_seq', 6276, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.244 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_batch_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.244 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_batch_id_seq', 109, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.244 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_count_assignments_worker_project\" does not exist\n2018-12-11 18:47:22.244 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_count_assignments_worker_project (id, count_assignments, project_id, worker_id) FROM stdin;\n\t\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_count_assignments_worker_project_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_count_assignments_worker_project_id_seq', 3063, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_hit_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_hit_id_seq', 2953, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_keyword\" does not exist\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_keyword (id, text) FROM stdin;\n\t\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_keyword_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_keyword_id_seq', 6, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_message_reject_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_message_reject_id_seq', 1, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_project_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_project_id_seq', 57, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_template_assignment\" does not exist\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_template_assignment (id, name, template, is_active, project_id) FROM stdin;\n\t\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_template_global\" does not exist\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_template_global (id, name, template, is_active, project_id) FROM stdin;\n\t\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_template_hit\" does not exist\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_template_hit (id, name, template, is_active, project_id) FROM stdin;\n\t\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_template_worker\" does not exist\n2018-12-11 18:47:22.245 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_template_worker (id, name, template, height_frame, is_active, json_dict_parameters, project_id, template_assignment_id, template_hit_id, template_global_id) FROM stdin;\n\t\n2018-12-11 18:47:22.247 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_settings_batch\" does not exist\n2018-12-11 18:47:22.247 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_settings_batch (id, name, title, description, reward, count_assignments, count_assignments_max_per_worker, lifetime, duration, block_workers, has_content_adult, qualification_assignments_approved, qualification_hits_approved, qualification_locale, project_id, template_worker_id, batch_id) FROM stdin;\n\t\n2018-12-11 18:47:22.247 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_settings_batch_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.247 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_settings_batch_id_seq', 116, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.247 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_settings_batch_keywords\" does not exist\n2018-12-11 18:47:22.247 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_settings_batch_keywords (id, settings_batch_id, keyword_id) FROM stdin;\n\t\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_settings_batch_keywords_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_settings_batch_keywords_id_seq', 270, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_template_assignment_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_template_assignment_id_seq', 3, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_template_global_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_template_global_id_seq', 2, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_template_hit_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_template_hit_id_seq', 3, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_template_worker_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_template_worker_id_seq', 29, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_worker_block_project\" does not exist\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.api_worker_block_project (id, project_id, worker_id) FROM stdin;\n\t\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_worker_block_project_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_worker_block_project_id_seq', 254, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.api_worker_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.api_worker_id_seq', 3025, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.auth_group\" does not exist\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.auth_group (id, name) FROM stdin;\n\t\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.auth_group_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);\n\t\n\t\n\t\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.auth_group_permissions\" does not exist\n2018-12-11 18:47:22.248 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;\n\t\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.auth_group_permissions_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);\n\t\n\t\n\t\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.auth_permission_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_permission_id_seq', 69, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.auth_user\" does not exist\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;\n\t\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.auth_user_groups\" does not exist\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;\n\t\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.auth_user_groups_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);\n\t\n\t\n\t\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.auth_user_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_user_id_seq', 2, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.auth_user_user_permissions\" does not exist\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;\n\t\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.auth_user_user_permissions_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);\n\t\n\t\n\t\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.authtoken_token\" does not exist\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.authtoken_token (key, created, user_id) FROM stdin;\n\t\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.django_admin_log\" does not exist\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;\n\t\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.django_admin_log_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.249 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);\n\t\n\t\n\t\n2018-12-11 18:47:22.250 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.django_content_type_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.250 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.django_content_type_id_seq', 23, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.250 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.django_migrations_id_seq\" does not exist at character 26\n2018-12-11 18:47:22.250 CET [22462] kritten@2018_12_11 STATEMENT:  SELECT pg_catalog.setval('public.django_migrations_id_seq', 57, true);\n\t\n\t\n\t\n2018-12-11 18:47:22.250 CET [22462] kritten@2018_12_11 ERROR:  relation \"public.django_session\" does not exist\n2018-12-11 18:47:22.250 CET [22462] kritten@2018_12_11 STATEMENT:  COPY public.django_session (session_key, session_data, expire_date) FROM stdin;\n\t\n",
			"file": "/var/log/postgresql/postgresql-9.6-main.log",
			"file_size": 29018,
			"file_write_time": 131890240422436904,
			"settings":
			{
				"buffer_size": 29018,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n\t<h2 class=\"headline\">Assignment Templates</h2>\n    <component-list-templates-assignment></component-list-templates-assignment>\n</div>\n</template>\n\n<script>\n    import ComponentListTemplatesAssignment from './component_list_templates_assignment.vue';\n\t// import settings_batch from '../../../mixins/settings_batch';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\nexport default {\n    // mixins: [\n    //     settings_batch,\n    // ],\n\tname: 'component-templates-assignment',\n\tdata () {\n\t\treturn {\n\t\t\t// search: undefined,\n\t\t}\n\t},\n\tmethods: {\n\t},\n    computed: {\n    },\n    components: {\n        ComponentListTemplatesAssignment\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_assignment/component_templates_assignment.vue",
			"file_size": 744,
			"file_write_time": 131883281376284685,
			"settings":
			{
				"buffer_size": 744,
				"line_ending": "Unix",
				"name": "component_templates_assignment.vue"
			}
		},
		{
			"contents": "<template>\n<div>\n    <v-data-table\n        v-bind:headers=\"list_headers\"\n        v-bind:items=\"list_templates_assignment\"\n    >\n        <template\n            slot=\"items\"\n            slot-scope=\"props\"\n        >\n            <tr>\n                <td>\n                    {{ props.item.name }}\n                </td>\n                <td>\n                    <component-edit-template-assignment\n                        v-bind:key=\"`component-edit-template-assignment-${props.item.id}`\"\n                        v-bind:template_assignment_current=\"props.item\"\n                        v-on:edited=\"snackbar_edited = true\"\n                    ></component-edit-template-assignment>\n                    <component-delete-template-assignment\n                        v-bind:key=\"`component-delete-template-assignment-${props.item.id}`\"\n                        v-bind:template_assignment=\"props.item\"\n                        v-on:deleted=\"snackbar_deleted = true\"\n                    ></component-delete-template-assignment>\n                </td>\n            </tr>\n        </template>\n        <template slot=\"no-data\">\n            <div class=\"text-xs-center\">\n                There exist no templates!\n            </div>\n        </template>\n        <template slot=\"footer\">\n        <td colspan=\"100%\">\n        \t<component-add-template-assignment\n                v-on:created=\"snackbar_created = true\"\n            ></component-add-template-assignment>\n        </td>\n    </template>\n    </v-data-table>\n\n    <v-snackbar\n        v-model=\"snackbar_deleted\"\n        v-bind:timeout=\"1500\"\n        bottom\n    >\n        <v-spacer></v-spacer>\n        Deleted!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n\n    <v-snackbar\n        v-model=\"snackbar_created\"\n        v-bind:timeout=\"1500\"\n        bottom\n        color=\"success\"\n    >\n        <v-spacer></v-spacer>\n        Saved!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n\n    <v-snackbar\n        v-model=\"snackbar_edited\"\n        v-bind:timeout=\"1500\"\n        bottom\n        color=\"success\"\n    >\n        <v-spacer></v-spacer>\n        Updated!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n</div>\n</template>\n\n<script>\n    import ComponentAddTemplateAssignment from './component_add_template_assignment.vue';\n    import ComponentDeleteTemplateAssignment from './component_delete_template_assignment.vue';\n    import ComponentEditTemplateAssignment from './component_edit_template_assignment.vue';\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n    import table from '../../../mixins/table';\nexport default {\n    mixins: [\n        table,\n    ],\n    name: 'component-list-templates-assignment',\n    data () {\n        return {\n            list_headers: [\n                {\n                    text: 'Name',\n                    value: 'name',\n                },\n                {\n                    text: 'Actions',\n                    value: '',\n                    sortable: false,\n                },\n            ],\n\n            snackbar_deleted: false,\n            snackbar_edited: false,\n            snackbar_created: false,\n        }\n    },\n    computed: {\n        list_templates_assignment() {\n        \t// return [{name:\"dawd\"}]\n            if(this.project_current.templates_assignment == null) return [];\n\n            return _.orderBy(this.project_current.templates_assignment, (template) => template.name);\n        },\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    methods: {\n    },\n    created: function() {\n    },\n    components: {\n        ComponentAddTemplateAssignment,\n        ComponentDeleteTemplateAssignment,\n    \tComponentEditTemplateAssignment,\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_assignment/component_list_templates_assignment.vue",
			"file_size": 3732,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 3730,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n\t<v-dialog v-model=\"dialog\">\n\t\t<v-btn \n\t\t\tslot=\"activator\" \n\t\t\tcolor=\"primary\"\n\t\t\tsmall\n\t\t><v-icon>add</v-icon> Add Template</v-btn>\n      \t<v-card>\n\t        <v-card-title>\n\t            <span class=\"headline\">Add Assignment Template</span>\n\t            <v-spacer></v-spacer>\n\t            <v-btn icon v-on:click=\"dialog = false\">\n\t                <v-icon>close</v-icon>\n\t            </v-btn>\n\t        </v-card-title>\n\t        <v-card-text>\n\t      \t\t<v-form ref=\"form\">\n\t\t\t\t\t<v-text-field\n\t\t\t            required\n\t\t\t            label=\"Name\"\n\t\t\t  \t\t\tv-bind:value=\"name\"\n\t\t\t            v-on:input=\"name=$event; $v.name.$touch()\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.name\"\n\t\t\t        ></v-text-field>\n\t\t\t\t\t<v-textarea\n\t\t\t            required\n\t\t\t            rows=\"20\"\n\t\t\t  \t\t\tv-bind:value=\"template\"\n\t\t\t            v-on:input=\"template=$event; $v.template.$touch()\"\n\t\t\t            label=\"Template\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template\"\n\t\t\t        ></v-textarea>\n\n\t\t\t        <!-- <component-form-settings-batch\n\t\t\t        \tv-bind.sync=\"settings_batch\"\n\t\t\t        ></component-form-settings-batch> -->\n\t\t    \t</v-form>\n\t\t\t    <v-btn\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"primary\"\n\t\t\t        v-on:click=\"create()\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Create</v-btn>\n\t\t\t</v-card-text>\n    \t</v-card>\n\t</v-dialog>\n</div>\n</template>\n\n<script>\n\t// import ComponentFormSettingsBatch from './component_form_settings_batch';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n\n\timport { required, minValue } from 'vuelidate/lib/validators'\n\timport validations from '../../../mixins/validations';\nexport default {\n    mixins: [\n        validations,\n    ],\n    data() {\n    \treturn {\n    \t\tname: undefined,\n    \t\ttemplate: undefined,\n\n\t\t\tdialog: false,\n    \t}\n    },\n    watch: {\n    \tdialog() {\n    \t\tthis.reset();\n    \t},\n    },\n    validations: {\n    \tname: {\n    \t\trequired,\n    \t},\n    \ttemplate: {\n    \t\trequired,\n    \t\tcontains_form_injection: (value) => value != undefined && value.indexOf(' data-inject_input_forms') >= 0\n    \t},\n    },\n    methods: {\n    \treset() {\n    \t\tthis.name = undefined;\n    \t\tthis.template = undefined;\n    \t\tthis.$v.$reset();\n    \t},\n\t\tcreate() {\n            if(this.$refs.form.validate()) \n            {\n    \t\t\tthis.create_template_assignment({\n    \t\t\t\ttemplate_assignment: {\n    \t\t\t\t\tname: this.name,\n    \t\t\t\t\ttemplate: this.template,\n    \t\t\t\t},\n    \t\t\t\tproject: this.project_current,\n    \t\t\t}).then(() => {\n    \t\t\t\tthis.$emit('created');\n                    this.dialog = false;\n                    this.reset();\n                });\n            }\n\t\t},\t\t\n\t\t...mapActions('moduleProjects', {\n\t\t\t'create_template_assignment': 'create_template_assignment',\n\t\t}),\n    },\n    computed: {\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n\tcomponents: {\n\t},\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_assignment/component_add_template_assignment.vue",
			"file_size": 3113,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 2969,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<span>\n    <v-tooltip left>\n        <v-btn \n            icon \n            small\n            slot=\"activator\" \n            class=\"ma-0\"\n            v-on:click=\"toggle()\"\n            v-bind:loading=\"is_updating\" \n        >\n            <v-icon \n                v-bind:color=\"color\"\n            >block</v-icon>\n        </v-btn>\n        <span>{{ text_tooltip }}</span>\n    </v-tooltip>  \n\n    <v-snackbar\n        v-model=\"show_snackbar\"\n        v-bind:timeout=\"1000\"\n        color=\"info\"\n        bottom\n    >\n        Updated\n        <v-btn\n            flat\n            v-on:click=\"show_snackbar = false\"\n        >\n            Close\n        </v-btn>\n    </v-snackbar>  \n</span>\n<!-- <v-layout align-center>\n    <v-flex mr-3>\n        Block:\n    </v-flex>\n    <v-flex>\n        <v-radio-group \n            v-bind:disabled=\"!is_enabled\" \n            v-bind:value=\"status_block_current\" \n            v-on:input=\"status_block_new = $event\"\n            row>\n            <v-radio\n                v-for=\"(n, i) in labels_ticks\"\n                v-bind:key=\"`${worker.name}_${n}`\"\n                v-bind:name=\"worker.name\"\n                v-bind:label=\"n\"\n                v-bind:value=\"values[i]\"\n                class=\"mb-0\"\n            ></v-radio>\n        </v-radio-group>\n    </v-flex>\n</v-layout> -->\n</template>\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    // import { STATUS_BLOCK } from '../../classes/enums.js';\nexport default {\n    name: 'component-block-hard-worker',\n    props: {\n        worker: {\n            type: Object,\n            required: true,\n        }\n    },\n    data () {\n        return {\n            // labels_ticks: ['None', 'Soft', 'Hard'],\n            // values: [STATUS_BLOCK.NONE, STATUS_BLOCK.SOFT, STATUS_BLOCK.HARD],\n            // is_updating: true,\n            // status_block_current: undefined,\n            // status_block_new: undefined,\n            show_snackbar: false,\n        }\n    },\n    watch: {\n        // 'worker.is_blocked_hard': function(value) {\n        //     if(value != undefined) {\n        //         this.is_updating = false;\n        //     }\n        // }\n        // 'worker.is_blocked': function(value) {\n        //     this.status_block_current = value;\n\n        // },\n        // status_block_new(value_new) {\n        //     this.set_show_progress_indicator(true);\n        //     this.is_updating = true;\n\n        //     this.status_block_current = value_new;\n\n        //     this.update_status_block({\n        //         worker: this.worker,\n        //         status_block_new: value_new,\n        //         status_block_old: this.worker.is_blocked,\n        //     }).then(() => {\n        //         this.is_updating = false;\n        //         this.set_show_progress_indicator(false);\n        //     });\n        // },  \n    },\n    computed: {\n        is_updating() {\n            return this.worker.is_blocked_hard == undefined;\n        },\n        text_tooltip() {\n            return this.worker.is_blocked_hard ? 'Is blocked globally': 'Is not blocked globally';\n        },\n        color() {\n            return this.worker.is_blocked_hard ? 'error': 'grey';\n        },\n        // is_enabled() {\n        //     return !this.is_updating && this.worker.is_blocked != undefined;\n        // },\n    },\n    methods: {\n        toggle() {\n            this.set_show_progress_indicator(true);\n            // this.is_updating = true;\n\n            this.update_status_block_hard({\n                worker: this.worker,\n                is_blocked: !this.worker.is_blocked_hard,\n                // status_block_new: value_new,\n                // status_block_old: this.worker.is_blocked,\n            }).then(() => {\n                // this.is_updating = false;\n                this.show_snackbar = true;\n                this.set_show_progress_indicator(false);\n            });\n            // console.log(this.worker.is_blocked_hard);\n        },\n        ...mapActions('moduleWorkers', {\n            'update_status_block_hard': 'update_status_block_hard',\n        }),\n        ...mapActions(['set_show_progress_indicator']),\n    },\n    created: function() {\n    },\n    components: {\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/list/component_block_hard_worker.vue",
			"file_size": 4012,
			"file_write_time": 131883281376324685,
			"settings":
			{
				"buffer_size": 4161,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import { STATUS_BLOCK } from './enums.js';\n\nexport default class Worker \n{\n\tconstructor(data) \n\t{\n\t\tthis.id = data.id;\n\t\t// this.m_created_at = new Date(data.CreationTime);\n\t\t// this.m_description = data.Description;\n\t\t// this.m_is_requestable = data.IsRequestable;\n\t\tthis.id_worker = data.id_worker;\n\t\tthis.count_assignments_limit = data.count_assignments_limit == null ? 0 : data.count_assignments_limit;\n\t\tthis.is_blocked_soft = data.is_blocked_soft;\n\t\tthis.is_blocked_global = data.is_blocked_global;\n\t\tthis.is_blocked_hard = null;\n\n\t\tthis.ratio_approved = null;\n\t\t// this.is_blocked = data.is_blocked;\n\t\t// this.m_status = data.QualificationTypeStatus;\n\t}\n\n\t// get_description() {\n\t// \treturn this.m_description;\n\t// } \n\t// get_is_requestable() {\n\t// \treturn this.m_is_requestable;\n\t// } \n\t// get_status() {\n\t// \treturn this.m_status;\n\t// } \n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/workers.js",
			"file_size": 848,
			"file_write_time": 131883281376164686,
			"settings":
			{
				"buffer_size": 848,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<span>\n    <v-tooltip left>\n        <v-btn \n        \ticon \n            small\n        \tslot=\"activator\" \n        \tclass=\"ma-0\"\n        \tv-on:click=\"toggle()\"\n        \tv-bind:loading=\"is_updating\" \n    \t>\n            <v-icon v-bind:color=\"color\">block</v-icon>\n        </v-btn>\n        <span>{{ text_tooltip }}</span>\n    </v-tooltip>  \n\n    <v-snackbar\n        v-model=\"show_snackbar\"\n        v-bind:timeout=\"1000\"\n        color=\"info\"\n        bottom\n    >\n        Updated\n        <v-btn\n            flat\n            v-on:click=\"show_snackbar = false\"\n        >\n            Close\n        </v-btn>\n    </v-snackbar>  \n</span>\n<!-- <v-layout align-center>\n    <v-flex mr-3>\n        Block:\n    </v-flex>\n    <v-flex>\n        <v-radio-group \n            v-bind:disabled=\"!is_enabled\" \n            v-bind:value=\"status_block_current\" \n            v-on:input=\"status_block_new = $event\"\n            row>\n            <v-radio\n                v-for=\"(n, i) in labels_ticks\"\n                v-bind:key=\"`${worker.name}_${n}`\"\n                v-bind:name=\"worker.name\"\n                v-bind:label=\"n\"\n                v-bind:value=\"values[i]\"\n                class=\"mb-0\"\n            ></v-radio>\n        </v-radio-group>\n    </v-flex>\n</v-layout> -->\n</template>\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    // import { STATUS_BLOCK } from '../../classes/enums.js';\nexport default {\n    name: 'component-block-soft-hard-worker',\n    props: {\n        worker: {\n            type: Object,\n            required: true,\n        }\n    },\n    data () {\n        return {\n            // labels_ticks: ['None', 'Soft', 'Hard'],\n            // values: [STATUS_BLOCK.NONE, STATUS_BLOCK.SOFT, STATUS_BLOCK.HARD],\n            is_updating: false,\n            // status_block_current: undefined,\n            // status_block_new: undefined,\n            show_snackbar: false,\n        }\n    },\n    watch: {\n        // 'worker.is_blocked': function(value) {\n        //     this.status_block_current = value;\n\n        // },\n        // status_block_new(value_new) {\n        //     this.set_show_progress_indicator(true);\n        //     this.is_updating = true;\n\n        //     this.status_block_current = value_new;\n\n        //     this.update_status_block({\n        //         worker: this.worker,\n        //         status_block_new: value_new,\n        //         status_block_old: this.worker.is_blocked,\n        //     }).then(() => {\n        //         this.is_updating = false;\n        //         this.set_show_progress_indicator(false);\n        //     });\n        // },  \n    },\n    computed: {\n    \ttext_tooltip() {\n    \t\treturn this.worker.is_blocked_global ? 'Is soft-blocked globally': 'Is not soft-blocked globally';\n    \t},\n    \tcolor() {\n    \t\treturn this.worker.is_blocked_global ? 'warning': 'grey';\n    \t},\n        // is_enabled() {\n        //     return !this.is_updating && this.worker.is_blocked != undefined;\n        // },\n    },\n    methods: {\n    \ttoggle() {\n            this.set_show_progress_indicator(true);\n            this.is_updating = true;\n\n    \t\tthis.update_status_block_global({\n                worker: this.worker,\n                is_blocked: !this.worker.is_blocked_global,\n                // status_block_new: value_new,\n                // status_block_old: this.worker.is_blocked,\n            }).then(() => {\n            \tthis.is_updating = false;\n                this.show_snackbar = true;\n                this.set_show_progress_indicator(false);\n            });\n    \t\t// console.log(this.worker.is_blocked_soft);\n    \t},\n        ...mapActions('moduleWorkers', {\n            'update_status_block_global': 'update_status_block_global',\n        }),\n        ...mapActions(['set_show_progress_indicator']),\n    },\n    created: function() {\n    },\n    components: {\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/list/component_block_global_worker.vue",
			"file_size": 3801,
			"file_write_time": 131883281376324685,
			"settings":
			{
				"buffer_size": 3823,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n    <!-- <v-layout wrap> -->\n        <!-- <v-flex> -->\n        <component-list-workers>\n        </component-list-workers>\n        <!-- </v-flex> -->\n    <!-- </v-layout> -->\n</div>\n</template>\n\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    // import { Policy } from '../../store/modules/policies.js';\n\t\n    import ComponentListWorkers from './list/component_list_workers.vue';\n    // import ComponentShowMoneySpent from './component-show-money-spent.vue';\n    // import ComponentShowBatches from './component-show-batches.vue';\n    import slug_project from '../../mixins/slug_project';\nexport default {\n    mixins: [\n        slug_project,\n    ],\n    name: 'app-workers',\n    data () {\n        return {\n        \tworkers_selected: [],\n        }\n    },\n    computed: {\n        // policy_dialog: function() {\n        //     return this.policy_to_be_edited == null ? this.policy_new : this.policy_to_be_edited;\n        // },\n        // title_dialog_policy: function() {\n        //     return this.policy_to_be_edited == null ? 'New Policy' : 'Edit Policy';\n        // },\n        // ...mapGetters('moduleWorkers', {\n        //     'list_workers': 'list_workers',\n        // }),\n    },\n    methods: {\n        // refresh_data() {\n        //     this.set_show_progress_indicator(true);\n        //     this.sync_workers().then(() => {\n        //         this.set_show_progress_indicator(false);\n        //     });\n        // },\n        // add_or_edit_policy() {\n        //     if(this.policy_to_be_edited == null)\n        //     {\n        //         this.add_policy_custom();\n        //     } else {\n        //         this.edit_policy();\n        //     }\n        // },\n        // delete_policy(item) {\n        //     if(confirm(`Do you really want to delete the '${item.get_name()}' policy?`))\n        //     {\n\n        //     }\n        // },\n        // init_edit_policy(policy_to_be_edited) {\n        //     this.policy_to_be_edited = policy_to_be_edited;\n        //     this.show_dialog_policy = true;\n        // },\n        // edit_policy() {\n        //     this.update_policy(this.policy_dialog).then(() => {\n        //         this.show_dialog_policy = false;\n        //     });\n        // },\n        // add_policy_custom() {\n        //     this.add_policy(this.policy_dialog).then(() => {\n        //         this.show_dialog_policy = false;\n        //     });\n        // },\n        // cancel() {\n        //     this.show_dialog_policy = false;\n        // },\n        // ...mapActions('moduleWorkers', {\n        //     'sync_workers': 'sync_workers',\n        // }),\n        // ...mapActions(['set_show_progress_indicator']),\n    },\n    // created: function() {\n    //     // this.refresh_data();\n    // },\n\n    components: {\n     ComponentListWorkers,\n     // ComponentShowMoneySpent,\n     // ComponentShowBatches,\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/app_workers.vue",
			"file_size": 2872,
			"file_write_time": 131883281376284685,
			"settings":
			{
				"buffer_size": 2872,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n    <!-- <div>wda</div> -->\n    <tr>\n        <td>\n            <v-checkbox\n                v-model=\"props.selected\"\n                primary\n                hide-details\n            ></v-checkbox>\n        </td>\n        <td class=\"text-xs-left\">\n            {{ props.item.id_worker }}\n        </td>\n        <td>\n        </td>\n        <td>\n        </td>\n        <component-limit-assignments\n            v-bind:key=\"`component_limit_assignments_${props.item.name}`\"\n            v-bind:worker=\"worker\"\n        ></component-limit-assignments>\n        <td class=\"text-xs-center\">\n            <component-block-soft-worker\n                v-bind:key=\"`component_block_soft_worker_${worker.name}`\"\n                v-bind:worker=\"worker\"\n            ></component-block-soft-worker>\n        </td>\n        <td class=\"text-xs-center\">\n            <component-block-global-worker\n                v-bind:key=\"`component_block_global_worker_${worker.name}`\"\n                v-bind:worker=\"worker\"\n            ></component-block-global-worker>\n        </td>\n        <td class=\"text-xs-center\">\n            <component-block-hard-worker\n                v-bind:key=\"`component_block_hard_worker_${worker.name}`\"\n                v-bind:worker=\"worker\"\n            ></component-block-hard-worker>\n        </td>\n    </tr>\n    <!-- <v-card class=\"ma-1\">\n        <v-card-title\n            class=\"py-0\"\n        >\n            <h4>{{ worker.name }}</h4>\n            <v-spacer></v-spacer>\n            <v-menu \n                bottom \n                left\n                v-bind:close-on-content-click=\"false\"\n\n            >\n                <v-btn\n                    slot=\"activator\"\n                    dark\n                    icon\n                     class=\"ma-0\"\n                >\n                    <v-icon>more_vert</v-icon>\n                </v-btn>\n\n                <v-list>\n                    <v-list-tile\n                    >\n                        <component-block-worker\n                            v-bind:key=\"`component_block_worker_${worker.name}`\"\n                            v-bind:worker=\"worker\"\n                        ></component-block-worker>\n                    </v-list-tile>\n\n                </v-list>\n            </v-menu>\n        </v-card-title>\n        <v-divider></v-divider>\n        <v-list dense>\n            <v-list-tile>\n                <v-list-tile-content>Block Status:</v-list-tile-content>\n                <v-list-tile-content class=\"align-end\">\n\n                    <v-tooltip left>\n                        <v-btn icon v-bind:loading=\"status_block.icon == ''\" slot=\"activator\" class=\"ma-0\">\n                            <v-icon v-bind:color=\"status_block.color\">{{ status_block.icon }}</v-icon>\n                        </v-btn>\n                        <span>{{ status_block.description }}</span>\n                    </v-tooltip>\n                </v-list-tile-content>\n            </v-list-tile>\n            <v-list-tile>\n                <v-list-tile-content>#Assignments:</v-list-tile-content>\n                <v-list-tile-content class=\"align-end\">\n                    <v-text-field\n                        type=\"number\"\n                        v-bind:loading=\"get_show_progress_indicator\"\n                        single-line\n                        v-bind:value=\"worker.counter_assignments\"\n                        v-on:change=\"changed_counter_assignments($event)\"\n                        v-bind:suffix=\"`of ${project_current.count_assignments_max_per_worker}`\"\n                    ></v-text-field>\n                </v-list-tile-content>\n            </v-list-tile>\n        </v-list>\n\n        <v-snackbar\n            v-model=\"show_snackbar\"\n            v-bind:timeout=\"1500\"\n            bottom\n        >\n            Saved!\n            <v-btn\n                flat\n                v-on:click=\"show_snackbar = false\"\n            >\n                Close\n            </v-btn>\n        </v-snackbar>\n    </v-card> -->\n</template>\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import { STATUS_BLOCK } from '../../../classes/enums.js';\n\n    import ComponentBlockWorker from './component_block_worker.vue';\n    // import ComponentBlockSoftWorker from './component_block_worker.vue';\n    import ComponentBlockSoftWorker from './component_block_soft_worker.vue';\n    import ComponentBlockGlobalWorker from './component_block_global_worker.vue';\n    import ComponentBlockHardWorker from './component_block_hard_worker.vue';\n    import ComponentLimitAssignments from './component_limit_assignments.vue';\nexport default {\n    name: 'component-item-worker',\n    props: {\n        props: {\n            type: Object,\n            required: true,\n        }\n    },\n    data () {\n        return {\n            show_snackbar: false,\n        }\n    },\n    // watch: {\n    //     'worker.is_blocked': function() {\n    //         console.log(this.worker.is_blocked)\n    //     },\n    // },\n    computed: {\n        worker() {\n            return this.props.item;\n        },\n        // status_block() {\n        //     if(this.worker.is_blocked == undefined)\n        //     {\n        //         return {\n        //             description: 'Loading',\n        //             color: 'success',\n        //             icon: '',\n        //         };\n        //     }\n\n        //     switch(this.worker.is_blocked)\n        //     {\n        //         case STATUS_BLOCK.NONE:\n        //             return {\n        //                 description: 'Not Blocked',\n        //                 color: 'success',\n        //                 icon: 'check',\n        //             };\n        //         case STATUS_BLOCK.SOFT:\n        //             return {\n        //                 description: 'Soft Blocked',\n        //                 color: 'warning',\n        //                 icon: 'block',\n        //             };\n        //         case STATUS_BLOCK.HARD:\n        //             return {\n        //                 description: 'Hard Blocked',\n        //                 color: 'error',\n        //                 icon: 'block',\n        //             };\n        //     }\n        // },\n        ...mapGetters(['get_show_progress_indicator']),\n    },\n    methods: {\n    },\n    components: {\n        ComponentBlockSoftWorker,\n        ComponentBlockGlobalWorker,\n        ComponentBlockHardWorker,\n        ComponentLimitAssignments,\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    td {\n        height: unset !important;\n    }\n    td .v-input--selection-controls {\n        padding: unset;\n    }\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/list/component_item_worker.vue",
			"file_size": 6547,
			"file_write_time": 131883281376324685,
			"settings":
			{
				"buffer_size": 6519,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<span>\n    <v-tooltip left>\n        <v-btn \n        \ticon \n            small\n        \tslot=\"activator\" \n        \tclass=\"ma-0\"\n        \tv-on:click=\"toggle()\"\n        \tv-bind:loading=\"is_updating\" \n    \t>\n            <v-icon v-bind:color=\"color\">block</v-icon>\n        </v-btn>\n        <span>{{ text_tooltip }}</span>\n    </v-tooltip>  \n\n    <v-snackbar\n        v-model=\"show_snackbar\"\n        v-bind:timeout=\"1000\"\n        color=\"info\"\n        bottom\n    >\n        Updated\n        <v-btn\n            flat\n            v-on:click=\"show_snackbar = false\"\n        >\n            Close\n        </v-btn>\n    </v-snackbar>  \n</span>\n<!-- <v-layout align-center>\n    <v-flex mr-3>\n        Block:\n    </v-flex>\n    <v-flex>\n        <v-radio-group \n            v-bind:disabled=\"!is_enabled\" \n            v-bind:value=\"status_block_current\" \n            v-on:input=\"status_block_new = $event\"\n            row>\n            <v-radio\n                v-for=\"(n, i) in labels_ticks\"\n                v-bind:key=\"`${worker.name}_${n}`\"\n                v-bind:name=\"worker.name\"\n                v-bind:label=\"n\"\n                v-bind:value=\"values[i]\"\n                class=\"mb-0\"\n            ></v-radio>\n        </v-radio-group>\n    </v-flex>\n</v-layout> -->\n</template>\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    // import { STATUS_BLOCK } from '../../classes/enums.js';\nexport default {\n    name: 'component-block-soft-worker',\n    props: {\n        worker: {\n            type: Object,\n            required: true,\n        }\n    },\n    data () {\n        return {\n            // labels_ticks: ['None', 'Soft', 'Hard'],\n            // values: [STATUS_BLOCK.NONE, STATUS_BLOCK.SOFT, STATUS_BLOCK.HARD],\n            is_updating: false,\n            // status_block_current: undefined,\n            // status_block_new: undefined,\n            show_snackbar: false,\n        }\n    },\n    watch: {\n        // 'worker.is_blocked': function(value) {\n        //     this.status_block_current = value;\n\n        // },\n        // status_block_new(value_new) {\n        //     this.set_show_progress_indicator(true);\n        //     this.is_updating = true;\n\n        //     this.status_block_current = value_new;\n\n        //     this.update_status_block({\n        //         worker: this.worker,\n        //         status_block_new: value_new,\n        //         status_block_old: this.worker.is_blocked,\n        //     }).then(() => {\n        //         this.is_updating = false;\n        //         this.set_show_progress_indicator(false);\n        //     });\n        // },  \n    },\n    computed: {\n    \ttext_tooltip() {\n    \t\treturn this.worker.is_blocked_soft ? 'Is blocked project-wide': 'Is not blocked project-wide';\n    \t},\n    \tcolor() {\n    \t\treturn this.worker.is_blocked_soft ? 'warning': 'grey';\n    \t},\n        // is_enabled() {\n        //     return !this.is_updating && this.worker.is_blocked != undefined;\n        // },\n    },\n    methods: {\n    \ttoggle() {\n            this.set_show_progress_indicator(true);\n            this.is_updating = true;\n\n    \t\tthis.update_status_block_soft({\n                worker: this.worker,\n                is_blocked: !this.worker.is_blocked_soft,\n                // status_block_new: value_new,\n                // status_block_old: this.worker.is_blocked,\n            }).then(() => {\n            \tthis.is_updating = false;\n                this.show_snackbar = true;\n                this.set_show_progress_indicator(false);\n            });\n    \t\t// console.log(this.worker.is_blocked_soft);\n    \t},\n        ...mapActions('moduleWorkers', {\n            'update_status_block_soft': 'update_status_block_soft',\n        }),\n        ...mapActions(['set_show_progress_indicator']),\n    },\n    created: function() {\n    },\n    components: {\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/list/component_block_soft_worker.vue",
			"file_size": 3610,
			"file_write_time": 131883281376324685,
			"settings":
			{
				"buffer_size": 3804,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 114 files for \"download\"\n\n/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/finances/component-show-batches.vue:\n   49  \n   50  \t<v-btn\n   51: \t\t:loading=\"is_downloading_csv\"\n   52: \t\t:disabled=\"is_downloading_csv\"\n   53  \t\tcolor=\"primary\"\n   54: \t\t@click.native=\"download_csv\"\n   55  \t>\n   56: \t\tDownload CSV for {{ count_hits_to_download }} HITs\n   57:       \t<v-icon right>cloud_download</v-icon>\n   58      </v-btn>\n   59      {{batches_selected}}\n   ..\n   77  \t\t    },\n   78          \tbatches_selected: [],\n   79:         \tis_downloading_csv: false,\n   80          \tsearch: '',\n   81          \tlist_headers: [\n   ..\n  141      \t\t}\n  142      \t},\n  143:     \tcount_hits_to_download: function() {\n  144      \t\tif(this.batches_selected.length == 0) {\n  145      \t\t\treturn 'all';\n  ...\n  155      },\n  156      methods: {\n  157:     \tdownload_csv: function() {\n  158:     \t\tthis.is_downloading_csv = true;\n  159  \n  160      \t\t// filter the selected hits\n  ...\n  169              var a = window.document.createElement(\"a\");\n  170              a.href = window.URL.createObjectURL(blob, {type: \"text/plain\"});\n  171:             a.download = \"filename.csv\";\n  172              document.body.appendChild(a);\n  173              a.click();\n  174              document.body.removeChild(a);\n  175:     \t\tthis.is_downloading_csv = false;\n  176      \t}\n  177      },\n\n/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/qualifications/AppQualifications.vue:\n   57          ></component-update-qualification>\n   58  \n   59:         <component-download-qualifications\n   60              v-bind:qualifications_selected=\"policies_selected\"\n   61:         ></component-download-qualifications>\n   62      </v-layout>\n   63  </div>\n   ..\n   71      import ComponentDeleteQualification from './component-delete-qualification.vue';\n   72      import ComponentUpdateQualification from './component-update-qualification.vue';\n   73:     import ComponentDownloadQualifications from './component-download-qualifications.vue';\n   74      // import ComponentShowMoneySpent from './component-show-money-spent.vue';\n   75      // import ComponentShowBatches from './component-show-batches.vue';\n   ..\n  148          ComponentDeleteQualification,\n  149          ComponentUpdateQualification,\n  150:         ComponentDownloadQualifications,\n  151       // ComponentShowMoneySpent,\n  152       // ComponentShowBatches,\n\n/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/qualifications/component-download-qualifications.vue:\n    1  <template>\n    2:     <v-btn color=\"info\" class=\"mb-2\" v-on:click.native=\"download\">\n    3:         <v-icon left>cloud_download</v-icon>{{ title_button }}\n    4      </v-btn>\n    5  </template>\n    .\n    9      import _ from 'lodash';\n   10  export default {\n   11:     name: 'component-download-qualifications',\n   12      props: {\n   13          qualifications_selected: {\n   ..\n   24              if(this.qualifications_selected_without_database_entry.length == 0)\n   25              {\n   26:                 return `Download all (${this.qualifications_without_database_entry.length}) Qualification(s)`;\n   27              } else {\n   28:                 return `Download ${this.qualifications_selected_without_database_entry.length} Qualification(s)`;\n   29              }\n   30          },\n   ..\n   40      },\n   41      methods: {\n   42:         download: function() {\n   43              const array_json = [];\n   44              if(this.qualifications_selected_without_database_entry.length == 0)\n   ..\n   53              }\n   54  \n   55:             this.download_file(array_json.join('\\n'), {\n   56                  name: 'qualifications.json',\n   57                  type: 'application/json',\n   58              });\n   59          },\n   60:         download_file(string) {\n   61              const options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n   62  \n   ..\n   67              const link_virtual = window.document.createElement('a');\n   68              link_virtual.href = window.URL.createObjectURL(blob);\n   69:             link_virtual.download = options.name;\n   70              document.body.appendChild(link_virtual);\n   71              link_virtual.click();\n\n26 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 4391,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/home/kritten/Documents/mturk_test/mturk-manager1/setup.sh",
			"settings":
			{
				"buffer_size": 329,
				"line_ending": "Unix"
			}
		},
		{
			"file": "setup.sh",
			"settings":
			{
				"buffer_size": 75,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\"\"\"\nDjango settings for mturk project.\n\nGenerated by 'django-admin startproject' using Django 2.0.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/2.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/2.0/ref/settings/\n\"\"\"\n\nimport os\nfrom django.conf import settings\n# from django.contrib.messages import constants as messages\n\nimport configparser\n# MESSAGE_TAGS = {\n#     messages.DEBUG: 'alert-info',\n#     messages.INFO: 'alert-info',\n#     messages.SUCCESS: 'alert-success',\n#     messages.WARNING: 'alert-warning',\n#     messages.ERROR: 'alert-danger',\n# }\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '=cq+#!^r^e59y_ob!!3)yd7cg-6!lcc31wh3a26oudip#_h5gk'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\n\n# Application definition\n\nINSTALLED_APPS = [\n    # 'viewer.apps.ViewerConfig',\n    'mturk_manager.apps.MturkManagerConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.humanize',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\n\n\n# import importlib, inspect, sys\n# path_plugins = os.path.join(BASE_DIR, '..', 'plugins')\n# try:\n#     for name_plugin in os.listdir(path_plugins):\n#         path_app = os.path.join(BASE_DIR, name_plugin)\n#         try:\n#             os.symlink(os.path.join(path_plugins, name_plugin), path_app)\n#         except FileExistsError:\n#             pass\n\n#         print('installing plugin \\'{}\\''.format(name_plugin))\n#         name_appsconfig = None\n#         module_index_handle = importlib.import_module(name_plugin+'.apps')\n#         for name, obj in inspect.getmembers(module_index_handle):\n#             if inspect.isclass(obj):\n#                 if obj.__module__.startswith(name_plugin):\n#                     name_appsconfig = obj.__name__\n#                     break\n\n#         INSTALLED_APPS = ['{}.apps.{}'.format(name_plugin, name_appsconfig)] + INSTALLED_APPS\n\n# except FileNotFoundError: \n#     pass\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'mturk_manager.middleware.SqlPrintMiddleware',\n]\n\nROOT_URLCONF = 'mturk.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'mturk.wsgi.application'\n\n# Database\n# https://docs.djangoproject.com/en/2.0/ref/settings/#databases\n\nVERSION_PROJECT = 14\n# MESSAGE_BLOCK_DEFAULT = 'Some default block message'\n\nconfig = configparser.ConfigParser()\nconfig.read('../mturk_settings.ini')\nTOKEN_INSTANCE = config.get('MTurk', 'token_instance', fallback=None)\nURL_GLOBAL_DB = config.get('MTurk', 'url_global_db', fallback=None)\n\n# # URL_GLOBAL_DB = 'https://webis18.medien.uni-weimar.de/mturk-manager'\n# URL_GLOBAL_DB = 'http://localhost:8002'\n# try:\n#     PATH_DATABASE = config['MTurk']['database'].strip()\n# except KeyError:\n#     PATH_DATABASE = 'db.sqlite3'\n#     pass\n# try:\n#     PATH_FILES_SETTINGS = config['MTurk']['settings-path'].strip()\n# except KeyError:\n#     pass\n\n# print('storing database into {}'.format(PATH_DATABASE))\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': 'db.sqlite3'\n    }\n}\n\n# CACHES = {\n#     'default': {\n#         'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',\n#         'LOCATION': '../cache',\n#         'TIMEOUT': None,\n#     }\n# }\n\n# Password validation\n# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/2.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'Europe/Berlin'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n# STATIC_ROOT = 'static/'\n\n# URL_MTURK_SANDBOX = 'https://mturk-requester-sandbox.us-east-1.amazonaws.com'\n# URL_BLOCK_WORKERS = 'https://webis16.medien.uni-weimar.de'\n# PREEFIX_QUALIFICATION_BLOCK_SOFT = 'fbqeqihngl-'\n# NAME_QUALIFICATION_BLOCK_SOFT = 'fbqeqihngl'\n# DESCRIPTION_QUALIFICATION_BLOCK_SOFT = 'If you request this qualification, it is automatically granted!'\n\n# when id_asignment is newly assigned\n# smaller table\n# global soft block\n",
			"file": "/home/kritten/Documents/mturk_test/mturk-manager/mturk/mturk/settings.py",
			"file_size": 5800,
			"file_write_time": 131862675405362747,
			"settings":
			{
				"buffer_size": 5800,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "from django.urls import path, include, re_path\nfrom django.contrib import admin\n\nfrom mturk_manager import views\n\n# from rest_framework.routers import DefaultRouter\n# router = DefaultRouter()\n# router.register('workers', views.ViewSet_Workers)\n# router.register('projects', views.ViewSet_Projects)\n\napp_name = 'mturk_manager'\nurlpatterns = [\n\n    # # path('api/qualifications/', views.Qualifications.as_view(), name='qualifications'),\n    # # path('api/qualifications/<str:name>/', views.Qualification.as_view(), name='qualification'),\n\n    # # path('api/workers/', views.Workers.as_view(), name='workers'),\n    # # path('api/workers/<str:name>/', views.Worker.as_view(), name='worker'),\n\n    # path('api/projects/', views.Projects.as_view(), name='projects'),\n    # path('api/projects/<str:slug_project>', views.Project.as_view(), name='project_api_tmp'),\n\n    # path('api/projects/<str:slug_project>/workers/', views.Workers.as_view(), name='workers_for_project'),\n    # path('api/projects/<str:slug_project>/workers/global_db', views.get_data_global_db, name='workers_for_project_global_db'),\n    # path('api/projects/<str:slug_project>/workers/<str:name>', views.Worker.as_view(), name='worker_for_project'),\n\n    # path('api/projects/<str:slug_project>/qualifications/', views.Qualifications.as_view(), name='qualifications_for_project'),\n    # path('api/projects/<str:slug_project>/qualifications/import', views.import_qualifications, name='import_qualifications_for_project'),\n    # path('api/projects/<str:slug_project>/qualifications/<str:id_mturk>', views.Qualification.as_view(), name='qualification_for_project'),\n    \n    # path('api/projects/<str:slug_project>/batches/', views.Batches.as_view(), name='batches_for_project'),\n    # # path('api/projects/<str:slug_project>/batches/', views.Batch.as_view(), name='batch_for_project'),\n\n    # path('api/keywords/', views.Keywords.as_view(), name='keywords'),\n\n\n\n    # path('view/<str:name>', views.view, name='view'),\n    # path('documentation', views.documentation, name='documentation'),\n\n    # path('settings', views.settings, name='settings'),\n    \n    # path('create', views.create, name='create'),\n    # path('project/<str:name>/download', views.download, name='download'),\n\n    # path('project/<str:name>/api', views.api, name='api'),\n    # path('project/<str:name>/api/worker/<str:id_worker>', views.api_status_worker, name='api_status_worker'),\n    # path('project/<str:name>/api/workers', views.api_workers, name='api_workers'),\n    # path('project/<str:name>/api/assignments_real', views.api_assignments_real, name='api_assignments_real'),\n    # path('project/<str:name>/api/assignment/<str:id_assignment>', views.api_assignment, name='api_assignment'),\n    # path('project/<str:name>/api/assignments_fake', views.api_assignments_fake, name='api_assignments_fake'),\n    # path('project/<str:name>/api/assignments_real_approved', views.api_assignments_real_approved, name='api_assignments_real_approved'),\n    # path('project/<str:slug_project>/api/assignments_real_approved_tmp', views.api_assignments_real_approved_tmp, name='api_assignments_real_approved_tmp'),\n    # path('project/<str:name>/api/assignments_real_approved_for_batch/<str:name_batch>', views.api_assignments_real_approved_for_batch, name='api_assignments_real_approved_for_batch'),\n    # path('project/<str:slug_project>/api/balance', views.balance, name='balance'),\n    # path('project/<str:name>/api/policies', views.api_policies, name='api_policies'),\n\n    # path('project/<str:name>/tmp', views.money, name='money'),\n\n    # path('', views.dashboard, name='index'),\n    path('', views.app, name='app'),\n\n    # path('project/<str:slug_project>', views.project, name='project'),\n\n\n]\n",
			"file": "/home/kritten/Documents/mturk_test/mturk-manager/mturk/mturk_manager/urls.py",
			"file_size": 3724,
			"file_write_time": 131862675406122773,
			"settings":
			{
				"buffer_size": 3724,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/views/keywords.py",
			"settings":
			{
				"buffer_size": 2678,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "keywords.py"
			}
		},
		{
			"file": "mturk_db/api/urls.py",
			"settings":
			{
				"buffer_size": 4995,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/views/templates_hit.py",
			"settings":
			{
				"buffer_size": 3564,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "templates_hit.py"
			}
		},
		{
			"file": "mturk_db/api/views/templates_assignment.py",
			"settings":
			{
				"buffer_size": 3655,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "templates_assignment.py"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_template_assignment.py",
			"settings":
			{
				"buffer_size": 3435,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "serializer_template_assignment.py"
			}
		},
		{
			"file": "mturk_db/api/views/assignments.py",
			"settings":
			{
				"buffer_size": 6063,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/classes/assignments.py",
			"settings":
			{
				"buffer_size": 5145,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "assignments.py"
			}
		},
		{
			"file": "mturk_db/api/views/__init__.py",
			"settings":
			{
				"buffer_size": 331,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_template_global.py",
			"settings":
			{
				"buffer_size": 3407,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/classes/templates_global.py",
			"settings":
			{
				"buffer_size": 976,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "templates_global.py"
			}
		},
		{
			"file": "mturk_db/api/classes/__init__.py",
			"settings":
			{
				"buffer_size": 553,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_batch.py",
			"settings":
			{
				"buffer_size": 2730,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "serializer_batch.py"
			}
		},
		{
			"contents": "<div class=\"col-12\">\n    <div class=\"input_text\"></div>\n    <div class=\"input_worker \"></div>\n    <div data-inject_input_forms></div>\n</div>\n<script>\n    assignment_wrapper.find('.input_text').text(assignment.id_assignment);\n    assignment_wrapper.find('.input_worker').text(JSON.stringify(assignment.worker));\n    console.log(assignment)\n</script>",
			"settings":
			{
				"buffer_size": 348,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/helpers.py",
			"settings":
			{
				"buffer_size": 8191,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n    <v-dialog \n        v-model=\"dialog\"\n        max-width=\"80%\"\n        persistent\n    >\n        <v-btn\n            slot=\"activator\" \n            icon\n            small\n            v-on:click=\"dialog = true\"\n        >\n            <v-icon color=\"warning\">edit</v-icon>\n        </v-btn>\n      \t<v-card>\n\t        <v-card-title>\n\t            <span class=\"headline\">Edit Assignment Template</span>\n\t            <v-spacer></v-spacer>\n\t            <v-btn icon v-on:click=\"dialog = false\">\n\t                <v-icon>close</v-icon>\n\t            </v-btn>\n\t        </v-card-title>\n\t        <v-card-text>\n\t      \t\t<v-form ref=\"form\" lazy-validation>\n\t\t\t\t\t<v-text-field\n\t\t\t            required\n\t\t\t            label=\"Name\"\n\t\t\t  \t\t\tv-bind:value=\"template_assignment.name\"\n\t\t\t            v-on:input=\"template_assignment.name=$event; $v.template_assignment.name.$touch()\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_assignment.name\"\n\t\t\t        ></v-text-field>\n\t\t\t\t\t<v-textarea\n\t\t\t            required\n\t\t\t            rows=\"20\"\n\t\t\t  \t\t\tv-bind:value=\"template_assignment.template\"\n\t\t\t            v-on:input=\"template_assignment.template=$event; $v.template_assignment.template.$touch()\"\n\t\t\t            label=\"Template\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_assignment.template\"\n\t\t\t        ></v-textarea>\n\t\t    \t</v-form>\n\t\t\t</v-card-text>\n\n       \t \t<v-card-actions>\n\t\t\t    <v-btn\n\t\t\t    \tflat\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"înfo\"\n\t\t\t        v-on:click=\"dialog = false; reset();\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Cancel</v-btn>\n\t\t\t    <v-spacer></v-spacer>\n\t\t\t    <v-btn\n\t\t\t    \tflat\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"primary\"\n\t\t\t        v-on:click=\"update()\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Save</v-btn>\n\n\t\t\t    <v-btn\n\t\t\t    \tflat\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"success\"\n\t\t\t        v-on:click=\"update(true)\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Save and Close</v-btn>\n\t\t\t</v-card-actions>\n    \t</v-card>\n\t</v-dialog>\n\n\t<!-- <v-snackbar\n\t    v-model=\"show_snackbar\"\n\t    v-bind:timeout=\"1500\"\n\t    bottom\n\t    color=\"success\"\n\t>\n\t    Saved!\n\t    <v-btn\n\t        flat\n\t        v-on:click=\"show_snackbar = false\"\n\t    >\n\t        Close\n\t    </v-btn>\n\t</v-snackbar> -->\n</template>\n<script>\n\timport validations from '../../../mixins/validations';\n\timport helpers from '../../../mixins/helpers';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n    import { required, minValue, maxValue } from 'vuelidate/lib/validators'\n\timport Template_Assignment from '../../../classes/template_assignment';\nexport default {\n    mixins: [\n        helpers,\n        validations,\n    ],\n    props: {\n        template_assignment_current: {\n        }\n    },\n    data() {\n    \treturn {\n            template_assignment: new Template_Assignment(this.template_assignment_current),\n\t\t\tdialog: false,\n    \t}\n\n    },\n    methods: {\n\t\tupdate(close) {\n            if(this.$refs.form.validate()) \n            {\n    \t\t\tthis.edit_template_assignment({\n    \t\t\t\tdata: {\n\t    \t\t\t\ttemplate_assignment_current: this.template_assignment_current,\n\t    \t\t\t\ttemplate_assignment_new: this.template_assignment,\n    \t\t\t\t\tproject: this.project_current,\n\t    \t\t\t},\n    \t\t\t}).then(() => {\n    \t\t\t\tif(close == true)\n    \t\t\t\t{\n                    \tthis.dialog = false;\n    \t\t\t\t\tthis.reset();\n    \t\t\t\t}\n    \t\t\t\tthis.$emit('edited');\n                });\n            }\n\t\t\t// console.log(this.project_current);\n\t\t},\t\n    \treset() {\n            this.template_assignment = new Template_Assignment(this.template_assignment_current),\n    \t\tthis.$v.$reset();\n\t\t\tthis.$v.$touch();\n    \t},\n\t\t...mapActions('moduleProjects', {\n\t\t\t'edit_template_assignment': 'edit_template_assignment',\n\t\t}),\n    },\n    computed: {\n\t\tlist_templates_assignment() {\n            return _.orderBy(this.project_current.templates_assignment, (template) => template.name);\n\t\t},\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    watch: {\n    \tdialog() {\n    \t\tthis.reset();\n    \t},\n    },\n    validations: {\n    \ttemplate_assignment: {\n\t    \tname: {\n\t    \t\trequired,\n\t    \t},\n\t    \ttemplate: {\n\t    \t\trequired,\n\t    \t\tcontains_form_injection: (value) => value != undefined && value.indexOf(' data-inject_input_forms') >= 0\n\t    \t},\n    \t},\n    },\n    created() {\n\t\tthis.$v.$touch();\n\t},\n    components: {\n    },\t\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_assignment/component_edit_template_assignment.vue",
			"file_size": 4545,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 4448,
				"line_ending": "Unix",
				"name": "component_edit_template_assignment.vue"
			}
		},
		{
			"contents": "<template>\n<v-dialog \n    v-model=\"dialog\"\n    max-width=\"500\"\n>\n    <v-btn\n        slot=\"activator\" \n        icon\n        small\n        v-on:click=\"dialog = true\"\n    >\n        <v-icon color=\"error\">delete</v-icon>\n    </v-btn>\n\n    <v-card>\n        <!-- <v-card-title>\n            <span class=\"headline\">Add Profile</span>\n            <v-spacer></v-spacer>\n            <v-btn icon v-on:click=\"dialog = false\">\n                <v-icon>close</v-icon>\n            </v-btn>\n        </v-card-title> -->\n        <v-card-text>\n            Do you really want to delete the worker template '{{ template_assignment.name }}'? \n        </v-card-text>\n\n        <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n                flat\n                color=\"error\"\n                v-on:click=\"remove()\"\n            >Delete</v-btn>\n        </v-card-actions>\n    </v-card>\n</v-dialog>\n</template>\n\n<script>\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nexport default {\n    props: {\n        template_assignment: {\n        }\n    },\n    data() {\n        return {\n            dialog: false,\n        }\n    },\n    methods: {\n        remove() {\n            this.delete_template_assignment({\n                project: this.project_current,\n                template_assignment: this.template_assignment,\n                callback: () => {\n                    this.$emit('deleted');\n                    this.dialog = false;\n                },\n            }).then(() => {\n            });\n        },\n        ...mapActions('moduleProjects', {\n            'delete_template_assignment': 'delete_template_assignment',\n        }),\n    },\n    computed: {\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    components: {\n\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_assignment/component_delete_template_assignment.vue",
			"file_size": 1970,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 1846,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_assignment.py",
			"settings":
			{
				"buffer_size": 3223,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/serializers/__init__.py",
			"settings":
			{
				"buffer_size": 746,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_db/api/classes/templates_hit.py",
			"settings":
			{
				"buffer_size": 955,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "templates_hit.py"
			}
		},
		{
			"file": "mturk_db/api/classes/templates_assignment.py",
			"settings":
			{
				"buffer_size": 1004,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "templates_assignment.py"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_hit.py",
			"settings":
			{
				"buffer_size": 2469,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "serializer_hit.py"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_template_hit.py",
			"settings":
			{
				"buffer_size": 3386,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "serializer_template_hit.py"
			}
		},
		{
			"contents": "<template>\n<div>\n    <v-data-table\n        v-bind:headers=\"list_headers\"\n        v-bind:items=\"list_templates_worker\"\n    >\n        <template\n            slot=\"items\"\n            slot-scope=\"props\"\n        >\n            <tr>\n                <td>\n                    {{ props.item.name }}\n                </td>\n                <td>\n                    {{ props.item.height_frame }} px\n                </td>\n                <td>\n                    {{ Object.keys(props.item.dict_parameters).length }}\n                </td>\n                <td>\n                    <span \n                        v-if=\"props.item.template_assignment == undefined\"\n                    >\n                        None\n                    </span> \n                    <span v-else>\n                        {{ props.item.template_assignment.name }}\n                    </span>\n                </td>\n                <td>\n                    <span \n                        v-if=\"props.item.template_hit == undefined\"\n                    >\n                        None\n                    </span> \n                    <span v-else>\n                        {{ props.item.template_hit.name }}\n                    </span>\n                </td>\n                <td>\n                    <span \n                        v-if=\"props.item.template_global == undefined\"\n                    >\n                        None\n                    </span> \n                    <span v-else>\n                        {{ props.item.template_global.name }}\n                    </span>\n                </td>\n                <td>\n                    <component-edit-template-worker\n                        v-bind:key=\"`component-edit-template-worker-${props.item.id}`\"\n                        v-bind:template_worker_current=\"props.item\"\n                        v-on:edited=\"snackbar_edited = true\"\n                    ></component-edit-template-worker>\n                    <!-- <component-delete-template-worker\n                        v-bind:key=\"`component-delete-template-worker-${props.item.id}`\"\n                        v-bind:template_worker=\"props.item\"\n                        v-on:deleted=\"snackbar_deleted = true\"\n                    ></component-delete-template-worker> -->\n                </td>\n            </tr>\n        </template>\n        <template slot=\"no-data\">\n            <div class=\"text-xs-center\">\n                There exist no templates!\n            </div>\n        </template>\n        <template slot=\"footer\">\n        <td colspan=\"100%\">\n        \t<component-add-template-worker\n                v-on:created=\"snackbar_created = true\"\n            ></component-add-template-worker>\n        </td>\n    </template>\n    </v-data-table>\n\n    <v-snackbar\n        v-model=\"snackbar_deleted\"\n        v-bind:timeout=\"1500\"\n        bottom\n    >\n        <v-spacer></v-spacer>\n        Deleted!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n\n    <v-snackbar\n        v-model=\"snackbar_created\"\n        v-bind:timeout=\"1500\"\n        bottom\n        color=\"success\"\n    >\n        <v-spacer></v-spacer>\n        Saved!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n\n    <v-snackbar\n        v-model=\"snackbar_edited\"\n        v-bind:timeout=\"1500\"\n        bottom\n        color=\"success\"\n    >\n        <v-spacer></v-spacer>\n        Updated!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n</div>\n</template>\n\n<script>\n    import ComponentAddTemplateWorker from './component_add_template_worker.vue';\n    import ComponentEditTemplateWorker from './component_edit_template_worker.vue';\n    import ComponentDeleteTemplateWorker from './component_delete_template_worker.vue';\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n    import table from '../../../mixins/table';\nexport default {\n    mixins: [\n        table,\n    ],\n    name: 'component-list-templates-worker',\n    data () {\n        return {\n            list_headers: [\n                {\n                    text: 'Name',\n                    value: 'name',\n                },\n                {\n                    text: 'Height',\n                    value: 'height_frame',\n                },\n                {\n                    text: '#Variables',\n                    value: 'count_parameters',\n                },\n                {\n                    text: 'Assignment Template',\n                    value: 'template_assigmnent',\n                },\n                {\n                    text: 'Assignment HIT',\n                    value: 'template_hit',\n                },\n                {\n                    text: 'Assignment Global',\n                    value: 'template_global',\n                },\n                {\n                    text: 'Actions',\n                    value: '',\n                    sortable: false,\n                },\n            ],\n\n            snackbar_deleted: false,\n            snackbar_edited: false,\n            snackbar_created: false,\n        }\n    },\n    computed: {\n        list_templates_worker() {\n        \t// return [{name:\"dawd\"}]\n            if(this.project_current.templates_worker == null) return [];\n\n            return _.orderBy(this.project_current.templates_worker, (template) => template.name);\n        },\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    methods: {\n    },\n    created: function() {\n    },\n    components: {\n        ComponentAddTemplateWorker,\n        ComponentEditTemplateWorker,\n    \tComponentDeleteTemplateWorker,\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_worker/component_list_templates_worker.vue",
			"file_size": 5524,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 5522,
				"line_ending": "Unix",
				"name": "component_list_templates_worker.vue"
			}
		},
		{
			"contents": "<template>\n    <v-dialog \n        v-model=\"dialog\"\n        max-width=\"80%\"\n    >\n        <v-btn\n            slot=\"activator\" \n            icon\n            small\n            v-on:click=\"dialog = true\"\n        >\n            <v-icon color=\"warning\">edit</v-icon>\n        </v-btn>\n      \t<v-card>\n\t        <v-card-title>\n\t            <span class=\"headline\">Edit Worker Template</span>\n\t            <v-spacer></v-spacer>\n\t            <v-btn icon v-on:click=\"dialog = false\">\n\t                <v-icon>close</v-icon>\n\t            </v-btn>\n\t        </v-card-title>\n\t        <v-card-text>\n\t      \t\t<v-form ref=\"form\" lazy-validation>\n\t\t\t\t\t<v-text-field\n\t\t\t            required\n\t\t\t            label=\"Name\"\n\t\t\t  \t\t\tv-bind:value=\"template_worker.name\"\n\t\t\t            v-on:input=\"template_worker.name=$event; $v.template_worker.name.$touch()\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_worker.name\"\n\t\t\t        ></v-text-field>\n\t\t\t\t\t<v-text-field\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t            required\n\t\t\t  \t\t\tv-bind:value=\"template_worker.height_frame\"\n\t\t\t            v-on:input=\"template_worker.height_frame=try_number($event); $v.template_worker.height_frame.$touch()\"\n\t\t\t            label=\"Height\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_worker.height_frame\"\n\t\t\t        ></v-text-field>\n\t\t\t\t\t<v-text-field\n\t\t\t            required\n\t\t\t  \t\t\tv-bind:value=\"template_worker.template\"\n\t\t\t            v-on:input=\"template_worker.template=$event; $v.template_worker.template.$touch()\"\n\t\t\t            label=\"Template\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_worker.template\"\n\t\t\t        ></v-text-field>\n\n\t\t\t        <v-select\n\t\t\t  \t\t\tv-bind:value=\"template_worker.template_assignment\"\n\t\t\t            v-on:input=\"template_worker.template_assignment = $event; $v.template_worker.template_assignment.$touch()\"\n\t\t\t            v-bind:items=\"list_templates_assignment\"\n\t\t\t            label=\"Assignment Template\"\n\t\t\t            item-text=\"name\"\n\t\t\t            item-value=\"id\"\n\t\t\t            v-bind:error-messages=\"validation_errors.template_worker.template_assignment\"\n                \t\tclearable\n\t\t\t        ></v-select>\n\n\t\t\t        <v-select\n\t\t\t  \t\t\tv-bind:value=\"template_worker.template_hit\"\n\t\t\t            v-on:input=\"template_worker.template_hit = $event; $v.template_worker.template_hit.$touch()\"\n\t\t\t            v-bind:items=\"list_templates_hit\"\n\t\t\t            label=\"HIT Template\"\n\t\t\t            item-text=\"name\"\n\t\t\t            item-value=\"id\"\n\t\t\t            v-bind:error-messages=\"validation_errors.template_worker.template_hit\"\n                \t\tclearable\n\t\t\t        ></v-select>\n\n\t\t\t        <v-select\n\t\t\t  \t\t\tv-bind:value=\"template_worker.template_global\"\n\t\t\t            v-on:input=\"template_worker.template_global = $event; $v.template_worker.template_global.$touch()\"\n\t\t\t            v-bind:items=\"list_templates_global\"\n\t\t\t            label=\"Global Template\"\n\t\t\t            item-text=\"name\"\n\t\t\t            item-value=\"id\"\n\t\t\t            v-bind:error-messages=\"validation_errors.template_worker.template_global\"\n                \t\tclearable\n\t\t\t        ></v-select>\n\t\t    \t</v-form>\n\n\t\t\t    <v-btn\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"primary\"\n\t\t\t        v-on:click=\"update()\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Update</v-btn>\n\t\t\t</v-card-text>\n    \t</v-card>\n\t</v-dialog>\n\n\t<!-- <v-snackbar\n\t    v-model=\"show_snackbar\"\n\t    v-bind:timeout=\"1500\"\n\t    bottom\n\t    color=\"success\"\n\t>\n\t    Saved!\n\t    <v-btn\n\t        flat\n\t        v-on:click=\"show_snackbar = false\"\n\t    >\n\t        Close\n\t    </v-btn>\n\t</v-snackbar> -->\n</template>\n<script>\n\timport validations from '../../../mixins/validations';\n\timport helpers from '../../../mixins/helpers';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n    import { required, minValue, maxValue } from 'vuelidate/lib/validators'\n\timport Template_Worker from '../../../classes/template_worker';\nexport default {\n    mixins: [\n        helpers,\n        validations,\n    ],\n    props: {\n        template_worker_current: {\n        }\n    },\n    data() {\n    \treturn {\n            template_worker: new Template_Worker(this.template_worker_current),\n\t\t\tdialog: false,\n    \t}\n\n    },\n    methods: {\n\t\tupdate() {\n            if(this.$refs.form.validate()) \n            {\n    \t\t\tthis.edit_template_worker({\n    \t\t\t\tdata: {\n\t    \t\t\t\ttemplate_worker_current: this.template_worker_current,\n\t    \t\t\t\ttemplate_worker_new: this.template_worker,\n    \t\t\t\t\tproject: this.project_current,\n\t    \t\t\t},\n    \t\t\t}).then(() => {\n                    this.dialog = false;\n    \t\t\t\tthis.$emit('edited');\n    \t\t\t\tthis.reset();\n                });\n            }\n\t\t\t// console.log(this.project_current);\n\t\t},\t\n    \treset() {\n            this.template_worker = new Template_Worker(this.template_worker_current),\n    \t\tthis.$v.$reset();\n\t\t\tthis.$v.$touch();\n    \t},\n\t\t...mapActions('moduleProjects', {\n\t\t\t'edit_template_worker': 'edit_template_worker',\n\t\t}),\n    },\n    computed: {\n\t\tlist_templates_assignment() {\n            return _.orderBy(this.project_current.templates_assignment, (template) => template.name);\n\t\t},\n\t\tlist_templates_hit() {\n            return _.orderBy(this.project_current.templates_hit, (template) => template.name);\n\t\t},\n\t\tlist_templates_global() {\n            return _.orderBy(this.project_current.templates_global, (template) => template.name);\n\t\t},\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    watch: {\n    \tdialog() {\n    \t\tthis.reset();\n    \t},\n    },\n    validations: {\n    \ttemplate_worker: {\n\t    \tname: {\n\t    \t\trequired,\n\t    \t},\n\t    \theight_frame: {\n\t    \t\trequired,\n\t    \t\tminValue: minValue(1),\n\t    \t},\n\t    \ttemplate: {\n\t    \t\trequired,\n\t    \t},\n\t    \ttemplate_assignment: {\n\t    \t},\n\t    \ttemplate_hit: {\n\t    \t},\n\t    \ttemplate_global: {\n\t    \t},\n    \t},\n    },\n    created() {\n\t\tthis.$v.$touch();\n\t},\n    components: {\n    },\t\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_worker/component_edit_template_worker.vue",
			"file_size": 6083,
			"file_write_time": 131911841714884385,
			"settings":
			{
				"buffer_size": 5962,
				"line_ending": "Unix",
				"name": "component_edit_template_worker.vue"
			}
		},
		{
			"contents": "<template>\n<div>\n\t<v-dialog v-model=\"dialog\">\n\t\t<v-btn \n\t\t\tslot=\"activator\" \n\t\t\tcolor=\"primary\"\n\t\t\tsmall\n\t\t><v-icon>add</v-icon> Add Template</v-btn>\n      \t<v-card>\n\t        <v-card-title>\n\t            <span class=\"headline\">Add Worker Template</span>\n\t            <v-spacer></v-spacer>\n\t            <v-btn icon v-on:click=\"dialog = false\">\n\t                <v-icon>close</v-icon>\n\t            </v-btn>\n\t        </v-card-title>\n\t        <v-card-text>\n\t      \t\t<v-form ref=\"form\">\n\t\t\t\t\t<v-text-field\n\t\t\t            required\n\t\t\t            label=\"Name\"\n\t\t\t  \t\t\tv-bind:value=\"template_worker.name\"\n\t\t\t            v-on:input=\"template_worker.name=$event; $v.template_worker.name.$touch()\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_worker.name\"\n\t\t\t        ></v-text-field>\n\t\t\t\t\t<v-text-field\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t            required\n\t\t\t  \t\t\tv-bind:value=\"template_worker.height_frame\"\n\t\t\t            v-on:input=\"template_worker.height_frame=try_number($event); $v.template_worker.height_frame.$touch()\"\n\t\t\t            label=\"Height\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_worker.height_frame\"\n\t\t\t        ></v-text-field>\n\t\t\t\t\t<v-text-field\n\t\t\t            required\n\t\t\t  \t\t\tv-bind:value=\"template_worker.template\"\n\t\t\t            v-on:input=\"template_worker.template=$event; $v.template_worker.template.$touch()\"\n\t\t\t            label=\"Template\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_worker.template\"\n\t\t\t        ></v-text-field>\n\n\t\t\t        <v-select\n\t\t\t  \t\t\tv-bind:value=\"template_worker.template_assignment\"\n\t\t\t            v-on:input=\"template_worker.template_assignment = $event; $v.template_worker.template_assignment.$touch()\"\n\t\t\t            v-bind:items=\"list_templates_assignment\"\n\t\t\t            label=\"Assignment Template\"\n\t\t\t            item-text=\"name\"\n\t\t\t            item-value=\"id\"\n\t\t\t            v-bind:error-messages=\"validation_errors.template_worker.template_assignment\"\n\t\t\t        ></v-select>\n\n\t\t\t        <v-select\n\t\t\t  \t\t\tv-bind:value=\"template_worker.template_hit\"\n\t\t\t            v-on:input=\"template_worker.template_hit = $event; $v.template_worker.template_hit.$touch()\"\n\t\t\t            v-bind:items=\"list_templates_hit\"\n\t\t\t            label=\"HIT Template\"\n\t\t\t            item-text=\"name\"\n\t\t\t            item-value=\"id\"\n\t\t\t            v-bind:error-messages=\"validation_errors.template_worker.template_hit\"\n\t\t\t        ></v-select>\n\n\t\t\t        <v-select\n\t\t\t  \t\t\tv-bind:value=\"template_worker.template_global\"\n\t\t\t            v-on:input=\"template_worker.template_global = $event; $v.template_worker.template_global.$touch()\"\n\t\t\t            v-bind:items=\"list_templates_global\"\n\t\t\t            label=\"Global Template\"\n\t\t\t            item-text=\"name\"\n\t\t\t            item-value=\"id\"\n\t\t\t            v-bind:error-messages=\"validation_errors.template_worker.template_global\"\n\t\t\t        ></v-select>\n\t\t\t\t\t<!-- <v-text-field\n\t\t\t            required\n\t\t\t  \t\t\tv-bind:value=\"template\"\n\t\t\t            v-on:input=\"template=$event; $v.template.$touch()\"\n\t\t\t            label=\"Template\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template\"\n\t\t\t        ></v-text-field> -->\n\n\t\t\t        <!-- <component-form-settings-batch\n\t\t\t        \tv-bind.sync=\"settings_batch\"\n\t\t\t        ></component-form-settings-batch> -->\n\t\t    \t</v-form>\n\t\t\t    <v-btn\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"primary\"\n\t\t\t        v-on:click=\"create()\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Create</v-btn>\n\t\t\t</v-card-text>\n    \t</v-card>\n\t</v-dialog>\n</div>\n</template>\n\n<script>\n\t// import ComponentFormSettingsBatch from './component_form_settings_batch';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n\n\timport { required, minValue } from 'vuelidate/lib/validators'\n\timport validations from '../../../mixins/validations';\n\timport helpers from '../../../mixins/helpers';\n\timport Template_Worker from '../../../classes/template_worker';\nexport default {\n    mixins: [\n        helpers,\n        validations,\n    ],\n    data() {\n    \treturn {\n    \t\ttemplate_worker: new Template_Worker(),\n\t\t\tdialog: false,\n    \t}\n    },\n    watch: {\n    \tdialog() {\n    \t\tthis.reset();\n    \t},\n    },\n    validations: {\n    \ttemplate_worker: {\n\t    \tname: {\n\t    \t\trequired,\n\t    \t},\n\t    \theight_frame: {\n\t    \t\trequired,\n\t    \t\tminValue: minValue(1),\n\t    \t},\n\t    \ttemplate: {\n\t    \t\trequired,\n\t    \t},\n\t    \ttemplate_assignment: {\n\t    \t},\n\t    \ttemplate_hit: {\n\t    \t},\n\t    \ttemplate_global: {\n\t    \t},\n    \t},\n    },\n    methods: {\n    \treset() {\n    \t\tthis.template_worker = new Template_Worker();\n    \t\tthis.$v.$reset();\n    \t},\n\t\tcreate() {\n            if(this.$refs.form.validate()) \n            {\n    \t\t\tthis.create_template_worker({\n    \t\t\t\ttemplate_worker: this.template_worker,\n    \t\t\t\tproject: this.project_current,\n    \t\t\t}).then(() => {\n    \t\t\t\tthis.$emit('created');\n                    this.dialog = false;\n                    this.reset();\n                });\n            }\n\t\t},\t\t\n\t\t...mapActions('moduleProjects', {\n\t\t\t'create_template_worker': 'create_template_worker',\n\t\t}),\n    },\n    computed: {\n\t\tlist_templates_assignment() {\n            return _.orderBy(this.project_current.templates_assignment, (template) => template.name);\n\t\t},\n\t\tlist_templates_hit() {\n            return _.orderBy(this.project_current.templates_hit, (template) => template.name);\n\t\t},\n\t\tlist_templates_global() {\n            return _.orderBy(this.project_current.templates_global, (template) => template.name);\n\t\t},\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n\tcomponents: {\n\t},\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_worker/component_add_template_worker.vue",
			"file_size": 5720,
			"file_write_time": 131911841283872916,
			"settings":
			{
				"buffer_size": 5650,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n\t<v-dialog v-model=\"dialog\">\n\t\t<v-btn \n\t\t\tslot=\"activator\" \n\t\t\tcolor=\"primary\"\n\t\t\tsmall\n\t\t><v-icon>add</v-icon> Add Template</v-btn>\n      \t<v-card>\n\t        <v-card-title>\n\t            <span class=\"headline\">Add HIT Template</span>\n\t            <v-spacer></v-spacer>\n\t            <v-btn icon v-on:click=\"dialog = false\">\n\t                <v-icon>close</v-icon>\n\t            </v-btn>\n\t        </v-card-title>\n\t        <v-card-text>\n\t      \t\t<v-form ref=\"form\">\n\t\t\t\t\t<v-text-field\n\t\t\t            required\n\t\t\t            label=\"Name\"\n\t\t\t  \t\t\tv-bind:value=\"name\"\n\t\t\t            v-on:input=\"name=$event; $v.name.$touch()\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.name\"\n\t\t\t        ></v-text-field>\n\t\t\t\t\t<v-textarea\n\t\t\t            required\n\t\t\t            rows=\"20\"\n\t\t\t  \t\t\tv-bind:value=\"template\"\n\t\t\t            v-on:input=\"template=$event; $v.template.$touch()\"\n\t\t\t            label=\"Template\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template\"\n\t\t\t        ></v-textarea>\n\n\t\t\t        <!-- <component-form-settings-batch\n\t\t\t        \tv-bind.sync=\"settings_batch\"\n\t\t\t        ></component-form-settings-batch> -->\n\t\t    \t</v-form>\n\t\t\t    <v-btn\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"primary\"\n\t\t\t        v-on:click=\"create()\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Create</v-btn>\n\t\t\t</v-card-text>\n    \t</v-card>\n\t</v-dialog>\n</div>\n</template>\n\n<script>\n\t// import ComponentFormSettingsBatch from './component_form_settings_batch';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n\n\timport { required, minValue } from 'vuelidate/lib/validators'\n\timport validations from '../../../mixins/validations';\nexport default {\n    mixins: [\n        validations,\n    ],\n    data() {\n    \treturn {\n    \t\tname: undefined,\n    \t\ttemplate: undefined,\n\n\t\t\tdialog: false,\n    \t}\n    },\n    watch: {\n    \tdialog() {\n    \t\tthis.reset();\n    \t},\n    },\n    validations: {\n    \tname: {\n    \t\trequired,\n    \t},\n    \ttemplate: {\n    \t\trequired,\n\t\t\tcontains_injection_assignments: (value) => value != undefined && value.indexOf(' data-inject_assignments') >= 0\n    \t},\n    },\n    methods: {\n    \treset() {\n    \t\tthis.name = undefined;\n    \t\tthis.template = undefined;\n    \t\tthis.$v.$reset();\n    \t},\n\t\tcreate() {\n            if(this.$refs.form.validate()) \n            {\n    \t\t\tthis.create_template_hit({\n    \t\t\t\ttemplate_hit: {\n    \t\t\t\t\tname: this.name,\n    \t\t\t\t\ttemplate: this.template,\n    \t\t\t\t},\n    \t\t\t\tproject: this.project_current,\n    \t\t\t}).then(() => {\n    \t\t\t\tthis.$emit('created');\n                    this.dialog = false;\n                    this.reset();\n                });\n            }\n\t\t},\t\t\n\t\t...mapActions('moduleProjects', {\n\t\t\t'create_template_hit': 'create_template_hit',\n\t\t}),\n    },\n    computed: {\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n\tcomponents: {\n\t},\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_hit/component_add_template_hit.vue",
			"file_size": 3082,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 2938,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<v-dialog \n    v-model=\"dialog\"\n    max-width=\"500\"\n>\n    <v-btn\n        slot=\"activator\" \n        icon\n        small\n        v-on:click=\"dialog = true\"\n    >\n        <v-icon color=\"error\">delete</v-icon>\n    </v-btn>\n\n    <v-card>\n        <!-- <v-card-title>\n            <span class=\"headline\">Add Profile</span>\n            <v-spacer></v-spacer>\n            <v-btn icon v-on:click=\"dialog = false\">\n                <v-icon>close</v-icon>\n            </v-btn>\n        </v-card-title> -->\n        <v-card-text>\n            Do you really want to delete the HIT template '{{ template_hit.name }}'? \n        </v-card-text>\n\n        <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n                flat\n                color=\"error\"\n                v-on:click=\"remove()\"\n            >Delete</v-btn>\n        </v-card-actions>\n    </v-card>\n</v-dialog>\n</template>\n\n<script>\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nexport default {\n    props: {\n        template_hit: {\n        }\n    },\n    data() {\n        return {\n            dialog: false,\n        }\n    },\n    methods: {\n        remove() {\n            this.delete_template_hit({\n                project: this.project_current,\n                template_hit: this.template_hit,\n                callback: () => {\n                    this.$emit('deleted');\n                    this.dialog = false;\n                },\n            }).then(() => {\n            });\n        },\n        ...mapActions('moduleProjects', {\n            'delete_template_hit': 'delete_template_hit',\n        }),\n    },\n    computed: {\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    components: {\n\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_hit/component_delete_template_hit.vue",
			"file_size": 1918,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 1794,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n    <v-dialog \n        v-model=\"dialog\"\n        max-width=\"80%\"\n        persistent\n    >\n        <v-btn\n            slot=\"activator\" \n            icon\n            small\n            v-on:click=\"dialog = true\"\n        >\n            <v-icon color=\"warning\">edit</v-icon>\n        </v-btn>\n      \t<v-card>\n\t        <v-card-title>\n\t            <span class=\"headline\">Edit HIT Template</span>\n\t            <v-spacer></v-spacer>\n\t            <v-btn icon v-on:click=\"dialog = false\">\n\t                <v-icon>close</v-icon>\n\t            </v-btn>\n\t        </v-card-title>\n\t        <v-card-text>\n\t      \t\t<v-form ref=\"form\" lazy-validation>\n\t\t\t\t\t<v-text-field\n\t\t\t            required\n\t\t\t            label=\"Name\"\n\t\t\t  \t\t\tv-bind:value=\"template_hit.name\"\n\t\t\t            v-on:input=\"template_hit.name=$event; $v.template_hit.name.$touch()\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_hit.name\"\n\t\t\t        ></v-text-field>\n\t\t\t\t\t<v-textarea\n\t\t\t            required\n\t\t\t            rows=\"20\"\n\t\t\t  \t\t\tv-bind:value=\"template_hit.template\"\n\t\t\t            v-on:input=\"template_hit.template=$event; $v.template_hit.template.$touch()\"\n\t\t\t            label=\"Template\"\n\t\t        \t\tv-bind:error-messages=\"validation_errors.template_hit.template\"\n\t\t\t        ></v-textarea>\n\t\t    \t</v-form>\n\t\t\t</v-card-text>\n\n       \t \t<v-card-actions>\n\t\t\t    <v-btn\n\t\t\t    \tflat\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"înfo\"\n\t\t\t        v-on:click=\"dialog = false; reset();\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Cancel</v-btn>\n\t\t\t    <v-spacer></v-spacer>\n\t\t\t    <v-btn\n\t\t\t    \tflat\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"primary\"\n\t\t\t        v-on:click=\"update()\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Save</v-btn>\n\n\t\t\t    <v-btn\n\t\t\t    \tflat\n\t\t\t        class=\"ml-0\"\n\t\t\t        color=\"success\"\n\t\t\t        v-on:click=\"update(true)\"\n\t\t\t\t\tv-bind:disabled=\"$v.$invalid\"\n\t\t\t    >Save and Close</v-btn>\n\t\t\t</v-card-actions>\n    \t</v-card>\n\t</v-dialog>\n\n\t<!-- <v-snackbar\n\t    v-model=\"show_snackbar\"\n\t    v-bind:timeout=\"1500\"\n\t    bottom\n\t    color=\"success\"\n\t>\n\t    Saved!\n\t    <v-btn\n\t        flat\n\t        v-on:click=\"show_snackbar = false\"\n\t    >\n\t        Close\n\t    </v-btn>\n\t</v-snackbar> -->\n</template>\n<script>\n\timport validations from '../../../mixins/validations';\n\timport helpers from '../../../mixins/helpers';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n    import { required, minValue, maxValue } from 'vuelidate/lib/validators'\n\timport Template_HIT from '../../../classes/template_hit';\nexport default {\n    mixins: [\n        helpers,\n        validations,\n    ],\n    props: {\n        template_hit_current: {\n        }\n    },\n    data() {\n    \treturn {\n            template_hit: new Template_HIT(this.template_hit_current),\n\t\t\tdialog: false,\n    \t}\n\n    },\n    methods: {\n\t\tupdate(close) {\n            if(this.$refs.form.validate()) \n            {\n    \t\t\tthis.edit_template_hit({\n    \t\t\t\tdata: {\n\t    \t\t\t\ttemplate_hit_current: this.template_hit_current,\n\t    \t\t\t\ttemplate_hit_new: this.template_hit,\n    \t\t\t\t\tproject: this.project_current,\n\t    \t\t\t},\n    \t\t\t}).then(() => {\n    \t\t\t\tif(close == true)\n    \t\t\t\t{\n                    \tthis.dialog = false;\n    \t\t\t\t\tthis.reset();\n    \t\t\t\t}\n    \t\t\t\tthis.$emit('edited');\n                });\n            }\n\t\t\t// console.log(this.project_current);\n\t\t},\t\n    \treset() {\n            this.template_hit = new Template_HIT(this.template_hit_current),\n    \t\tthis.$v.$reset();\n\t\t\tthis.$v.$touch();\n    \t},\n\t\t...mapActions('moduleProjects', {\n\t\t\t'edit_template_hit': 'edit_template_hit',\n\t\t}),\n    },\n    computed: {\n\t\tlist_templates_hit() {\n            return _.orderBy(this.project_current.templates_hit, (template) => template.name);\n\t\t},\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    watch: {\n    \tdialog() {\n    \t\tthis.reset();\n    \t},\n    },\n    validations: {\n    \ttemplate_hit: {\n\t    \tname: {\n\t    \t\trequired,\n\t    \t},\n\t    \ttemplate: {\n\t    \t\trequired,\n    \t\t\tcontains_injection_assignments: (value) => value != undefined && value.indexOf(' data-inject_assignments') >= 0\n\t    \t},\n    \t},\n    },\n    created() {\n\t\tthis.$v.$touch();\n\t},\n    components: {\n    },\t\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_hit/component_edit_template_hit.vue",
			"file_size": 4362,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 4259,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n    <v-dialog \n        v-model=\"dialog\"\n        max-width=\"500\"\n    >\n        <v-btn\n            slot=\"activator\" \n            icon\n            small\n            v-on:click=\"dialog = true\"\n        >\n            <v-icon color=\"error\">delete</v-icon>\n        </v-btn>\n\n        <v-card>\n            <!-- <v-card-title>\n                <span class=\"headline\">Add Profile</span>\n                <v-spacer></v-spacer>\n                <v-btn icon v-on:click=\"dialog = false\">\n                    <v-icon>close</v-icon>\n                </v-btn>\n            </v-card-title> -->\n            <v-card-text>\n                Do you really want to delete the assignment template '{{ template_worker.name }}'? \n            </v-card-text>\n\n            <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn\n                    flat\n                    color=\"error\"\n                    v-on:click=\"remove()\"\n                >Delete</v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-dialog>\n</template>\n\n<script>\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nexport default {\n    props: {\n        template_worker: {\n        }\n    },\n    data() {\n        return {\n            dialog: false,\n        }\n    },\n    methods: {\n        remove() {\n            this.delete_template_worker({\n                project: this.project_current,\n                template_worker: this.template_worker,\n                callback: () => {\n                    this.$emit('deleted');\n                    this.dialog = false;\n                },\n            }).then(() => {\n            });\n        },\n        ...mapActions('moduleProjects', {\n            'delete_template_worker': 'delete_template_worker',\n        }),\n    },\n    computed: {\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    components: {\n\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_worker/component_delete_template_worker.vue",
			"file_size": 2077,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 1954,
				"line_ending": "Unix",
				"name": "component_delete_template_worker.vue"
			}
		},
		{
			"contents": "<template>\n<div>\n\t<h2 class=\"headline\">HIT Templates</h2>\n    <component-list-templates-hit></component-list-templates-hit>\n</div>\n</template>\n\n<script>\n    import ComponentListTemplatesHit from './component_list_templates_hit.vue';\n\t// import settings_batch from '../../../mixins/settings_batch';\n    import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\nexport default {\n    // mixins: [\n    //     settings_batch,\n    // ],\n\tname: 'component-templates-hit',\n\tdata () {\n\t\treturn {\n\t\t\t// search: undefined,\n\t\t}\n\t},\n\tmethods: {\n\t},\n    computed: {\n    },\n    components: {\n        ComponentListTemplatesHit\n    },\n}\n</script>\n\n<style scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_hit/component_templates_hit.vue",
			"file_size": 695,
			"file_write_time": 131883281376284685,
			"settings":
			{
				"buffer_size": 695,
				"line_ending": "Unix",
				"name": "component_templates_hit.vue"
			}
		},
		{
			"contents": "<template>\n<div>\n    <v-data-table\n        v-bind:headers=\"list_headers\"\n        v-bind:items=\"list_templates_hit\"\n    >\n        <template\n            slot=\"items\"\n            slot-scope=\"props\"\n        >\n            <tr>\n                <td>\n                    {{ props.item.name }}\n                </td>\n                <td>\n                    <component-edit-template-hit\n                        v-bind:key=\"`component-edit-template-hit-${props.item.id}`\"\n                        v-bind:template_hit_current=\"props.item\"\n                        v-on:edited=\"snackbar_edited = true\"\n                    ></component-edit-template-hit>\n                    <component-delete-template-hit\n                        v-bind:key=\"`component-delete-template-hit-${props.item.id}`\"\n                        v-bind:template_hit=\"props.item\"\n                        v-on:deleted=\"snackbar_deleted = true\"\n                    ></component-delete-template-hit>\n                </td>\n            </tr>\n        </template>\n        <template slot=\"no-data\">\n            <div class=\"text-xs-center\">\n                There exist no templates!\n            </div>\n        </template>\n        <template slot=\"footer\">\n        <td colspan=\"100%\">\n        \t<component-add-template-hit\n                v-on:created=\"snackbar_created = true\"\n            ></component-add-template-hit>\n        </td>\n    </template>\n    </v-data-table>\n\n    <v-snackbar\n        v-model=\"snackbar_deleted\"\n        v-bind:timeout=\"1500\"\n        bottom\n    >\n        <v-spacer></v-spacer>\n        Deleted!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n\n    <v-snackbar\n        v-model=\"snackbar_created\"\n        v-bind:timeout=\"1500\"\n        bottom\n        color=\"success\"\n    >\n        <v-spacer></v-spacer>\n        Saved!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n\n    <v-snackbar\n        v-model=\"snackbar_edited\"\n        v-bind:timeout=\"1500\"\n        bottom\n        color=\"success\"\n    >\n        <v-spacer></v-spacer>\n        Updated!\n        <v-spacer></v-spacer>\n    </v-snackbar>\n</div>\n</template>\n\n<script>\n    import ComponentAddTemplateHit from './component_add_template_hit.vue';\n    import ComponentDeleteTemplateHit from './component_delete_template_hit.vue';\n    import ComponentEditTemplateHit from './component_edit_template_hit.vue';\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import _ from 'lodash';\n    import table from '../../../mixins/table';\nexport default {\n    mixins: [\n        table,\n    ],\n    name: 'component-list-templates-hit',\n    data () {\n        return {\n            list_headers: [\n                {\n                    text: 'Name',\n                    value: 'name',\n                },\n                {\n                    text: 'Actions',\n                    value: '',\n                    sortable: false,\n                },\n            ],\n\n            snackbar_deleted: false,\n            snackbar_edited: false,\n            snackbar_created: false,\n        }\n    },\n    computed: {\n        list_templates_hit() {\n        \t// return [{name:\"dawd\"}]\n            if(this.project_current.templates_hit == null) return [];\n\n            return _.orderBy(this.project_current.templates_hit, (template) => template.name);\n        },\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    methods: {\n    },\n    created: function() {\n    },\n    components: {\n        ComponentAddTemplateHit,\n        ComponentDeleteTemplateHit,\n    \tComponentEditTemplateHit,\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_hit/component_list_templates_hit.vue",
			"file_size": 3564,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 3562,
				"line_ending": "Unix",
				"name": "component_list_templates_hit.vue"
			}
		},
		{
			"contents": "// export const STATUS_BLOCK = {\n//     NONE: 1,\n//     SOFT: 2,\n//     HARD: 3,\n// }\nexport const STATUS_EXTERNAL = {\n    APPROVED: 0,\n    REJECTED: 1,\n    APPROVED_OVERRIDDEN: 2,\n};\nexport const STATUS_INTERNAL = {\n    APPROVED: 0,\n    REJECTED: 1,\n};\n\nexport const DESCRIPTIONS = {\n    TITLE_HIT: 'The title of the HIT. A title should be short and descriptive about the kind of task the HIT contains. On the Amazon Mechanical Turk web site, the HIT title appears in search results, and everywhere the HIT is mentioned.',\n    DESCRIPTION_HIT: 'A general description of the HIT. A description includes detailed information about the kind of task the HIT contains. On the Amazon Mechanical Turk web site, the HIT description appears in the expanded view of search results, and in the HIT and assignment screens. A good description gives the user enough information to evaluate the HIT before accepting it.',\n    REWARD_HIT: 'The US Dollar amount the Requester will pay a Worker for successfully completing the HIT.',\n    ASSIGNEMENTS_MAX_HIT: 'The number of times the HIT can be accepted and completed before the HIT becomes unavailable.',\n    LIFETIME_HIT: 'An amount of time, in seconds, after which the HIT is no longer available for users to accept. After the lifetime of the HIT elapses, the HIT no longer appears in HIT searches, even if not all of the assignments for the HIT have been accepted.',\n    DURATION_HIT: 'The amount of time, in seconds, that a Worker has to complete the HIT after accepting it. If a Worker does not complete the assignment within the specified duration, the assignment is considered abandoned. If the HIT is still active (that is, its lifetime has not elapsed), the assignment becomes available for other users to find and accept.',\n    KEYWORDS_HIT: 'One or more words or phrases that describe the HIT. These words are used in searches to find HITs.',\n\n\n\n\n};",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/enums.js",
			"file_size": 1895,
			"file_write_time": 131883281376164686,
			"settings":
			{
				"buffer_size": 1895,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "export default {\n \tmethods: {\n \t\tamount_formatted(value) {\n \t\t\tif(isNaN(value))\n \t\t\t{\n \t\t\t\treturn 'invalid';\n \t\t\t} else {\n \t\t\t\treturn (value / 100.0).toFixed(2) + ' $';\n \t\t\t}\n \t\t},\n \t\ttry_money(value) {\n \t\t\tconst number = this.try_number(value);\n \t\t\tif(isNaN(number))\n \t\t\t{\n \t\t\t\treturn number;\n \t\t\t} else {\n \t\t\t\treturn number * 100;\n \t\t\t}\n \t\t},\n \t\ttry_number(number) {\n\t\t\tconst number_parsed = parseFloat(number);\n\t\t\tif(isNaN(number_parsed))\n\t\t\t{\n\t\t\t\tconsole.log('######')\n\t\t\t\treturn number;\n\t\t\t} else {\n\t\t\t\treturn number_parsed;\n\t\t\t}\n\t\t},\n\t}\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/helpers.js",
			"file_size": 544,
			"file_write_time": 131883281376324685,
			"settings":
			{
				"buffer_size": 544,
				"line_ending": "Unix",
				"name": "helpers.js"
			}
		},
		{
			"contents": "<template>\n<span>{{ amount_formatted_ }}</span>\n</template>\n\n<script>\n    import helpers from '../mixins/helpers';\nexport default {\n    mixins: [\n        helpers,\n    ],\n    name: 'component-display-money',\n    props: {\n    \tamount: {\n    \t\trequired: true,\n    \t\ttype: Number,\n    \t}\n    },\n    computed: {\n    \tamount_formatted_: function() {\n            return this.amount_formatted(this.amount);\n    \t\treturn this.amount.toFixed(2) + ' $';\n    \t},\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/component-display-money.vue",
			"file_size": 469,
			"file_write_time": 131883281376204686,
			"settings":
			{
				"buffer_size": 469,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<span>{{ datetime_formatted }}</span>\n</template>\n\n<script>\n    // import helpers from '../mixins/helpers';\nexport default {\n    // mixins: [\n    //     // helpers,\n    // ],\n    name: 'component_display_datetime',\n    props: {\n    \tdatetime: {\n    \t\trequired: true,\n    \t\ttype: Date|undefined,\n    \t}\n    },\n    computed: {\n    \tdatetime_formatted: function() {\n    \t\tif(this.datetime == undefined)\n    \t\t{\n    \t\t\treturn undefined;\n    \t\t} else{\n    \t\t\t// return this.datetime;\n    \t\t\t// console.log(typeof this.datetime)\n    \t\t\t// console.log(this.datetime)\n    \t\t\treturn this.datetime.toLocaleString();\n    \t\t}\n      //       return this.amount_formatted(this.amount);\n    \t\t// return this.amount.toFixed(2) + ' $';\n    \t},\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/helpers/component_display_datetime.vue",
			"file_size": 880,
			"file_write_time": 131926686339924592,
			"settings":
			{
				"buffer_size": 756,
				"line_ending": "Unix",
				"name": "component_display_datetime.vue"
			}
		},
		{
			"file": "mturk_db/api/views/templates_worker.py",
			"settings":
			{
				"buffer_size": 2833,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "templates.py"
			}
		},
		{
			"file": "mturk_db/api/serializers/serializer_project.py",
			"settings":
			{
				"buffer_size": 5385,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/open_create_project/app_open_create_project.vue",
			"file_size": 0,
			"file_write_time": 131814244194797817,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "app_open_create_project.vue"
			}
		},
		{
			"file": "mturk_db/api/classes/projects.py",
			"settings":
			{
				"buffer_size": 8825,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<div>\n\t<h1>Batches</h1>\n\n      <v-text-field\n        v-model=\"search\"\n        append-icon=\"search\"\n        label=\"Search\"\n        single-line\n        hide-details\n      ></v-text-field>\n\n\t<v-data-table\n\t\tv-bind:items=\"list_batches\"\n\t\tv-bind:headers=\"list_headers\"\n\t\tv-bind:search=\"search\"\n\t\tv-model=\"batches_selected\"\n\t\tdisable-initial-sort\n\t \tselect-all\n\t\tv-bind:pagination.sync=\"pagination\"\n    \tclass=\"elevation-1\"\n\t>\n\t\t <template slot=\"items\" slot-scope=\"props\">\n\t\t\t<td>\n\t\t\t\t<v-checkbox\n\t\t\t\t\tv-model=\"props.selected\"\n\t\t\t\t\tprimary\n\t\t\t\t\thide-details\n\t\t\t\t></v-checkbox>\n\t\t\t</td>\n\t\t\t<td>{{ props.item.id }}</td>\n\t\t\t<td>{{ props.item.datetime_creation.toLocaleString() }}</td>\n\n\t\t\t<td><component-display-money v-bind:amount=\"props.item.settings_batch.reward\"></component-display-money></td>\n\t\t\t<td>{{ props.item.hits.length }}</td>\n\t\t\t<td>{{ props.item.count_assignments_per_hit }}</td>\n\t\t\t<td>{{ props.item.count_assignments_total }}</td>\n\t\t\t<td>{{ props.item.count_assignments_approved }}</td>\n\t\t\t<td>{{ props.item.count_assignments_rejected }}</td>\n\n\t\t\t<td class=\"text-xs-right\">\n\t\t\t\t<component-display-money v-bind:amount=\"show_with_fee ? props.item.money_spent_max_with_fee : props.item.money_spent_max_without_fee\"></component-display-money>\n\t\t\t</td>\n\t\t\t<td class=\"text-xs-right\">\n\t\t\t\t<component-display-money v-bind:amount=\"show_with_fee ? props.item.money_spent_with_fee : props.item.money_spent_without_fee\"></component-display-money>\n\t\t\t</td>\n\t\t</template>\n\t</v-data-table>\n\n\t<v-btn\n\t\t:loading=\"is_downloading_csv\"\n\t\t:disabled=\"is_downloading_csv\"\n\t\tcolor=\"primary\"\n\t\t@click.native=\"download_csv\"\n\t>\n\t\tDownload CSV for {{ count_hits_to_download }} HITs\n      \t<v-icon right>cloud_download</v-icon>\n    </v-btn>\n    {{batches_selected}}\n</div>\n</template>\n\n<script> \n    import { mapState, mapGetters, mapActions } from 'vuex';\n    import ComponentDisplayMoney from './../component-display-money.vue';\n\timport axios from 'axios';\n\timport Papa from 'papaparse';\n\timport _ from 'lodash';\n\nexport default {\n    name: 'component-show-batches',\n    data () {\n        return {\n        \t// set initial number of rows per page\n\t\t    pagination: {\n\t\t      rowsPerPage: 10,\n\t\t    },\n        \tbatches_selected: [],\n        \tis_downloading_csv: false,\n        \tsearch: '',\n        \tlist_headers: [\n        \t\t{\n\t\t\t\t\ttext: 'ID',\n\t\t\t\t\tvalue: 'id',\n\t\t\t\t},\n    //     \t\t{\n\t\t\t\t// \ttext: 'HIT',\n\t\t\t\t// \tvalue: 'id_hit',\n\t\t\t\t// },\n    //     \t\t{\n\t\t\t\t// \ttext: 'Assignment',\n\t\t\t\t// \tvalue: 'id_assignment',\n\t\t\t\t// },\n        \t\t{\n\t\t\t\t\ttext: 'Created at',\n\t\t\t\t\tvalue: 'datetime_creation',\n\t\t\t\t},\n        \t\t{\n\t\t\t\t\ttext: 'Reward',\n\t\t\t\t\tvalue: 'reward',\n\t\t\t\t},\n        \t\t{\n\t\t\t\t\ttext: '#HITs',\n\t\t\t\t\tvalue: 'hits.length',\n\t\t\t\t},\n        \t\t{\n\t\t\t\t\ttext: '#Assignments per HIT',\n\t\t\t\t\tvalue: 'count_assignments_per_hit',\n\t\t\t\t},\n        \t\t{\n\t\t\t\t\ttext: '#Assignments',\n\t\t\t\t\tvalue: 'count_assignments_total',\n\t\t\t\t},\n        \t\t{\n\t\t\t\t\ttext: '#Approved assignments',\n\t\t\t\t\tvalue: 'count_assignments_approved',\n\t\t\t\t},\n        \t\t{\n\t\t\t\t\ttext: '#Rejected assignments',\n\t\t\t\t\tvalue: 'count_assignments_rejected',\n\t\t\t\t},\n        \t\t{\n\t\t\t\t\ttext: 'Max costs',\n\t\t\t\t\tvalue: 'money_spent_max_with_fee',\n\t\t\t\t\talign: 'right'\n\t\t\t\t},\n        \t\t{\n\t\t\t\t\ttext: 'Costs so far',\n\t\t\t\t\tvalue: 'money_spent_with_fee',\n\t\t\t\t\talign: 'right'\n\t\t\t\t},\n        \t]\n        }\n    },\n    computed: {\n    \tset_batches_selected: function() {\n    \t\tif(this.batches_selected.length == 0) {\n    \t\t\treturn new Set(_.map(this.list_batches, o => o.id));\n    \t\t} else {\n    \t\t\treturn new Set(_.map(this.batches_selected, o => o.id));\n    \t\t}\n    \t},\n    \tcount_hits_to_download: function() {\n    \t\tif(this.batches_selected.length == 0) {\n    \t\t\treturn 'all';\n    \t\t} else {\n            \treturn _.sumBy(this.batches_selected, 'hits.length');\n    \t\t}\n    \t},\n        ...mapGetters('moduleBatches', {\n        \t'list_batches': 'list_batches', \n        \t'list_hits_for_csv': 'list_hits_for_csv',\n        }),\n        ...mapState(['show_with_fee']),\n    },\n    methods: {\n    \tdownload_csv: function() {\n    \t\tthis.is_downloading_csv = true;\n\n    \t\t// filter the selected hits\n    \t\tconst hits_selected = _.filter(this.list_hits_for_csv, hit => this.set_batches_selected.has(hit[2]));\n    \t\tconsole.log(hits_selected)\n            const csv_string = Papa.unparse(\n            {\n                fields: ['id_hit', 'costs', 'id_batch'],\n                data: _.map(hits_selected, o => _.slice(o, 0, 2)),\n            });\n            var blob = new Blob([csv_string]);\n            var a = window.document.createElement(\"a\");\n            a.href = window.URL.createObjectURL(blob, {type: \"text/plain\"});\n            a.download = \"filename.csv\";\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n    \t\tthis.is_downloading_csv = false;\n    \t}\n    },\n    components: {\n        ComponentDisplayMoney,\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/finances/component-show-batches.vue",
			"file_size": 4929,
			"file_write_time": 131883281376204686,
			"settings":
			{
				"buffer_size": 4929,
				"line_ending": "Unix"
			}
		},
		{
			"file": "mturk_settings.ini",
			"settings":
			{
				"buffer_size": 168,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# Generated by Django 2.0 on 2018-02-08 12:55\n\nfrom django.db import migrations, models\nimport django.db.models.deletion\n\n\nclass Migration(migrations.Migration):\n\n    initial = True\n\n    dependencies = [\n        # ('viewer', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='m_Account_Mturk',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=200, unique=True)),\n                ('key_access', models.CharField(max_length=200)),\n                ('key_secret', models.CharField(max_length=200)),\n            ],\n        ),\n        migrations.CreateModel(\n            name='m_Assignment',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('id_assignment', models.CharField(max_length=200, unique=True)),\n                ('answer', models.TextField()),\n                ('corpus_viewer_tags', models.ManyToManyField(related_name='corpus_viewer_items', to='viewer.m_Tag')),\n            ],\n            options={\n                'ordering': ['fk_hit'],\n            },\n        ),\n        migrations.CreateModel(\n            name='m_Batch',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=200)),\n                ('title', models.TextField()),\n                ('description', models.TextField()),\n                ('keywords', models.TextField()),\n                ('count_assignments', models.IntegerField()),\n                ('use_sandbox', models.BooleanField(default=True)),\n                ('reward', models.CharField(max_length=10)),\n                ('lifetime', models.IntegerField()),\n                ('duration', models.IntegerField()),\n            ],\n        ),\n        migrations.CreateModel(\n            name='m_Hit',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('id_hit', models.CharField(max_length=200, unique=True)),\n                ('parameters', models.TextField()),\n                ('fk_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hits', to='mturk_manager.m_Batch')),\n            ],\n        ),\n        migrations.CreateModel(\n            name='m_Message_Reject',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('message', models.CharField(max_length=1024)),\n            ],\n        ),\n        migrations.CreateModel(\n            name='m_Project',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('version', models.IntegerField()),\n                ('name', models.CharField(max_length=200, unique=True)),\n                ('title', models.TextField(default='')),\n                ('description', models.TextField(default='')),\n                ('keywords', models.TextField(default='')),\n                ('count_assignments', models.IntegerField(default=1)),\n                ('reward', models.CharField(default='0.0', max_length=10)),\n                ('lifetime', models.IntegerField(default=604800)),\n                ('duration', models.IntegerField(default=3600)),\n                ('use_sandbox', models.BooleanField(default=True)),\n                ('fk_account_mturk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='mturk_manager.m_Account_Mturk')),\n                ('fk_message_reject_default', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project', to='mturk_manager.m_Message_Reject')),\n            ],\n        ),\n        migrations.CreateModel(\n            name='m_Template',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=200)),\n                ('template', models.TextField()),\n                ('height_frame', models.IntegerField()),\n                ('is_active', models.BooleanField(default=True)),\n                ('fk_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='mturk_manager.m_Project')),\n            ],\n        ),\n        migrations.CreateModel(\n            name='m_Template_Assignment',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=200)),\n                ('template', models.TextField()),\n                ('is_active', models.BooleanField(default=True)),\n                ('fk_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates_assignment', to='mturk_manager.m_Project')),\n            ],\n        ),\n        migrations.CreateModel(\n            name='m_Template_Hit',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=200)),\n                ('template', models.TextField()),\n                ('is_active', models.BooleanField(default=True)),\n                ('fk_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates_hit', to='mturk_manager.m_Project')),\n            ],\n        ),\n        migrations.CreateModel(\n            name='m_Worker',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=200, unique=True)),\n            ],\n        ),\n        migrations.AddField(\n            model_name='m_template',\n            name='fk_template_assignment',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates_used', to='mturk_manager.m_Template_Assignment'),\n        ),\n        migrations.AddField(\n            model_name='m_template',\n            name='fk_template_hit',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates_used', to='mturk_manager.m_Template_Hit'),\n        ),\n        migrations.AddField(\n            model_name='m_project',\n            name='fk_template_assignment_main',\n            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project', to='mturk_manager.m_Template_Assignment'),\n        ),\n        migrations.AddField(\n            model_name='m_project',\n            name='fk_template_hit_main',\n            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project', to='mturk_manager.m_Template_Hit'),\n        ),\n        migrations.AddField(\n            model_name='m_project',\n            name='fk_template_main',\n            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project', to='mturk_manager.m_Template'),\n        ),\n        migrations.AddField(\n            model_name='m_message_reject',\n            name='fk_project',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_reject', to='mturk_manager.m_Project'),\n        ),\n        migrations.AddField(\n            model_name='m_batch',\n            name='fk_project',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='mturk_manager.m_Project'),\n        ),\n        migrations.AddField(\n            model_name='m_batch',\n            name='fk_template',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='mturk_manager.m_Template'),\n        ),\n        migrations.AddField(\n            model_name='m_assignment',\n            name='fk_hit',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='mturk_manager.m_Hit'),\n        ),\n        migrations.AddField(\n            model_name='m_assignment',\n            name='fk_worker',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='mturk_manager.m_Worker'),\n        ),\n        migrations.AlterUniqueTogether(\n            name='m_template_hit',\n            unique_together={('name', 'fk_project')},\n        ),\n        migrations.AlterUniqueTogether(\n            name='m_template_assignment',\n            unique_together={('name', 'fk_project')},\n        ),\n        migrations.AlterUniqueTogether(\n            name='m_template',\n            unique_together={('name', 'fk_project')},\n        ),\n        migrations.AlterUniqueTogether(\n            name='m_batch',\n            unique_together={('name', 'fk_project')},\n        ),\n    ]\n",
			"file": "mturk/mturk_manager/migrations/0001_initial.py",
			"file_size": 9205,
			"file_write_time": 131883281375684687,
			"settings":
			{
				"buffer_size": 9205,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import _ from 'lodash';\nimport Vue from 'vue';\n\nexport default class Batch\n{\n\tconstructor(data={}) \n\t{\n\t\tthis.id = data.id;\n\t\tthis.name = data.name;\n\t\tthis.id_project = data.id_project;\n\t\tthis.use_sandbox = data.use_sandbox;\n\t\tthis.object_hits = {};\n\t\tthis.settings_batch = data.settings_batch;\n\n\t\t// this._count_assignments_total = null;\n\t\t// this._count_assignments_available = null;\n\t\t// this._progress = null;\n\t\t// this._datetime_creation = null;\n\t}\n\n    get count_assignments_total() {\n    \t// if(this._count_assignments_total != null) return this._count_assignments_total;\n\n    \tconst count_assignments_total = this.settings_batch.count_assignments * _.size(this.object_hits);\n    \t// this._count_assignments_total = count_assignments_total;\n        return count_assignments_total;\n    }\n\n    get count_assignments_available() {\n    \t// if(this._count_assignments_available != null) return this._count_assignments_available;\n\n        let count_assignments_available = 0;\n        // console.log('EXPENSIVE1')\n        _.forEach(this.object_hits, (hit) => {\n            count_assignments_available += _.size(hit.object_assignments);\n        });\n\n    \t// this._count_assignments_available = count_assignments_available;\n        return count_assignments_available;\n    }\n\n    get progress() {\n    \t// if(this._progress != null) return this._progress;\n// \n    \tconst progress = (this.count_assignments_available / this.count_assignments_total) * 100.0;\n        // console.log('EXECUTED1')\n\n    \t// this._progress = progress;\n        return (this.count_assignments_available / this.count_assignments_total) * 100.0;\n    }\n\n    get datetime_creation() {\n    \t// if(this._datetime_creation != null) return this._datetime_creation;\n    \t\n    \tif(_.size(this.object_hits) > 0)\n    \t{\n    \t\treturn this.object_hits[_.keys(this.object_hits)[0]].datetime_creation;\n    \t\t// this._datetime_creation = this.object_hits[_.keys(this.object_hits)[0]].datetime_creation;\n    \t\t// return this._datetime_creation;\n    \t} else {\n    \t\treturn undefined;\n    \t}\n    }\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/batch.js",
			"file_size": 1713,
			"file_write_time": 131910148785509762,
			"settings":
			{
				"buffer_size": 2050,
				"line_ending": "Unix",
				"name": "batch.js"
			}
		},
		{
			"contents": "import Vuex from 'vuex';\n// import Vue from 'vue/dist/vue.common';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport _ from 'lodash';\nimport Batch from '../../classes/batch.js';\nimport HIT from '../../classes/hit.js';\nimport {Service_Endpoint} from '../../services/service_endpoint';\n\nimport VueCookies from 'vue-cookies'\nVue.use(Vuex)\nVue.use(VueCookies)\nVue.use(VueAxios, axios)\n\nexport const moduleBatches = {\n\tnamespaced: true,\n\tstate: {\n        object_batches: null,\n\t\tobject_batches_sandbox: null,\n        url_api_assignments_real_approved: undefined,\n\n        url_api_projects_batches: undefined,\n\n        array_batches_selected: [],\n\n        object_csv_parsed: undefined,\n        is_syncing_mturk: false,\n\t},\n    getters: {\n        get_object_batches: (state, getters, rootState) => (use_sandbox=undefined) => {\n            if(use_sandbox == undefined)\n            {\n                // console.log(rootState.use_sandbox)\n                return rootState.use_sandbox ? state.object_batches_sandbox : state.object_batches;\n            } else {\n                return use_sandbox ? state.object_batches_sandbox : state.object_batches;\n            }\n        },\n        is_valid_csv: (state) => {\n            if(state.object_csv_parsed == undefined) \n            {\n                return false;\n            } else {\n                return state.object_csv_parsed.errors.length == 0;\n            }\n        },\n        get_object_csv_parsed: (state) => {\n            return state.object_csv_parsed;\n        },\n        // get_object_batches: (state, getters, rootState) => {\n        //     return rootState.use_sandbox ? state.object_batches_sandbox : state.object_batches;\n        // },\n\n        list_batches: (state, getters, rootState) => {\n            const object_batches = getters.get_object_batches();\n            if(object_batches == null)\n            {\n                return [];\n            }\n            // const foo = {3:object_batches[3]};\n            // return _.orderBy(foo, ['datetime_creation'], ['desc']);\n            return _.orderBy(object_batches, ['datetime_creation'], ['desc']);\n        },\n\n        list_hits_for_csv: state => {\n            const list_hits = [];\n            _.forIn(state.object_batches, function(batch, id_batch) {\n                _.forEach(batch.hits, function(hit){\n                    list_hits.push([\n                        hit.id_hit,\n                        (hit.count_assignments * batch.reward).toFixed(2),\n                        id_batch,\n                    ]);\n                });\n            });\n            return list_hits;\n        },\n        get_is_syncing_mturk: (state) => {\n            return state.is_syncing_mturk;\n        },\n    },\n\tmutations: {\n        // setBatchesAndHits_sandbox(state, {list_hits, dict_batches}) {\n        //     // set batches\n        //     state.object_batches_sandbox = {};\n        //     _.forIn(dict_batches, function(batch, id_batch) {\n        //         state.object_batches_sandbox[id_batch] = batch;\n        //         state.object_batches_sandbox[id_batch]['hits'] = [];\n\n        //     });\n\n        //     // set hits\n        //     _.forEach(list_hits, function(hit){\n        //         // console.log(Date.parse(hit.datetime_creation));\n        //         hit.datetime_creation = new Date(hit.datetime_creation);\n\n        //         state.object_batches_sandbox[hit.id_batch].hits.push(hit);\n        //     });\n\n\n        //     _.forIn(state.object_batches_sandbox, function(batch, id_batch) {\n        //         // datetime of last hit is created time of batch\n        //         batch.datetime_creation = batch.hits[0].datetime_creation;\n\n        //         batch.count_assignments_approved = _.sumBy(\n        //             batch.hits, 'count_assignments_approved'\n        //         );\n        //         batch.count_assignments_rejected = _.sumBy(\n        //             batch.hits, 'count_assignments_rejected'\n        //         );\n\n        //         batch.count_assignments_total =  batch.hits.length * batch.count_assignments_per_hit;\n\n        //         batch.money_spent_without_fee = batch.count_assignments_approved * batch.reward;\n        //         if(batch.count_assignments_per_hit < 10) {\n        //             batch.money_spent_with_fee = batch.money_spent_without_fee * 1.2;\n        //         } else {\n        //             batch.money_spent_with_fee = batch.money_spent_without_fee * 1.4;\n        //         }\n\n        //         batch.money_spent_max_without_fee = batch.count_assignments_total * batch.reward;\n        //         if(batch.count_assignments_per_hit < 10) {\n        //             batch.money_spent_max_with_fee = batch.money_spent_max_without_fee * 1.2;\n        //         } else {\n        //             batch.money_spent_max_with_fee = batch.money_spent_max_without_fee * 1.4;\n        //         }\n\n        //         batch.money_not_spent_without_fee = batch.count_assignments_rejected * batch.reward;\n        //         if(batch.count_assignments_per_hit < 10) {\n        //             batch.money_not_spent_with_fee = batch.money_not_spent_without_fee * 1.2;\n        //         } else {\n        //             batch.money_not_spent_with_fee = batch.money_not_spent_without_fee * 1.4;\n        //         }\n        //     });\n\n        //     // console.log(state.object_batches_sandbox)\n\n        //     state.object_batches_sandbox = dict_batches;\n        // },\n        // setBatchesAndHits(state, {list_hits, dict_batches}) {\n        //     // set batches\n        //     state.object_batches = {};\n        //     _.forIn(dict_batches, function(batch, id_batch) {\n        //         state.object_batches[id_batch] = batch;\n        //         state.object_batches[id_batch]['hits'] = [];\n\n        //     });\n\n        //     // set hits\n        //     _.forEach(list_hits, function(hit){\n        //         // console.log(Date.parse(hit.datetime_creation));\n        //         hit.datetime_creation = new Date(hit.datetime_creation);\n\n        //         state.object_batches[hit.id_batch].hits.push(hit);\n        //     });\n\n\n        //     _.forIn(state.object_batches, function(batch, id_batch) {\n        //         // datetime of last hit is created time of batch\n        //         batch.datetime_creation = batch.hits[0].datetime_creation;\n\n        //         batch.count_assignments_approved = _.sumBy(\n        //             batch.hits, 'count_assignments_approved'\n        //         );\n        //         batch.count_assignments_rejected = _.sumBy(\n        //             batch.hits, 'count_assignments_rejected'\n        //         );\n\n        //         batch.count_assignments_total =  batch.hits.length * batch.count_assignments_per_hit;\n\n        //         batch.money_spent_without_fee = batch.count_assignments_approved * batch.reward;\n        //         if(batch.count_assignments_per_hit < 10) {\n        //             batch.money_spent_with_fee = batch.money_spent_without_fee * 1.2;\n        //         } else {\n        //             batch.money_spent_with_fee = batch.money_spent_without_fee * 1.4;\n        //         }\n\n        //         batch.money_spent_max_without_fee = batch.count_assignments_total * batch.reward;\n        //         if(batch.count_assignments_per_hit < 10) {\n        //             batch.money_spent_max_with_fee = batch.money_spent_max_without_fee * 1.2;\n        //         } else {\n        //             batch.money_spent_max_with_fee = batch.money_spent_max_without_fee * 1.4;\n        //         }\n\n        //         batch.money_not_spent_without_fee = batch.count_assignments_rejected * batch.reward;\n        //         if(batch.count_assignments_per_hit < 10) {\n        //             batch.money_not_spent_with_fee = batch.money_not_spent_without_fee * 1.2;\n        //         } else {\n        //             batch.money_not_spent_with_fee = batch.money_not_spent_without_fee * 1.4;\n        //         }\n        //     });\n\n        //     console.log(state.object_batches)\n\n        //     state.object_batches = dict_batches;\n        // },\n        // setObjectBatches(state, dict_batches) {\n        //     for(let id_batch in dict_batches) {\n        //         state.object_batches[id_batch] = dict_batches[id_batch];\n        //     };\n        //     state.object_batches = dict_batches;\n        // },\n        set_batches(state, {data_batches, use_sandbox}) {\n            let object_batches = null;\n            if(use_sandbox)\n            {\n                state.object_batches_sandbox = {};\n                object_batches = state.object_batches_sandbox;\n            } else {\n                state.object_batches = {};\n                object_batches = state.object_batches;\n            }\n\n            _.forEach(data_batches, function(data_batch){\n                const batch = new Batch(data_batch);\n                Vue.set(object_batches, batch.id, batch);\n            });\n        },\n        set_batches_selected(state, value) {\n            state.array_batches_selected = value;\n        },\n        // append_batches(state, {data_batches, use_sandbox}) {\n        //     let object_batches = null;\n        //     if(use_sandbox)\n        //     {\n        //         object_batches = state.object_batches_sandbox;\n        //     } else {\n        //         object_batches = state.object_batches;\n        //     }\n\n        //     _.forEach(data_batches, function(data_batch){\n        //         const batch = new Batch(data_batch);\n        //         Vue.set(object_batches, batch.id, batch);\n        //     });\n        // },\n        add_workers(state, {object_workers, use_sandbox}) {\n            // console.log('#####')\n            let object_batches = null;\n            if(use_sandbox)\n            {\n                object_batches = state.object_batches_sandbox;\n            } else {\n                object_batches = state.object_batches;\n            }\n            _.forEach(object_batches, function(batch){\n                _.forEach(batch.object_hits, function(hit){\n                    _.forEach(hit.object_assignments, function(assignment){\n                        if(_.isObject(assignment.worker))\n                        {\n                            // skip if assignment has already worker\n                            return true;\n                        }\n                        Vue.set(assignment, 'worker', object_workers[assignment.worker]);\n                        // assignment.worker = object_workers[assignment.worker];\n                        // Vue.set(assignment.worker, );\n                    });\n                });\n            });\n        },\n        add_batch(state, {data_batch, use_sandbox}) {\n            let object_batches = null;\n            if(use_sandbox)\n            {\n                object_batches = state.object_batches_sandbox;\n            } else {\n                object_batches = state.object_batches;\n            }\n\n            const obj_batch = new Batch(data_batch);\n            Vue.set(object_batches, obj_batch.id, obj_batch);\n\n            // _.forEach(data_batch.hits, function(data_hit) {\n            //     data_hit.batch = batch;\n            //     const hit = new HIT(data_hit);\n\n            //     Vue.set(object_hits, hit.id, hit);\n\n            //     Vue.set(batch.hits, batch.hits.length, hit);\n            // });\n        },\n        set_urls(state, config) {\n            state.url_api_projects_batches = config.url_api_projects_batches;\n        },\n        set_csv_parsed(state, csv_parsed) {\n            state.object_csv_parsed = csv_parsed;\n        },\n        set_is_syncing_mturk(state, value) {\n            state.is_syncing_mturk = value;\n        },\n        clear_sandbox(state) {\n            state.object_batches_sandbox = {}; \n        },\n        reset: (state) => {\n            state.object_batches = null;\n            state.object_batches_sandbox = null;\n            state.object_csv_parsed = undefined;\n            state.is_syncing_mturk = false;\n        }\n\t},\n\tactions: {\n\t},\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/batches.js",
			"file_size": 17334,
			"file_write_time": 131924538784112073,
			"settings":
			{
				"buffer_size": 11970,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import Vuex from 'vuex';\n// import Vue from 'vue/dist/vue.common';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport _ from 'lodash';\nimport HIT from '../../classes/hit.js';\n\nimport VueCookies from 'vue-cookies'\nVue.use(Vuex)\nVue.use(VueCookies)\nVue.use(VueAxios, axios)\n\nexport const moduleHITs = {\n\tnamespaced: true,\n\tstate: {\n        object_hits: {},\n\t\tobject_hits_sandbox: {},\n\t},\n    getters: {\n        get_object_hits: (state, getters, rootState) => (use_sandbox=undefined) => {\n            if(use_sandbox == undefined)\n            {\n                return rootState.use_sandbox ? state.object_hits_sandbox : state.object_hits;\n            } else {\n                return use_sandbox ? state.object_hits_sandbox : state.object_hits;\n            }\n        },\n        list_hits: (state, getters) => {\n            if(Object.keys(getters.get_object_hits()).length == 0)\n            {\n                return [];\n            }\n            return _.orderBy(getters.get_object_hits(), ['datetime_creation'], ['desc']);\n        },\n    },\n\tmutations: {\n\t\tset_hits(state, {object_batches, data_batches, use_sandbox}) {\n            let object_hits = null;\n            if(use_sandbox)\n            {\n                object_hits = state.object_hits_sandbox;\n            } else {\n                object_hits = state.object_hits;\n            }\n\n            _.forEach(data_batches, function(data_batch) {\n            \tconst id_batch = data_batch.id;\n            \tconst batch = object_batches[id_batch];\n\n                _.forEach(data_batch.hits, function(data_hit) {\n                \tdata_hit.batch = batch;\n\t\t            const hit = new HIT(data_hit);\n\n\t\t            Vue.set(object_hits, hit.id, hit);\n\n\t\t            Vue.set(batch.object_hits, hit.id, hit);\n                });\n            });\n\t\t},\n        clear_sandbox(state) {\n            state.object_hits_sandbox = {}; \n        },\n        reset: (state) => {\n            state.object_hits = {};\n            state.object_hits_sandbox = {};\n        }\n\t},\n\tactions: {\n\t},\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/hits.js",
			"file_size": 6053,
			"file_write_time": 131924538784112073,
			"settings":
			{
				"buffer_size": 2056,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import Vuex from 'vuex';\n// import Vue from 'vue/dist/vue.common';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport _ from 'lodash';\nimport Assignment from '../../classes/assignment.js';\n\nimport VueCookies from 'vue-cookies'\nVue.use(Vuex)\nVue.use(VueCookies)\nVue.use(VueAxios, axios)\n\nexport const moduleAssignments = {\n\tnamespaced: true,\n\tstate: {\n        object_assignments: {},\n\t\tobject_assignments_sandbox: {},\n\t\tset_ids_worker: null,\n\t\tassignments_selected: [],\n\t},\n    getters: {\n        get_object_assignments: (state, getters, rootState) => (use_sandbox=undefined) => {\n            if(use_sandbox == undefined)\n            {\n                return rootState.use_sandbox ? state.object_assignments_sandbox : state.object_assignments;\n            } else {\n                return use_sandbox ? state.object_assignments_sandbox : state.object_assignments;\n            }\n        },\n        list_assignments: (state, getters) => {\n            if(Object.keys(getters.get_object_assignments()).length == 0)\n            {\n                return [];\n            }\n            return _.orderBy(getters.get_object_assignments(), ['datetime_creation'], ['desc']);\n        },\n        set_ids_worker: (state) => {\n            return state.set_ids_worker;\n        },\n    },\n\tmutations: {\n\t\tset_assignments(state, {data_batches, object_hits, use_sandbox}) {\n            let object_assignments = null;\n            if(use_sandbox)\n            {\n                object_assignments = state.object_assignments_sandbox;\n            } else {\n                object_assignments = state.object_assignments;\n            }\n            // console.log('########')\n            state.set_ids_worker = new Set(); \n\n            _.forEach(data_batches, function(data_batch) {\n                _.forEach(data_batch.hits, function(data_hit) {\n\t            \tconst id_hit = data_hit.id;\n\t            \tconst hit = object_hits[id_hit];\n\n\n\t                _.forEach(data_hit.assignments, function(data_assignment) {\n\t                \tstate.set_ids_worker.add(data_assignment.worker);\n\t                \tdata_assignment.hit = hit;\n\t                \t// console.log(hit)\n\t\t\t            const assignment = new Assignment(data_assignment);\n\t                \t// console.log(assignment)\n\n\t\t\t            Vue.set(object_assignments, assignment.id, assignment);\n\n\t\t\t            Vue.set(hit.object_assignments, assignment.id, assignment);\n\t\t            });\n                });\n            });\n            // console.log('########')\n\n            // console.log(state.set_ids_worker);\n\t\t},\n        clear_sandbox(state) {\n            state.object_assignments_sandbox = {}; \n        },\n\t\t// append_assignments(state, {object_batches, data_batches, object_hits, use_sandbox}) {\n  //           let object_assignments = null;\n  //           if(use_sandbox)\n  //           {\n  //               object_assignments = state.object_assignments_sandbox;\n  //           } else {\n  //               object_assignments = state.object_assignments;\n  //           }\n\n  //           state.set_ids_worker = new Set(); \n\n  //           _.forEach(data_batches, function(data_batch) {\n  //           \tconst id_batch = data_batch.id;\n  //           \tconst batch = object_batches[id_batch];\n\n  //               _.forEach(data_batch.hits, function(data_hit) {\n\t //            \tconst id_hit = data_hit.id;\n\t //            \tconst hit = object_hits[id_hit];\n\n\n\t //                _.forEach(data_hit.assignments, function(data_assignment) {\n\t //                \tstate.set_ids_worker.add(data_assignment.worker);\n\t //                \tdata_assignment.hit = hit;\n\t\t// \t            const assignment = new Assignment(data_assignment);\n\n\t\t// \t            Vue.set(object_assignments, assignment.id, assignment);\n\n\t\t// \t            Vue.set(hit.assignments, hit.assignments.length, assignment);\n\t\t//             });\n  //               });\n  //           });\n\n  //           console.log(state.set_ids_worker);\n\t\t// },\n\t\tset_assignments_selected(state, assignments_selected) {\n\t\t\tstate.assignments_selected = assignments_selected;\n\t\t},\n        reset: (state) => {\n            state.object_assignments = {};\n            state.object_assignments_sandbox = {};\n            state.set_ids_worker = null;\n            state.assignments_selected = [];\n        }\n\t},\n\tactions: {\n\t},\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/assignments.js",
			"file_size": 8815,
			"file_write_time": 131926539372543356,
			"settings":
			{
				"buffer_size": 4329,
				"line_ending": "Unix",
				"name": "assignments"
			}
		},
		{
			"contents": "import _ from 'lodash';\n\nexport default class HIT\n{\n\tconstructor(data={}) \n\t{\n\t\tthis.id = data.id;\n\t\tthis.id_hit = data.id_hit;\n\t\tthis.batch = data.batch;\n\t\tthis.count_assignments_additional = data.count_assignments_additional;\n\t\tthis.datetime_creation = new Date(data.datetime_creation);\n\t\tthis.datetime_expiration = new Date(data.datetime_expiration);\n\t\tthis.parameters = data.parameters;\n\t\tthis.object_assignments = {};\n\n\t\t// this._count_assignments_total = null;\n\t\t// this._count_assignments_available = null;\n\t\t// this._progress = null;\n\t}\n\n    get count_assignments_total() {\n    \t// if(this._count_assignments_total != null) return this._count_assignments_total;\n\n    \tconst count_assignments_total = this.batch.settings_batch.count_assignments;\n    \t// this._count_assignments_total = count_assignments_total;\n        return count_assignments_total;\n    }\n\n    get count_assignments_available() {\n    \t// if(this._count_assignments_available != null) return this._count_assignments_available;\n\n    \tconst count_assignments_available = _.size(this.object_assignments);\n    \t// this._count_assignments_available = count_assignments_available;\n        return count_assignments_available;\n    }\n\n    get progress() {\n    \t// if(this._progress != null) return this._progress;\n\n    \tconst progress = (this.count_assignments_available / this.count_assignments_total) * 100.0;\n    \t// this._progress = progress;\n        return progress;\n    }\n\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/hit.js",
			"file_size": 926,
			"file_write_time": 131889469814605539,
			"settings":
			{
				"buffer_size": 1445,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "export default class Assignment\n{\n\tconstructor(data={}) \n\t{\n\t\tthis.id = data.id;\n\t\tthis.id_assignment = data.id_assignment;\n\t\tthis.answer = data.answer;\n\t\tthis.worker = data.worker;\n\t\tthis.hit = data.hit;\n\t\tthis.status_external = data.status_external;\n\t\tthis.status_internal = data.status_internal;\n\t\tthis.datetime_creation = new Date(data.datetime_update);\n\t}\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/assignment.js",
			"file_size": 675,
			"file_write_time": 131926686292122279,
			"settings":
			{
				"buffer_size": 362,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import _ from 'lodash';\n\nexport default class Settings_Batch \n{\n\tconstructor(data=undefined) \n\t{\n\t\tthis.id = data != undefined ? data.id : undefined;\n\t\tthis.name = data != undefined ? data.name : undefined;\n\n        this.title = data != undefined ? data.title : undefined;\n        this.description = data != undefined ? data.description : undefined;\n        this.reward = data != undefined ? data.reward : undefined;\n        this.keywords = data != undefined ? JSON.parse(JSON.stringify(data.keywords)) : [];\n        this.count_assignments = data != undefined ? data.count_assignments : undefined;\n        this.count_assignments_max_per_worker = data != undefined ? data.count_assignments_max_per_worker : undefined;\n        this.lifetime = data != undefined ? data.lifetime : undefined;\n        this.duration = data != undefined ? data.duration : undefined;\n        this.block_workers = data != undefined ? data.block_workers : false;\n        this.template = data != undefined ? data.template : undefined;\n        \n        this.has_content_adult = data != undefined ? data.has_content_adult : false;\n        this.qualification_assignments_approved = data != undefined ? data.qualification_assignments_approved : undefined;\n        this.qualification_hits_approved = data != undefined ? data.qualification_hits_approved : undefined;\n        this.qualification_locale = data != undefined ? JSON.parse(JSON.stringify(data.qualification_locale)) : [];\n\t}\n\n\tget_changes(settings_batch) {\n\t\tconst object = {};\n\t\tfor(const key in this)\n\t\t{\n\t\t\tif(settings_batch[key] != undefined)\n\t\t\t{\n\t\t\t\tif(this[key] != settings_batch[key])\n\t\t\t\t{\n\t\t\t\t\t// if(key == 'keywords')\n\t\t\t\t\t// {\n\t\t\t\t\t// \tconst keywords_processed = [];\n\t\t\t\t\t// \tfor(let keyword of settings_batch[key])\n\t\t\t\t\t// \t{\n\t\t\t\t\t// \t\tif(typeof(keyword) == 'string')\n\t\t\t\t\t// \t\t{\n\t\t\t\t\t// \t\t\tkeyword = {'text': keyword}\n\t\t\t\t\t// \t\t}\n\n\t\t\t\t\t// \t\tkeywords_processed.push(keyword)\n\t\t\t\t\t// \t}\n\t\t\t\t\t// \tobject[key] = keywords_processed;\n\t\t\t\t\t// } else if(key == 'qualification_assignments_approved' || key == 'qualification_hits_approved') {\n\t\t\t\t\t// \tsettings_batch[key].trim() == '' ? object[key] = null : object[key] = settings_batch[key];\n\t\t\t\t\t// } else if(key == 'qualification_locale') {\n\t\t\t\t\t// \tobject[key] = JSON.stringify(settings_batch[key]);\n\t\t\t\t\t// } else {\n\t\t\t\t\t\t// if(typeof(settings_batch[key]) == 'object')\n\t\t\t\t\t\t// {\n\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t// \tif(key == 'assignments_max') \n\t\t\t\t\t\t// \t{\n\t\t\t\t\t\t// \t\tobject['count_assignments'] = settings_batch[key];\n\t\t\t\t\t\t// \t} else if(key == 'template') {\n\t\t\t\t\t\t// \t\tobject['fk_template_main'] = settings_batch[key];\n\t\t\t\t\t\t// \t} else {\n\t\t\t\t\t\t// \t\tobject[key] = settings_batch[key];\n\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t// }\n\t\t\t\t\t// }\n\t\t\t\t\t\tif(typeof(settings_batch[key]) == 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(\n\t\t\t\t\t\t\t\t_.differenceBy(settings_batch[key], this[key], (value) => value['text'].toLowerCase()).length > 0 ||\n\t\t\t\t\t\t\t\t_.differenceBy(this[key], settings_batch[key], (value) => value['text'].toLowerCase()).length > 0\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tobject[key] = settings_batch[key];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobject[key] = settings_batch[key];\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/settings_batch.js",
			"file_size": 3148,
			"file_write_time": 131883281376164686,
			"settings":
			{
				"buffer_size": 3148,
				"line_ending": "Unix",
				"name": "settings_batch.js"
			}
		},
		{
			"contents": "import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nexport default {\n\t// methods: {\n\t// \t...mapActions('moduleProjects', {\n\t// \t\t'set_slug_project_current': 'set_slug_project_current',\n\t// \t}),\n\t// },\n    // created() {\n\t// \t// const slug_project = this.$route.params.slug_project;\n\t// \t// if(slug_project != undefined)\n\t// \t// {\n\t// \t// \tthis.set_slug_project_current(slug_project);\n\t// \t// }\n    // },\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/slug_project.js",
			"file_size": 424,
			"file_write_time": 131883281376324685,
			"settings":
			{
				"buffer_size": 424,
				"line_ending": "Unix",
				"name": "slug_projects.js"
			}
		},
		{
			"contents": "import { DESCRIPTIONS } from '../classes/enums';\nimport { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nimport Settings_Batch from '../classes/settings_batch';\nimport { required, minValue, maxValue } from 'vuelidate/lib/validators'\nimport _ from 'lodash';\nimport {Service_Keywords} from \"../services/Service_Keywords\";\n\nconst foo = (object_settings_batch, settings_batch_current) => (value) => {\n    if(_.get(settings_batch_current, 'name', undefined) == value) return true;\n\n    return _.find(object_settings_batch, (settings_batch) => {\n        return settings_batch.name == value;\n    }) == undefined;\n};\n\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tsettings_batch: new Settings_Batch(),\n            DESCRIPTIONS: DESCRIPTIONS,\n\t\t}\n\t},\n    watch: {\n        // project: { \n        //     handler: function() {\n        //         this.$emit('update:project', this.settings_batch);\n        //     },\n        //     deep: true,\n        // },\n    },\n\tmethods: {\n        update_fields() {\n            if(this.settings_batch_current != undefined)\n            {\n                this.settings_batch = new Settings_Batch(this.settings_batch_current);\n                \n                // this.settings_batch.name = this.settings_batch_current.name;\n\n                // this.settings_batch.title = this.settings_batch_current.title;\n                // this.settings_batch.description = this.settings_batch_current.description;\n                // this.settings_batch.reward = this.settings_batch_current.reward;\n                // this.settings_batch.count_assignments = this.settings_batch_current.count_assignments;\n                // this.settings_batch.count_assignments_max_per_worker = this.settings_batch_current.count_assignments_max_per_worker;\n                // this.settings_batch.lifetime = this.settings_batch_current.lifetime;\n                // this.settings_batch.duration = this.settings_batch_current.duration;\n                // this.settings_batch.keywords = JSON.parse(JSON.stringify(this.settings_batch_current.keywords));\n                // this.settings_batch.block_workers = this.settings_batch_current.block_workers;\n                // this.settings_batch.template = this.settings_batch_current.template;\n                \n                // this.settings_batch.has_content_adult = this.settings_batch_current.has_content_adult;\n                // this.settings_batch.qualification_assignments_approved = this.settings_batch_current.qualification_assignments_approved;\n                // this.settings_batch.qualification_hits_approved = this.settings_batch_current.qualification_hits_approved;\n                // this.settings_batch.qualification_locale = JSON.parse(JSON.stringify(this.settings_batch_current.qualification_locale));\n            } else {\n                this.settings_batch = new Settings_Batch();\n            }\n\n        },\n\t},\n    created() {\n        this.update_fields();\n        Service_Keywords.load();\n    },\n    computed: {\n        ...mapGetters('moduleProjects', {\n            'project_current': 'get_project_current',\n        }),\n    },\n    validations() {\n        const validations = {\n            settings_batch: {\n                name: {\n                    required,\n                    is_unique: foo(this.project_current.settings_batch, this.settings_batch_current),\n                },\n                title: {\n                    required,\n                },\n                description: {\n                    required,\n                },\n                reward: {\n                    required,\n                    minValue: minValue(0),\n                },\n                count_assignments: {\n                    required,\n                    minValue: minValue(0),\n                },\n                count_assignments_max_per_worker: {\n                    minValue: minValue(0),\n                },\n                lifetime: {\n                    required,\n                    minValue: minValue(0),\n                },\n                duration: {\n                    required,\n                    minValue: minValue(30),\n                    maxValue: maxValue(31536000),\n                },\n                template: {\n                    required,\n                },\n                block_workers: {\n                    required,\n                },\n                keywords: {\n                },\n                has_content_adult: {\n                },\n                qualification_assignments_approved: {\n                    minValue: minValue(0),\n                    maxValue: maxValue(100),\n                },\n                qualification_hits_approved: {\n                    minValue: minValue(0),\n                },\n                qualification_locale: {\n                },\n            },\n        }\n                    \n        if(this.name_not_required)\n        {\n            delete validations.settings_batch.name.required;\n        }\n\n        return validations;\n    },\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/settings_batch.js",
			"file_size": 4943,
			"file_write_time": 131883281376324685,
			"settings":
			{
				"buffer_size": 4943,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\nconst MESSAGES_DEFAULT= {\n\trequired: 'Required!',\n\tminValue: 'Too low!',\n\tmaxValue: 'Too high!',\n\tcontains_form_injection: '\\'data-inject_input_forms\\' is missing!',\n\tcontains_injection_assignments: '\\'data-inject_assignments\\' is missing!',\n\tis_unique: 'Has to be unique!',\n};\n\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tvalidation_errors: {},\n\t\t}\n\t},\n    watch: {\n    },\n\tmethods: {\n\t\tvalidate(name_field, messages={}) {\n\t\t\tconst foo = name_field.split('.')\n\t\t\tconst errors = [];\n\n\t\t\tlet bar = undefined;\n\t\t\tif(foo.length == 1)\n\t\t\t{\n\t\t\t\tbar = this.$v[foo[0]];\n\t\t\t} else {\n\t\t\t\tbar = this.$v[foo[0]][foo[1]];\n\t\t\t}\n\n\t\t\tif(!bar.$dirty || this.$v.$pending)\n\t\t\t{\n\t\t\t\treturn errors;\n\t\t\t}\n\n\t\t\tfor(let name_requirement in bar.$params)\n\t\t\t{\n\t\t\t\tif(bar[name_requirement] == false)\n\t\t\t\t{\n\t\t\t\t\tif(messages.hasOwnProperty(name_requirement))\n\t\t\t\t\t{\n\t\t\t\t\t\terrors.push(messages[name_requirement]);\n\t\t\t\t\t} else if(MESSAGES_DEFAULT.hasOwnProperty(name_requirement)) {\n\t\t\t\t\t\terrors.push(MESSAGES_DEFAULT[name_requirement]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors.push('Error!');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(foo.length == 1)\n\t\t\t{\n\t\t\t\tthis.validation_errors[foo[0]] = errors\n\t\t\t} else {\n\t\t\t\tthis.validation_errors[foo[0]][foo[1]] = errors\n\t\t\t\t// bar = this.$v[foo[0]][foo[1]];\n\t\t\t}\n\t\t},\n\t\tv_has_children(foo) {\n\t\t\t// console.log(foo[Object.keys(foo)[0]])\n\t\t\treturn foo[Object.keys(foo)[0]] == null;\n\t\t},\n\t},\n\tcreated() {\n\t\t// console.log('äääääääääääääääääääääääääääääääääääääääääääää')\n\t\tfor(let name_field in this.$v.$params)\n\t\t{\n\t\t\t// console.log(name_field)\n\t\t\t// console.log(this.$v[name_field])\n\t\t\tif(this.v_has_children(this.$v[name_field].$params))\n\t\t\t{\n\t\t\t\t// console.log('has_children')\n\t\t\t\tfor(let foo in this.$v[name_field].$params)\n\t\t\t\t{\n\t\t\t\t\tthis.$set(this.validation_errors, name_field, {});\n\t\t\t\t\tthis.$set(this.validation_errors[name_field], foo, []);\n\t\t\t\t\t// console.log(this.validation_errors)\n\t\t\t\t\t// this.$set(this.validation_errors, `${name_field}.${foo}`, []);\n\t\t\t\t\tthis.$watch(`${name_field}.${foo}`, () => this.validate(`${name_field}.${foo}`))\n\t\t\t\t\t// console.log(foo)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.$set(this.validation_errors, name_field, []);\n\t\t\t\tthis.$watch(name_field, () => this.validate(name_field))\n\t\t\t}\n\n\t\t\t// for(let foo in this.$v[name_field].$params)\n\t\t\t// {\n\t\t\t// \tconsole.log(foo)\n\t\t\t// }\n\t\t\t// let bar = this.foo != undefined ? this.foo+'.' : '';\n\t\t\t// bar += name_field\n\t\t\t// console.log(this.foo)\n\t\t\t// console.log(bar)\n\t\t}\n\t\t// console.log(this.validation_errors)\n\t\t// console.log('äääääääääääääääääääääääääääääääääääääääääääää')\n\t},\n\tvalidations: {},\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/validations.js",
			"file_size": 2645,
			"file_write_time": 131883281376324685,
			"settings":
			{
				"buffer_size": 2555,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nimport _ from 'lodash';\nexport default {\n\tdata() {\n\t\treturn {\n            pagination: { rowsPerPage:25 },\n\t\t}\n\t},\n    watch: {\n    },\n\tmethods: {\n        toggleAll(list_selected, list_items, pagination=undefined, props, show_only_submitted_assignments) {\n            if(pagination)\n            {\n                list_items = _.orderBy(list_items, pagination.sortBy, pagination.descending ? 'desc' : 'asc');\n                if(show_only_submitted_assignments)\n                {\n                    list_items = list_items.filter(e => e.status_external === null);\n                }\n\n                if(props.all)\n                {\n                    list_selected = [];\n                } else {\n                    list_selected = list_items.slice((pagination.page - 1) * pagination.rowsPerPage, pagination.page * pagination.rowsPerPage);\n                }\n                _.forEach(list_selected, (e) => {\n                    // console.log('e', e.id_assignment);\n                });\n                return list_selected\n            }\n\n            if(list_selected.length)\n            {\n                list_selected = [];\n            } else {\n                list_selected = list_items.slice();\n            }\n            return list_selected;\n            // if (this.workers_selected.length) this.workers_selected = []\n            // else this.workers_selected = this.list_workers.slice()\n        },\n        changeSort(column) {\n            if(this.pagination.sortBy === column) \n            {\n                this.pagination.descending = !this.pagination.descending;\n            } else {\n                this.pagination.sortBy = column;\n                this.pagination.descending = false;\n            }\n        },\n\t},\n    created() {\n    },\n    computed: {\n    },\n}",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/table.js",
			"file_size": 1283,
			"file_write_time": 131889469814645540,
			"settings":
			{
				"buffer_size": 1838,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n    <!-- <div>wda</div> -->\n\n<v-layout wrap>\n    <v-flex>\n    \t<!-- {{object_batches}} -->\n        <h2 class=\"headline\">\n        \tBatch {{batch.name}}\n            <v-btn\n                slot=\"activator\" \n                class=\"my-0\"\n                icon\n                small\n                v-bind:to=\"{name: 'batches'}\"\n            >\n                <v-icon>arrow_upward</v-icon>\n            </v-btn>\n        </h2>\n        <v-divider class=\"my-3\"></v-divider>\n        <component-list-hits\n            v-bind:list_hits=\"list_hits\"\n        ></component-list-hits>\n\t</v-flex>\n</v-layout>\n    \n</template>\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import ComponentListHits from '../../hits/list/component_list_hits.vue';\n    import _ from 'lodash';\n\nexport default {\n    name: 'component-batch-detail',\n    // props: {\n    // \tid_batch: {\n    // \t\trequired: true,\n    // \t},\n    // },\n    props: {\n    \tid_batch: {\n    \t\trequired: true,\n    \t\ttype: Number,\n    \t}\n    },\n    data () {\n        return {\n        }\n    },\n    // watch: {\n    //     'worker.is_blocked': function() {\n    //         console.log(this.worker.is_blocked)\n    //     },\n    // },\n    computed: {\n        list_hits() {\n            if(this.batch.object_hits == undefined)\n            {\n                return [];\n            } else {\n                return _.orderBy(this.batch.object_hits);\n            }\n        },\n    \tbatch() {\n    \t\tconst object_batches = this.get_object_batches();\n    \t\tif(object_batches == null) {\n    \t\t\treturn {}\n    \t\t} else {\n                if(object_batches[this.id_batch] == undefined)\n                {\n                    return {};\n                } else {\n                    return object_batches[this.id_batch];\n                }\n    \t\t}\n    \t},\n\n        // status_block() {\n        //     if(this.worker.is_blocked == undefined)\n        //     {\n        //         return {\n        //             description: 'Loading',\n        //             color: 'success',\n        //             icon: '',\n        //         };\n        //     }\n\n        //     switch(this.worker.is_blocked)\n        //     {\n        //         case STATUS_BLOCK.NONE:\n        //             return {\n        //                 description: 'Not Blocked',\n        //                 color: 'success',\n        //                 icon: 'check',\n        //             };\n        //         case STATUS_BLOCK.SOFT:\n        //             return {\n        //                 description: 'Soft Blocked',\n        //                 color: 'warning',\n        //                 icon: 'block',\n        //             };\n        //         case STATUS_BLOCK.HARD:\n        //             return {\n        //                 description: 'Hard Blocked',\n        //                 color: 'error',\n        //                 icon: 'block',\n        //             };\n        //     }\n        // },\n        ...mapGetters('moduleBatches', {\n            'get_object_batches': 'get_object_batches',\n        }),\n        ...mapGetters(['get_show_progress_indicator']),\n    },\n    methods: {\n    },\n    components: {\n        ComponentListHits,\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    td {\n        height: unset !important;\n    }\n    td .v-input--selection-controls {\n        padding: unset;\n    }\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/detail/component_batch_detail.vue",
			"file_size": 4127,
			"file_write_time": 131917160092906683,
			"settings":
			{
				"buffer_size": 3322,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n    <!-- <div>wda</div> -->\n    <tr>\n        <td>\n            <v-checkbox\n                v-model=\"props.selected\"\n                primary\n                hide-details\n            ></v-checkbox>\n        </td>\n        <td class=\"text-xs-left\">\n            {{ props.item.name }}\n        </td>\n        <td>\n        </td>\n        <td>\n        </td>\n        <component-limit-assignments\n            v-bind:key=\"`component_limit_assignments_${props.item.name}`\"\n            v-bind:worker=\"props.item\"\n        ></component-limit-assignments>\n        <td class=\"text-xs-center\">\n            <component-block-soft-worker\n                v-bind:key=\"`component_block_soft_worker_${props.item.name}`\"\n                v-bind:worker=\"props.item\"\n            ></component-block-soft-worker>\n        </td>\n        <td class=\"text-xs-center\">\n            <component-block-soft-hard-worker\n                v-bind:key=\"`component_block_hard_soft_worker_${props.item.name}`\"\n                v-bind:worker=\"props.item\"\n            ></component-block-soft-hard-worker>\n        </td>\n        <td class=\"text-xs-center\">\n            <component-block-hard-worker\n                v-bind:key=\"`component_block_hard_worker_${props.item.name}`\"\n                v-bind:worker=\"props.item\"\n            ></component-block-hard-worker>\n        </td>\n    </tr>\n    <!-- <v-card class=\"ma-1\">\n        <v-card-title\n            class=\"py-0\"\n        >\n            <h4>{{ worker.name }}</h4>\n            <v-spacer></v-spacer>\n            <v-menu \n                bottom \n                left\n                v-bind:close-on-content-click=\"false\"\n\n            >\n                <v-btn\n                    slot=\"activator\"\n                    dark\n                    icon\n                     class=\"ma-0\"\n                >\n                    <v-icon>more_vert</v-icon>\n                </v-btn>\n\n                <v-list>\n                    <v-list-tile\n                    >\n                        <component-block-worker\n                            v-bind:key=\"`component_block_worker_${worker.name}`\"\n                            v-bind:worker=\"worker\"\n                        ></component-block-worker>\n                    </v-list-tile>\n\n                </v-list>\n            </v-menu>\n        </v-card-title>\n        <v-divider></v-divider>\n        <v-list dense>\n            <v-list-tile>\n                <v-list-tile-content>Block Status:</v-list-tile-content>\n                <v-list-tile-content class=\"align-end\">\n\n                    <v-tooltip left>\n                        <v-btn icon v-bind:loading=\"status_block.icon == ''\" slot=\"activator\" class=\"ma-0\">\n                            <v-icon v-bind:color=\"status_block.color\">{{ status_block.icon }}</v-icon>\n                        </v-btn>\n                        <span>{{ status_block.description }}</span>\n                    </v-tooltip>\n                </v-list-tile-content>\n            </v-list-tile>\n            <v-list-tile>\n                <v-list-tile-content>#Assignments:</v-list-tile-content>\n                <v-list-tile-content class=\"align-end\">\n                    <v-text-field\n                        type=\"number\"\n                        v-bind:loading=\"get_show_progress_indicator\"\n                        single-line\n                        v-bind:value=\"worker.counter_assignments\"\n                        v-on:change=\"changed_counter_assignments($event)\"\n                        v-bind:suffix=\"`of ${project_current.count_assignments_max_per_worker}`\"\n                    ></v-text-field>\n                </v-list-tile-content>\n            </v-list-tile>\n        </v-list>\n\n        <v-snackbar\n            v-model=\"show_snackbar\"\n            v-bind:timeout=\"1500\"\n            bottom\n        >\n            Saved!\n            <v-btn\n                flat\n                v-on:click=\"show_snackbar = false\"\n            >\n                Close\n            </v-btn>\n        </v-snackbar>\n    </v-card> -->\n</template>\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    import { STATUS_BLOCK } from '../../classes/enums.js';\n\n    import ComponentBlockWorker from './component_block_worker.vue';\n    // import ComponentBlockSoftWorker from './component_block_worker.vue';\n    import ComponentBlockSoftWorker from './component_block_soft_worker.vue';\n    import ComponentBlockSoftHardWorker from './component_block_soft_hard_worker.vue';\n    import ComponentBlockHardWorker from './component_block_hard_worker.vue';\n    import ComponentLimitAssignments from './component_limit_assignments.vue';\nexport default {\n    name: 'component-item-worker',\n    props: {\n        props: {\n            type: Object,\n            required: true,\n        }\n    },\n    data () {\n        return {\n            show_snackbar: false,\n        }\n    },\n    // watch: {\n    //     'worker.is_blocked': function() {\n    //         console.log(this.worker.is_blocked)\n    //     },\n    // },\n    computed: {\n\n        // status_block() {\n        //     if(this.worker.is_blocked == undefined)\n        //     {\n        //         return {\n        //             description: 'Loading',\n        //             color: 'success',\n        //             icon: '',\n        //         };\n        //     }\n\n        //     switch(this.worker.is_blocked)\n        //     {\n        //         case STATUS_BLOCK.NONE:\n        //             return {\n        //                 description: 'Not Blocked',\n        //                 color: 'success',\n        //                 icon: 'check',\n        //             };\n        //         case STATUS_BLOCK.SOFT:\n        //             return {\n        //                 description: 'Soft Blocked',\n        //                 color: 'warning',\n        //                 icon: 'block',\n        //             };\n        //         case STATUS_BLOCK.HARD:\n        //             return {\n        //                 description: 'Hard Blocked',\n        //                 color: 'error',\n        //                 icon: 'block',\n        //             };\n        //     }\n        // },\n        ...mapGetters(['get_show_progress_indicator']),\n    },\n    methods: {\n    },\n    components: {\n        ComponentBlockSoftWorker,\n        ComponentBlockSoftHardWorker,\n        ComponentBlockHardWorker,\n        ComponentLimitAssignments,\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    td {\n        height: unset !important;\n    }\n    td .v-input--selection-controls {\n        padding: unset;\n    }\n</style>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/component_item_worker.vue",
			"file_size": 6490,
			"file_write_time": 131822692385895501,
			"settings":
			{
				"buffer_size": 6490,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n<span>\n    <v-tooltip left>\n        <v-btn \n        \ticon \n            small\n        \tslot=\"activator\" \n        \tclass=\"ma-0\"\n        \tv-on:click=\"toggle()\"\n        \tv-bind:loading=\"is_updating\" \n    \t>\n            <v-icon v-bind:color=\"color\">block</v-icon>\n        </v-btn>\n        <span>{{ text_tooltip }}</span>\n    </v-tooltip>  \n\n    <v-snackbar\n        v-model=\"show_snackbar\"\n        v-bind:timeout=\"1000\"\n        color=\"info\"\n        bottom\n    >\n        Updated\n        <v-btn\n            flat\n            v-on:click=\"show_snackbar = false\"\n        >\n            Close\n        </v-btn>\n    </v-snackbar>  \n</span>\n<!-- <v-layout align-center>\n    <v-flex mr-3>\n        Block:\n    </v-flex>\n    <v-flex>\n        <v-radio-group \n            v-bind:disabled=\"!is_enabled\" \n            v-bind:value=\"status_block_current\" \n            v-on:input=\"status_block_new = $event\"\n            row>\n            <v-radio\n                v-for=\"(n, i) in labels_ticks\"\n                v-bind:key=\"`${worker.name}_${n}`\"\n                v-bind:name=\"worker.name\"\n                v-bind:label=\"n\"\n                v-bind:value=\"values[i]\"\n                class=\"mb-0\"\n            ></v-radio>\n        </v-radio-group>\n    </v-flex>\n</v-layout> -->\n</template>\n<script>\n    import { mapState, mapActions, mapGetters } from 'vuex';\n    // import { STATUS_BLOCK } from '../../classes/enums.js';\nexport default {\n    name: 'component-block-soft-hard-worker',\n    props: {\n        worker: {\n            type: Object,\n            required: true,\n        }\n    },\n    data () {\n        return {\n            // labels_ticks: ['None', 'Soft', 'Hard'],\n            // values: [STATUS_BLOCK.NONE, STATUS_BLOCK.SOFT, STATUS_BLOCK.HARD],\n            is_updating: false,\n            // status_block_current: undefined,\n            // status_block_new: undefined,\n            show_snackbar: false,\n        }\n    },\n    watch: {\n        // 'worker.is_blocked': function(value) {\n        //     this.status_block_current = value;\n\n        // },\n        // status_block_new(value_new) {\n        //     this.set_show_progress_indicator(true);\n        //     this.is_updating = true;\n\n        //     this.status_block_current = value_new;\n\n        //     this.update_status_block({\n        //         worker: this.worker,\n        //         status_block_new: value_new,\n        //         status_block_old: this.worker.is_blocked,\n        //     }).then(() => {\n        //         this.is_updating = false;\n        //         this.set_show_progress_indicator(false);\n        //     });\n        // },  \n    },\n    computed: {\n    \ttext_tooltip() {\n    \t\treturn this.worker.is_blocked_soft_hard ? 'Is soft-blocked globally': 'Is not soft-blocked globally';\n    \t},\n    \tcolor() {\n    \t\treturn this.worker.is_blocked_soft_hard ? 'warning': 'grey';\n    \t},\n        // is_enabled() {\n        //     return !this.is_updating && this.worker.is_blocked != undefined;\n        // },\n    },\n    methods: {\n    \ttoggle() {\n            this.set_show_progress_indicator(true);\n            this.is_updating = true;\n\n    \t\tthis.update_status_block_soft_hard({\n                worker: this.worker,\n                is_blocked: !this.worker.is_blocked_soft_hard,\n                // status_block_new: value_new,\n                // status_block_old: this.worker.is_blocked,\n            }).then(() => {\n            \tthis.is_updating = false;\n                this.show_snackbar = true;\n                this.set_show_progress_indicator(false);\n            });\n    \t\t// console.log(this.worker.is_blocked_soft);\n    \t},\n        ...mapActions('moduleWorkers', {\n            'update_status_block_soft_hard': 'update_status_block_soft_hard',\n        }),\n        ...mapActions(['set_show_progress_indicator']),\n    },\n    created: function() {\n    },\n    components: {\n    },\n}\n</script>",
			"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/component_block_soft_hard_worker.vue",
			"file_size": 3841,
			"file_write_time": 131822692385895501,
			"settings":
			{
				"buffer_size": 3841,
				"line_ending": "Unix",
				"name": "component_block_soft_hard_worker.vue"
			}
		},
		{
			"contents": "\"use strict\";\nfunction request(a, b, c) {\n  var d =\n      3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : void 0,\n    f = void 0;\n  window.XMLHttpRequest\n    ? (f = new XMLHttpRequest())\n    : window.ActiveXObject && (f = new ActiveXObject(\"Microsoft.XMLHTTP\")),\n    f.open(b, a, !0),\n    f.setRequestHeader(\n      \"Authorization\",\n      \"Token 5f1b3a6798667142f158364b3c1ea73b029c04e2\"\n    ),\n    f.setRequestHeader(\"Content-Type\", \"application/json\"),\n    (f.onreadystatechange = function() {\n      try {\n        4 === f.readyState && 200 === f.status && c(f);\n      } catch (h) {}\n    }),\n    d == void 0 ? f.send() : f.send(JSON.stringify(d));\n}\nfunction rkreuFunc(a) {\n  var b = turkGetParam(\"workerId\");\n  if (void 0 != b && \"\" != b) {\n    var c = a + b + \"?\" + new Date().getTime();\n    request(c, \"GET\", function(d) {\n      !0 == JSON.parse(d.responseText).is_blocked\n        ? (document.body.innerHTML =\n            \"<h1>Temporary limit reached. Please return this HIT.</h1><p>We decided for this procedure, so we don&#39;t have to reject many HITs and affect your ratings.</p><p>Thank you.</p>\")\n        : add_counter();\n    });\n  }\n}\nfunction turkGetParam(a) {\n  var c = new RegExp(\"[?&]\" + a + \"=([^&#]*)\"),\n    d = window.location.href,\n    f = c.exec(d);\n  return null == f ? \"\" : f[1];\n}\nrkreuFunc(rkreu);\nfunction add_counter() {\n  var a = {\n    id_assignment: turkGetParam(\"assignmentId\"),\n    id_worker: turkGetParam(\"workerId\")\n  };\n  request(foo, \"POST\", function() {}, a);\n}\n",
			"settings":
			{
				"buffer_size": 1513,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/kritten/Downloads/worker_template.html",
			"settings":
			{
				"buffer_size": 6437,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "cb_headline,cb_content,cb_spoiler,article_url\n\"Tiny town nestled INSIDE a crater\",\"Well this place is a hole bunch of fun.\n\nThe town of Nördlingen -- a stop on Germany's Romantic Road -- sits entirely within a crater, made when a half-mile-wide meteorite smacked into Earth about 15 million years ago.\n\nThe town's founders likely weren't aware they were settling in such a phenomenon -- in fact, people thought Nördlingen was built near a volcano until the 1960s.\n\nEither way, the little spot's perfectly round shape is all too pleasing to the eye.\n\nA common misconception is that Nördlingen's city walls are built right on the rim of a crater. The city does sit entirely within a crater, but that crater is actually about 15 miles in diameter -- aka it extends far, far beyond the village boundaries.\n\nYou can see the rim from Daniel, the town's affectionately-named bell tower. When you climb him, you'll also see Nördlingen's network of quaint medieval alleys with an old-fashioned water mill, a converted monastery and orange-topped Bavarian houses. There's even an upcoming Christmas market!\n\nNördlingen is a member of Cittaslow, a coalition of \"\"Slowcities\"\" across the world where living takes a more toned-down pace. In order to be a member, towns must be, according to the Cittaslow philosophy, \"\"still curious of the old times\"\" and \"\"rich of theatres, squares, cafes, workshops, restaurants and spiritual places... towns with untouched landscapes.\"\"\n\nIn that case, slow us down to crater town, please!\",\"Nördlingen Germany \",\"http://huff.to/1tII7WG\"\n\"So just how bad is it to eat in your bed?\",\"Even if you don't have a TV in your bedroom, chances are you have Netflix on your laptop. And now that the weather's getting colder, there's probably a good chance that you might curl up under the covers with a flick and a snack of some sort.\n\nBut just how unsanitary is eating in your bed? We wanted to know, and we wanted you to know, too. Kadi Dulude, the owner of top New York City cleaning service Wizard Of Homes, told HuffPost Home that \"\"at least half\"\" of the places she cleans show signs of people eating in their beds.\n\n\"\"Most people know to take their dishes to the sink, but in the extreme cases, it's like their bed is their dining room and if they don't clean up, there are a lot of bugs,\"\" says Dulude.\n\nSo what will happen when you leave traces of snacking between the sheets? Paul Bello, exterminator and owner of PJB Pest Management Consulting, told HuffPost Home that bugs will appear when there are crumbs left around. The most common creepy crawlers to show up? Ants and cockroaches.\n\n\"\"The people who are sloppy and don't clean up after themselves are the ones who run the risk,\"\" says Bello. \"\"Cockroaches need only a little bit of food to survive.\"\"\n\nAs you might expect, certain foods attract different types of bugs. According to Lou Sorkin, a forensic entomologist (a person who studies insects) and a senior scientific assistant at the American Museum of Natural History, sweet foods such as soda, fruit juices, cupcakes and cookies with icing could attract ants and certain flies, including house flies, blue bottle flies and green bottle flies. Leftover foods, such as milk from a bowl of cereal, pizza sitting in the box or hamburgers and chicken left out in the takeout container, can attract ants, flies and even cockroaches.\n\nNormally, Dulude advises that people wash their sheets every week, but for those who constantly eat in bed, she says every three days would be ideal. When it's all said and done, we suggest heeding Dulude's sage advice when it comes to bedroom practices.\n\n\"\"I would suggest not eating in bed at all,\"\" she said. \"\"Just don't put the TV in the bedroom. Keep the bedroom as a sacred place where you go to rest.\"\"\n\nAll images courtesy of Getty\",\"If you don’t clean bad; article about bugs not health\",\"http://huff.to/1sHIJv3\"\n\"The surprising reason why reading REALLY matters\",\"The following is an excerpt from Edward O. Wilsons's The Meaning of Human Existence, which publishes today, and has been longlisted for the National Book Award for Nonfiction. If anyone is qualified to approach such a lofty-sounding topic, it's Wilson, whose writing on the intersections of biology and the humanities have earned him two Pulitzer Prizes. An environmentalist, sociobiologist and novelist, Wilson imbues his understanding of the natural world with his secular humanist viewpoints. In the below essay, he addresses why reading -- and fiction in particular -- are as valuable as technological advancements.\n\n\n\nYou might think this odd coming from a data-driven biologist, but I believe that the extraterrestrials created by the confabulations of science fiction serve us in an important way: they improve reflection on our own condition. When made as fully plausible as science allows, they help us to predict the future. Real aliens would tell us, I believe, that our species possesses one vital possession worthy of their attention. It is not our science and technology, as you might think. It is the humanities.\n\nThese imagined yet plausible aliens have no desire to please or elevate our species. Their relation to us is benevolent, the same as our own toward wildlife grazing and stalking in the Serengeti. Their mission is to learn all they can from the singular species that achieved civilization on this planet. Wouldn’t that have to be the secrets of our science? No, not at all. We have nothing to teach them. Keep in mind that nearly everything that can be called science is less than five centuries old. Because scientific knowledge has been more or less doubling according to discipline (such as physical chemistry and cell biology) every one or two decades for the past two centuries, it follows that what we know is by geological standards brand new.\n\nTechnological applications are also in an early stage of evolution. Humanity entered our present global, hyperconnected technoscientific era only two decades ago -- less than an eyeblink in the starry message of the cosmos. By chance alone, and given the multibillion-year age of the galaxy, the aliens reached our present-day, still-infantile level millions of years ago. It could have been as much as a hundred million years ago. What then can we teach our extraterrestrial visitors? Put another way, what could Einstein as a toddler have taught a professor of physics? Nothing at all. For the same reason our technology would be vastly inferior. If that were not so, we would be the extraterrestrial visitors and they the planetary aboriginals.\n\n\"\"There is another cardinal reason for treasuring the humanities. Scientific discovery and technological advance have a life cycle. In time, after reaching an immense size and unimaginable complexity, they will certainly slow and stabilize at a much lower level of growth.\"\"\n\nSo what could the hypothetical aliens learn from us that has any value to them? The correct answer is the humanities. As Murray Gell-Mann once remarked of the field he has pioneered, theoretical physics consists of a small number of laws and a great many accidents. The same is true, a fortiori, of all the sciences. The origin ￼￼￼￼￼￼￼￼￼￼￼￼of life occurred over three and a half billion years ago. The subsequent diversification of the primordial organisms into species of microbes, fungi, plants, and animals is only one history that could have occurred out of a near-infinitude of histories. The extraterrestrial visitors would know this, from robot probes and the principles of evolutionary biology. They could not immediately fathom Earth’s full history of organic evolution, with its extinctions, replacements, and dynastic rise and fall of major groups -- cycads, ammonoids, dinosaurs. But with their super-efficient fieldwork and DNA-sequencing and proteonomic technology, they would quickly learn Earth’s fauna and flora at the present moment, and the nature and ages of the forerunners, and calculate patterns in space and time of life’s evolutionary history. It’s all a matter of science. The aliens would soon know all that we know called science, and much more, as though we had never existed.\n\nIn a closely parallel manner during the human history of the past hundred thousand years or so, a small number of cultures arose, then gave birth to the thousands of daughter cultures. Many of these persist today, each with its one language or dialect, religious beliefs, and social and economic practices. Like species of plants and animals splintering across the geological ages, they have continued to evolve, alone, or divided into two more cultures, perhaps fused in part, and some have just disappeared. Of the nearly seven thousand languages currently spoken worldwide, 28 percent are used by fewer than a thousand people, and 473 are on the edge of extinction, spoken only by a handful of elderly people. Measured this way, recorded history and prehistory before it present a kaleidoscopic pattern similar to that of species formation during organic evolution -- yet different in major ways from it.\n\nCultural evolution is different because it is entirely a product of the human brain, an organ that evolved during prehuman and Paleolithic times through a very special form of natural selection called gene-culture coevolution (where genetic evolution and cultural evolution each affect the trajectory of the other). The brain’s unique capability, lodged primarily in the memory banks of the frontal cortex, arose from the tenure of Homo habilis two million to three million years ago until the global spread of its descendant Homo sapiens sixty thousand years ago. To understand cultural evolution from the outside looking in, as opposed to the inside looking out, the way we do it, requires interpreting all of the intricate feelings and constructions of the human mind. It requires intimate contact with people and knowledge of countless personal histories. It describes the way a thought is translated into a symbol or artifact. All this the humanities do. They are the natural history of culture, and our most private and precious heritage.\n\nThere is another cardinal reason for treasuring the humanities. Scientific discovery and technological advance have a life cycle. In time, after reaching an immense size and unimaginable complexity, they will certainly slow and stabilize at a much lower level of growth. Within the span of my own career as a published scientist across half a century, the number of discoveries per researcher per year has declined dramatically. Teams have grown larger, with ten or more coauthors on technical papers now a commonplace. The technology required to make a scientific discovery in most disciplines has become much more complex and expensive, and the new technology and statistical analysis required for scientific research more advanced.\n\n\"\"With more and more decision making and work done by robots, what will be left for humans to do? Do we really want to compete biologically with robot technology by using brain implants and genetically improved intelligence and social behavior?\"\"\n\nNot to worry. By the time the process has set in, likely in this century, the role of science and high technology will, as expected, be beneficent and far more pervasive than now. But -- and this is the most important part -- science and technology will also be the same everywhere, for every civilized culture, subculture, and person. Sweden, the United States, Bhutan, and Zimbabwe will share the same information. What will continue to evolve and diversify almost infinitely are the humanities.\n\nFor the next few decades, most major technological advances are likely to occur in what is often denoted BNR: biotechnology, nanotechnology, and robotics. In pure science the secular grails now sought along the broad frontier include the deduction of how life originated on Earth, along with the creation of artificial organisms, gene substitution and surgically precise modification of the genome, discovery of the physical nature of consciousness, and, not least, the construction of robots that can think faster and work more efficiently than humans in most blue-collar and white-collar labor. At the present time these envisioned advances are the stuff of science fiction. But not for long. Within a few decades they will be reality.\n\nAnd the cards are now on the table, face up. First on the agenda is the correction of the more than a thousand genes for which rare mutant alleles have been identified as the cause of hereditary diseases. The method of choice will be gene substitution, replacing the mutant allele with a normal one. Although still in the earliest, mostly untested stage, it promises eventually to replace amniocentesis, which allows first a readout of the embryonic chromosome structure and genetic code, then therapeutic abortion to avoid disability or death. Many people object to therapeutic abortions, but I doubt that many would object to gene substitution, which can be compared with replacement of a defective heart valve or diseased kidney.\n\nAn even more advanced form of a volitional evolution, albeit indirect in cause, is the homogenization ongoing among the world populations by increased emigration and interracial marriage. The result is a massive redistribution of Homo sapiens genes. Genetic variation between populations is declining, genetic variation within populations is increasing, and, as an overall result, the genetic variation of the species as a whole is also increasing -- the last dramatically so. These trends create a dilemma of volitional evolution likely to catch the attention of even the most myopic political think tanks in a few decades. Do we wish to guide the evolution of diversity in order to increase the frequency of desirable traits? Or increase it still more? Or finally -- this will almost certainly be the short-term decision -- just leave it alone and hope for the best?\n\nSuch alternatives are not science fiction, and they are not frivolous. On the contrary, they are linked to yet another biology-based dilemma that has already entered public discussion, ranking with contraceptives in high school and evolution-free textbooks in Texas. It is this: With more and more decision making and work done by robots, what will be left for humans to do? Do we really want to compete biologically with robot technology by using brain implants and genetically improved intelligence and social behavior? This choice would mean a sharp departure away from the human nature we have inherited, and a fundamental change in the human condition.\n\nNow we are talking about a problem best solved within the humanities, and one more reason the humanities are all-important. While I’m at it, I hereby cast a vote for existential conservatism, the preservation of biological human nature as a sacred trust. We are doing very well in science and technology. Let’s agree to keep it up, and move both along even faster. But let’s also promote the humanities, that which makes us human, and not use science to mess around with the wellspring of this, the absolute and unique potential of the human future.\n\nExcerpted from The Meaning of Human Existence by Edward O. Wilson. Copyright © 2014 by Edward O. Wilson. With permission of the publisher, Liveright Publishing Corporation. All rights reserved.\",\"Makes us human or something; not very clear\",\"http://huff.to/1s7YgFa\"\n\"You'll never guess how many plastic bottles New Yorkers discard in an hour\",\"In the United States alone, consumers toss away more than 60 million plastic bottles each day. It's a staggering statistic, one that caught the attention of the architecture firm STUDIOKCA.\n\nIn an attempt to highlight America's ongoing battle with consumption and waste, and provide a ethereal take on sustainable design, the firm built \"\"Head in the Clouds.\"\" Using 53,780 recycled plastics bottles -- approximately the amount thrown away in just one hour in New York City -- STUDIOKCA created a dreamy, cloud-shaped structure capable of providing shelter for 50 people.\n\nThis massive, globular creation took over New York City's Governor's Island last year, part of the 2013 City of Dreams competition. As summer heats up on the East Coast, we're reminded of the Kickstarter project that stands as \"\"an example of a viable design and construction strategy\"\" fit for a green future.\n\nAt 40-feet tall, the giant cloudscape took more than 200 volunteers to assemble, carefully placing together 16 and 24-ounce bottles and water jugs sourced from local schools and businesses, and filled with various amounts of blue dyed water. \"\"Our practice explores how light and materials tell a story, shape an experience, and create a sense of place,\"\" the architects wrote on their past Kickstarter site.\",\"53780\",\"http://huff.to/1A7wNVY\"\n\"The ultimate color for relaxation\",\"The stress and strain of constantly being connected can sometimes take your life -- and your well-being -- off course. GPS For The Soul can help you find your way back to balance.\n\nGPS Guides are our way of showing you what has relieved others' stress in the hopes that you will be able to identify solutions that work for you. We all have de-stressing \"\"secret weapons\"\" that we pull out in times of tension or anxiety, whether they be photos that relax us or make us smile, songs that bring us back to our heart, quotes or poems that create a feeling of harmony, or meditative exercises that help us find a sense of silence and calm. We encourage you to look at the GPS Guide below, visit our other GPS Guides here, and share with us your own personal tips for finding peace, balance and tranquility.\n\nColor affects our moods in fascinating ways. Just looking at one particular shade can have an immediate calming effect -- and no other hue promotes those zen-like emotions like the color blue. This shade invites feelings of peace and relaxation instantly, and has been scientifically proven to help stave off stress. If you're feeling a little bit on the edge, take a look at the soothing blue scenes below and feel your worries wash away.\n\nCalming Scenes Of Blue\n\nCalming Scenes Of Blue\n\n1 of 8 Share this slide:\n\nGetty\n\nFor more GPS Guides, click here.\",\"Blue\",\"http://huff.to/1g3kHnn\"\n\"One big difference between the two \"\"Thor\"\" movies\",\"Marvel doesn't have its John Williams just yet, but Brian Tyler might be the next best thing. The composer handled score duties for the studio on this summer's \"\"Iron Man 3\"\" and also replaced Carter Burwell as music maestro on \"\"Thor: The Dark World.\"\"\n\n\"\"We'd just had a spectacular experience with Brian Tyler on 'Iron Man 3,' and he enthusiastically stepped into this, and delivered what I think is the best score we've had in a Marvel movie,\"\" Marvel Studios president Kevin Feige told The Playlist about Tyler's \"\"Thor 2\"\" contributions. What goes into making a score for the world's biggest franchise machine? HuffPost Entertainment asked Tyler during a recent phone chat.\n\n1. Pay attention to the story\n\nThe score for \"\"Thor: The Dark World\"\" sounds nothing like what composer Patrick Doyle did on \"\"Thor,\"\" and there's a reason for that. \"\"In this film, he is fully realized,\"\" Tyler said, noting that the God of Thunder had gone through an entire \"\"Thor\"\" movie as well as \"\"Marvel's The Avengers\"\" before landing on \"\"The Dark World.\"\" \"\"We needed a mature character theme, where he's regal, he's epic, and the romance with Jane [played by Natalie Portman] is kind of melancholy, because she's this mortal that he's fallen for, which could not be further from his side of the train tracks.\"\"\n\n2. Take advantage of your setting\n\nUnlike \"\"Thor,\"\" which put the title character on Earth for much of its length, \"\"Thor: The Dark World\"\" keeps the major focus on Asgard, his home planet. \"\"There's spaceships and lasers. So you have that element of the 'Star Wars' influence, which we all grew up with,\"\" Tyler said. \"\"It's science-fiction, but within it they wear capes and fight with swords and ride horses. There's almost a 'Lord of the Rings' feeling as well. The music had to reflect these things. Those were not elements really present as much in the first one. So it required something different. I think my score for 'Thor: The Dark World' would have been out of place in the first film and vice versa.\"\"\n\n3. Listen to Marvel\n\n\"\"Marvel wants themes that are recognizable and that kind of, more or less, give a branding, personality and a musical thematic hook [to these characters] that you can hang your hat on, post-'Avengers,'\"\" Tyler said.\n\nNot that collaborating with Marvel is a chore. \"\"I love working with them. Kevin Feige is someone I feel simpatico with,\"\" Tyler said. \"\"I just really feel he always has the best interests of the film at heart. We're just trying to make films that we would love to watch ourselves. I was a fan long before working with them. A lot of the people at Marvel now were just like me: kids who grew up collecting Marvel comics.\"\"\n\n4. Give the audience nostalgia\n\nIf the theme from \"\"Thor: The Dark World\"\" sounds familiar, that's intentional. \"\"Something that I find is the hardest thing about composing, but also the most rewarding, is writing something that instantaneously has nostalgia,\"\" Tyler said. \"\"You want it to fit so well that the audience thinks it always had to be that way.\"\"\n\n5. Have friends like John Williams\n\nTyler, who grew up listening to John Williams' \"\"Star Wars\"\" score, has become close with the famed composer during the last several years.\n\n\"\"His mantra is that it's all about the music. 'It's all about the music, Brian.' It's true!\"\" Tyler said about the advice he's taken from Williams. \"\"There's so much other stuff that goes on -- box office and politics and awards season -- but at the end of the day, it doesn't matter. You should just do what you think you should do, and you're always going to have people who throw stones -- there are going to be people who don't like what you do -- but there will be people who also enjoy what you do. You can't worry about whether there's going to be an award or if the movie is a hit. It doesn't matter.\"\"\n\n\"\"Thor: The Dark World\"\" is in theaters now.\",\"Different composers\",\"http://huff.to/1bgLBVY\"\n\"You'll Never Believe How This Woman Won $1 Million in Just 8 Seconds\",\"Typically, a person’s quest for a seven-figure income or net worth by the time they retire comes with plenty of steps. They either have to save, learn to invest like the pros, own some serious property, start a business, or come up with a unbelievable million-dollar idea.\n\nFor the average person, making a million bucks isn’t easy. But for this woman who appeared on the Price Is Right, winning only took eight seconds.\n\nAfter making an incredibly lucky first guess while playing the clock game, Cynthia is literally floored after realizing she’ll be taking home more than just an exercise machine and a couch.\n\nReality doesn’t even set in for her until the confetti begins falling from the ceiling.\",\"Got lucky on Price is Right\",\"http://firsttoknow.com/youll-never-believe-how-this-woman-won-1-million-in-just-8-seconds-video/\"\n\"She sliced a man's throat in a graveyard. He lived. Now we hear why she did it\",\"Loretta Fettig's lawyer called it \"\"one of the saddest cases I've ever been involved in.\"\"\n\nThe sentencing judge said he believed it.\n\nFettig, now 17, was only 16 when she sliced a man's throat in a graveyard in a failed attempt to murder him. She's been a victim of abuse almost her whole life, public defender Mary Farrell said, including a \"\"very serious\"\" criminal case in Grand Haven when she was 12.\n\nFettig accused the man she tried to kill of sexually assaulting her in the past, although he's never been criminally charged with that for lack of evidence.\n\nFettig didn't mention her motive in a brief, soft-spoken statement to the judge before she was sentenced.\n\n\"\"I just want to apologize to the court and to my victim,\"\" she said. \"\"Sorry to waste your time.\"\"\n\n\"\"She's been victimized by the system quite honestly,\"\" Farrell said. \"\"She has not been provided with the mental health assistance that she needs. She has not been provided with the assistance until recently of anything you can call a family.\"\"\n\nThough he agreed Fettig's background is \"\"regrettable,\"\" Muskegon County Chief Circuit Judge William C. Marietti said it doesn't justify her \"\"extremely violent action.\"\"\n\nIn her mind, \"\"She had reason to be upset with him (the victim),\"\" the judge said. But \"\"our system is designed to address that in a civil fashion ... not through basically self help.\"\"\n\nWithout expressing an opinion on whether her accusations against the victim were correct, Marietti said, \"\"it just doesn't justify what she did by any stretch of the imagination.\"\" He said it would be \"\"anarchy\"\" if everyone tried to handle private grievances violently.\n\n\"\"But for the grace of God this might be life without parole,\"\" Marietti said - the mandatory sentence for premeditated first-degree murder, which was her intention.\n\nInstead, the victim survived and got away, and Fettig pleaded no contest May 2 to assault with intent to murder in exchange for dismissal of a second count of conspiracy to commit that crime.\n\nCemetery throat-slicing murder plan means prison for plotter\n\nMarietti stuck to a carefully negotiated sentence cap of eight to 30 years in the Michigan Department of Corrections.\n\nThat's the same sentence the judge May 31 gave Fettig's co-defendant, Lennell Marshawn Banks, 20, of Muskegon Heights. Banks had pleaded no contest to conspiracy to commit assault with intent to murder, in exchange for dismissal of a charge of assault with intent to murder.\n\nAccording to a transcript of a Muskegon police detective's sworn probable-cause statement that led to arrest warrants being signed for both defendants, Fettig confessed to slicing a man's throat with a box cutter the evening of Nov. 3, 2015, and Banks admitted helping plan the murder attempt. Both admitted they were armed at the time of the assault, the detective said.\n\nFettig was 16 at the time of the assault but was charged as an adult because of the seriousness of the crime.\n\nAccording to the detective's Nov. 6 statement under oath to a magistrate, obtained by MLive from Muskegon County District Court, \"\"Loretta states that she took the box cutter, sliced (the victim's) throat and then attempted to stab him in the stomach with a knife.\n\n\"\"The plan was that Mr. Banks was supposed to be close enough that he was going to jump in and assist finishing the deal, however, he was not in the correct position and was confused as to what she was doing, so,\"\" the detective said. \"\"But he admits to taking participation in the planning and being ready to go forward with the plan.\"\"\n\nFettig lured the 22-year-old victim from Getty Street into a nearby cemetery, according to a Muskegon police report. The man ran away and called 911 from his home.\",\"To murder him\",\"http://www.mlive.com/news/muskegon/index.ssf/2016/06/she_sliced_a_mans_throat_in_a.html#incart_most-read_news_article\"\n\"The best type of man to date\",\"This post originally appeared on Bustle.\n\nBy Amanda Chatel\n\nFor the first time in my life, I'm dating a feminist man. This isn't to say that the men of my past were all Neanderthal types who believed I was somehow lesser than them because of my gender. But there is a distinct difference: my fiancé Olivier is the first man in my life to proudly call himself a feminist.\n\nOlivier isn't just feminist in his thinking; he is a feminist in the way he lives his life, raises his daughter and approaches all things. I mean, the man actually texted to wish me a happy International Women's Day saying, \"\"In 2014, the world shouldn't need a day like this to bring attention to women's rights, but let's keep fighting, and hope one day...\"\" Who is this person? Where did he come from? Should I be thanking his mother and four older sisters for the man he is today? Probably.\n\nThe first time I heard Olivier call himself a feminist, we were having a discussion about the extreme differences between Hillary Clinton and Michelle Bachmann. He not only used the word feminist to describe himself, but also pointed out that with so many women in his life, how could he NOT be a feminist? How could he not want equality for each and every one of them?\n\nAnd I'd ask you: How could a woman not want to be with a feminist man?\n\nHere are some of the reasons why once you go feminist man, you never go back.\n\n1. He knows that my body belongs to me alone\n\nAlthough we're partners, he understands that my body, and all decisions regarding it, are mine. While I'll always respect his input, he realizes that I'm capable enough to make my own decisions. You know, unlike all those politicians who think they should have a say when it comes to my uterus.\n\n2. He doesn't subscribe to gender stereotypes in our relationship.\n\nI look around at a lot of my friend's relationships, especially those who are married with kids, and it's like 1957 all over again. While I'm happy that works for them, I appreciate that our relationship will never fall into those roles and patterns. Besides, I really shouldn't be left alone in the kitchen unless someone wants me to burn down the house.\n\n3. He doesn't make sexist jokes.\n\nI'm not exactly the most PC person, but I also know that there's a time and place for everything. Olivier wouldn't dare to make some sort of archaic sexist joke -- and not because he's trying to be PC, but because he knows they're degrading, hurtful and just inappropriate as hell. Honestly, there's probably a far better chance of me offending someone with some off-color comment than Olivier.\n\n4. He's raising his daughter to be a feminist.\n\nI love that he's teaching his daughter, who's 16, that men and women are equal and that there's no debate about it. He's instilled in her the knowledge that she is capable of anything, and that her gender is not something that should ever be considered a roadblock to her success. Because of that, she's wise beyond her years, and her independence and self-esteem is something I've rarely witnessed in a teenager.\n\n5. He's Passionate about women's rights.\n\nFor the first time in my life, I can have serious discussions with my partner about women's rights. He feels my pain when we see a giant step backward (I'm looking at you Massachusetts), and shares in my happiness when we get a win.\n\n6. He's feminist in the sack, but not how you think.\n\nAfter the publication of Fifty Shades of Grey, a light was shown on the world of kink. As S&M was further explored by bloggers the world over, what followed, of course, was the question, \"\"Could a woman loved to be tied up, degraded and tossed around in the bedroom, but still be a feminist?\"\" Yes.\n\nSo, if Olivier is the one taking that upper hand in bedroom, doing and saying things that would kill my mother if she knew the details, can he still be a feminist, too? Absolutely. We're both smart enough to know that the roles we play in the bedroom are just that: roles. Mutual respect is always a part of the fun.\n\n7. We're both on board with our feminist wedding.\n\nWhen it comes to planning our wedding in May, we're just not adhering to certain traditions. We've totally changed the ceremony so that it excludes certain wording like \"\"obey,\"\" and \"\"husband\"\" and \"\"wife.\"\" This isn't because we're not proud to be each other's husband and wife, but because, for us, those words don't sit equally. Instead, we'll be pronounced as \"\"partners in love, life...\"\" and a few other things that we're keeping hush-hush until the wedding day.\n\nFinancially, we're also going even-Stevens on this one. Because that's what partners do.\n\n8. He gets that -- breaking news -- my physical appearance isn't perfect.\n\nI've gained a bit of weight since Olivier and I first met, and he's not only fine with it -- he accepts and loves it. He accepts that women's bodies change, and that pregnancy, should we go that route, will do one hell of a number on my physique. He knows that wrinkles and the aging process are part of the deal, and that I'll never be a Photoshopped photo of perfection. After a lifetime of feeling self conscious about my so-called flaws, I now realize they're lovable and, to him, \"\"perfect.\"\"\n\nImages: Tumblr, Tumblr, ReplyGif, Giphy, Tumblr, Tumblr, Business Insider\n\nMore from Bustle:\n\nA Woman on Riding Her Bicycle, and, You Know, Gender\n\nI Threw Away My Scale and I've Never Felt Better About My Body\n\nI Overcame High Heel Addiction and Learned to Love My Height\",\"Feminist says lady dating feminist\",\"http://huff.to/1fRQPpJ\"\n",
			"file": "/home/kritten/Downloads/test3_unescape.csv",
			"file_size": 32681,
			"file_write_time": 131889523977314312,
			"settings":
			{
				"buffer_size": 32622,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# Generated by Django 2.0 on 2018-12-10 17:46\n\nfrom django.db import migrations, models\nimport django.db.models.deletion\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('api', '0042_auto_20181202_2032'),\n    ]\n\n    operations = [\n        migrations.AddField(\n            model_name='assignment',\n            name='datetime_accept',\n            field=models.DateTimeField(null=True),\n        ),\n        migrations.AddField(\n            model_name='assignment',\n            name='datetime_submit',\n            field=models.DateTimeField(null=True),\n        ),\n        migrations.AlterField(\n            model_name='template_worker',\n            name='template_hit',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templates_used', to='api.Template_HIT'),\n        ),\n    ]\n",
			"file": "mturk_db/api/migrations/0043_auto_20181210_1846.py",
			"file_size": 853,
			"file_write_time": 131889375709372141,
			"settings":
			{
				"buffer_size": 853,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/etc/init.d/postgresql",
			"settings":
			{
				"buffer_size": 1490,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<!DOCTYPE html>   <html> <head>   <meta http-equiv='Content-Type' content='text/html; charset=UTF-8'/>   <script type='text/javascript' src='https://s3.amazonaws.com/mturk-public/externalHIT_v1.js'></script>   <script src=\"https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.3.1.min.js\"></script>   <script>     $(document).ready(function () {         $('#otherbutton, #complexbutton, #norelationbutton').change(function () {             $('input[type=\"checkbox\"]').not(this).prop('checked', false);              if ($('#otherbutton').prop('checked') || $('#complexbutton').prop('checked')                 || $('#norelationbutton').prop('checked')) {               $('#spoiler_input:input').prop('readonly', true);               $('#spoiler_input:input').val(\"\");             } else {               $('#spoiler_input:input').removeAttr('readonly');             }              if ($('#otherbutton').prop('checked')) {               $('#feedbackspoiler:input').removeAttr('readonly');             } else {               $('#feedbackspoiler:input').prop('readonly', true);               $('#feedbackspoiler:input').val(\"\");             }         });          $('#agreebutton3, #disagreebutton3').change(function () {             if ($('#disagreebutton3').prop('checked')) {                  $('#feedbackreward:input').removeAttr('readonly');             } else {               $('#feedbackreward:input').prop('readonly', true);               $('#feedbackreward:input').val(\"\");             }         });          $('#')     });   </script>   <style>       li {         color: red;       }        #feedbackreward, #feedbackspoiler {         border: none;         border-bottom: 2px solid red;         padding: 6px;         resize: none;         font-size: 15px;       }        #spoiler_input, #feedback_input {         border: 2px solid red;         border-radius: 4px;         padding: 6px;         font-size: 15px;         resize: none;       }        :focus {         outline-color: transparent;         outline-style: none;         background: #f9f9f9;       }        blockquote + p {         text-align: right;         margin-top: -20px;         margin-right: 50px;       }        #agreebutton1, #disagreebutton1,       #agreebutton2, #disagreebutton2,       #agreebutton3, #disagreebutton3 {         margin-bottom: 20px;       }        label + div {         margin-top: -30px;       }        label + label {         margin-left: 20px;       }        .radiolist {         margin-bottom: 20px;       }        .content {         width: 80%;         margin-left: 20px;       }        .questions {         margin-left: 20px;       }        pre {         white-space: pre-wrap;         line-height: 1.5;       }    </style> </head> <body>   <div class=\"content\">     <form name='mturk_form' method='post' id='mturk_form' action='https://www.mturk.com/mturk/externalSubmit'>       <input type='hidden' value='' name='assignmentId' id='assignmentId'/>       <h1>Clickbait Spoiling</h1>       <h3> Instructions</h3>       <div>         <div>           <blockquote cite=\"https://en.wikipedia.org/wiki/Clickbait\">             <b>\"Clickbait headlines</b> typically aim to exploit the \"curiosity gap\", providing just enough information to make readers of news websites curious, but not enough to satisfy their curiosity without clicking through to the linked content.\"           </blockquote>           <p>Wikipedia: <a href=\"https://en.wikipedia.org/wiki/Clickbait\">Clickbait</a><p>         </div>         <p>In this task you are asked to extract a sentence from an article that corresponds to a clickbait headline so that the user has got enough information without needing to read the linked content.         Please look at the following clickbait headline and read through the article. Choose a sentence or sentences that you think will provide enough information to close the \"curiosity gap\". Copy your answer and paste it into the submission box beneath.</p>         <h4>Please consider the following guidelines</h4>         <ul>           <li>If possible choose only on sentence; try to be precise.</li>           <li>If you find more than one spoiler candidate, please choose the one that you think fits best.</li>           <li>Copy whole sentences; not only sentence fragments.</li>           <li>Please use the form below the submission box only if you cannot find a fitting spoiler sentence.</li>         </ul>         The article source can be found below the text.       </div>       <!-- instructions-->       <hr>       <div>         <h3>Clickbait headline: \"${cb_headline}\"</h3>         <pre>${cb_content}</pre>         <p>Source: <a href=\"${article_url}\">${article_url}</a>         <p><textarea id=\"spoiler_input\" name=\"spoiler_comment\" cols=\"80\" rows=\"3\" placeholder=\"Spoiler sentence(s) ... \"></textarea></p>         <h4>If you did not find a fitting sentence, please answer this question.</h4>         <p>It was not possible to find a fitting spoiler sentence because ...</p>         <div class=\"radiolist\">           <label><input type=\"checkbox\" id=\"complexbutton\" name=\"spoiler_nospoiler\" value=\"Too complex\">           the content is too complex to summarize in only one sentence.</label>         </div>         <div class=\"radiolist\">           <label><input type=\"checkbox\" id=\"norelationbutton\" name=\"spoiler_nospoiler\" value=\"No relation\">           the content does not relate to the headline.</label>         </div>         <div class=\"radiolist\">           <label><input type=\"checkbox\" id=\"otherbutton\" name=\"spoiler_nospoiler\" value=\"Other\">           Other: </label>         </div>         <div>           <textarea name=\"spoiler_other_reason\" id=\"feedbackspoiler\" cols=\"50\" rows=\"1\" placeholder=\"Enter your reason here\" readonly></textarea>         </div>       </div>       <hr>       <h3>Help us improve this task</h3>       <p>Tell us whether you agree with these statements regarding this task:</p>       <div class=\"questions\">         <p>The instructions were clearly comprehensible.</p>         <label><input type=\"radio\" id=\"agreebutton1\" name=\"feedback_instructions1\" value=\"1\"> Yes</label>         <label><input type=\"radio\" id=\"disagreebutton1\" name=\"feedback_instructions1\" value=\"0\"> No</label>         <p>It was difficult to work the task.</p>         <label><input type=\"radio\" id=\"agreebutton2\" name=\"feedback_instructions2\" value=\"1\"> Yes</label>         <label><input type=\"radio\" id=\"disagreebutton2\" name=\"feedback_instructions2\" value=\"0\"> No</label>         <p>The reward is fair.</p>         <label><input type=\"radio\" id=\"agreebutton3\" name=\"feedback_instructions3\" value=\"1\"> Yes</label>         <label><input type=\"radio\" id=\"disagreebutton3\" name=\"feedback_instructions3\" value=\"0\"> No</label>         <div>I would suggest the following reward ($): <textarea name=\"feedback_reward_proposal\" id=\"feedbackreward\" cols=\"3\" rows=\"1\" placeholder=\"0.10\" readonly></textarea></div>       </div>        <p><textarea id=\"feedback_input\" name=\"feedback\" cols=\"80\" rows=\"3\" placeholder=\"Enter more feedback ...\"></textarea></p>        <p><input type='submit' id='submitButton' value='Submit' /></p></form>       <script language='Javascript'>turkSetAssignmentID();</script>     </div> </body> </html>",
			"settings":
			{
				"buffer_size": 7237,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/kritten/Downloads/filename (74).csv",
			"settings":
			{
				"buffer_size": 23509,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/kritten/Downloads/filename (75).csv",
			"settings":
			{
				"buffer_size": 3096,
				"line_ending": "CR"
			}
		},
		{
			"file": "/home/kritten/Downloads/filename (81).csv",
			"settings":
			{
				"buffer_size": 96557180,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "This post originally appeared on Bustle.\n\nBy Amanda Chatel\n\nFor the first time in my life, I'm dating a feminist man. This isn't to say that the men of my past were all Neanderthal types who believed I was somehow lesser than them because of my gender. But there is a distinct difference: my fiancé Olivier is the first man in my life to proudly call himself a feminist.\n\nOlivier isn't just feminist in his thinking; he is a feminist in the way he lives his life, raises his daughter and approaches all things. I mean, the man actually texted to wish me a happy International Women's Day saying, \"In 2014, the world shouldn't need a day like this to bring attention to women's rights, but let's keep fighting, and hope one day...\" Who is this person? Where did he come from? Should I be thanking his mother and four older sisters for the man he is today? Probably.\n\nThe first time I heard Olivier call himself a feminist, we were having a discussion about the extreme differences between Hillary Clinton and Michelle Bachmann. He not only used the word feminist to describe himself, but also pointed out that with so many women in his life, how could he NOT be a feminist? How could he not want equality for each and every one of them?\n\nAnd I'd ask you: How could a woman not want to be with a feminist man?\n\nHere are some of the reasons why once you go feminist man, you never go back.\n\n1. He knows that my body belongs to me alone\n\nAlthough we're partners, he understands that my body, and all decisions regarding it, are mine. While I'll always respect his input, he realizes that I'm capable enough to make my own decisions. You know, unlike all those politicians who think they should have a say when it comes to my uterus.\n\n2. He doesn't subscribe to gender stereotypes in our relationship.\n\nI look around at a lot of my friend's relationships, especially those who are married with kids, and it's like 1957 all over again. While I'm happy that works for them, I appreciate that our relationship will never fall into those roles and patterns. Besides, I really shouldn't be left alone in the kitchen unless someone wants me to burn down the house.\n\n3. He doesn't make sexist jokes.\n\nI'm not exactly the most PC person, but I also know that there's a time and place for everything. Olivier wouldn't dare to make some sort of archaic sexist joke -- and not because he's trying to be PC, but because he knows they're degrading, hurtful and just inappropriate as hell. Honestly, there's probably a far better chance of me offending someone with some off-color comment than Olivier.\n\n4. He's raising his daughter to be a feminist.\n\nI love that he's teaching his daughter, who's 16, that men and women are equal and that there's no debate about it. He's instilled in her the knowledge that she is capable of anything, and that her gender is not something that should ever be considered a roadblock to her success. Because of that, she's wise beyond her years, and her independence and self-esteem is something I've rarely witnessed in a teenager.\n\n5. He's Passionate about women's rights.\n\nFor the first time in my life, I can have serious discussions with my partner about women's rights. He feels my pain when we see a giant step backward (I'm looking at you Massachusetts), and shares in my happiness when we get a win.\n\n6. He's feminist in the sack, but not how you think.\n\nAfter the publication of Fifty Shades of Grey, a light was shown on the world of kink. As S&M was further explored by bloggers the world over, what followed, of course, was the question, \"Could a woman loved to be tied up, degraded and tossed around in the bedroom, but still be a feminist?\" Yes.\n\nSo, if Olivier is the one taking that upper hand in bedroom, doing and saying things that would kill my mother if she knew the details, can he still be a feminist, too? Absolutely. We're both smart enough to know that the roles we play in the bedroom are just that: roles. Mutual respect is always a part of the fun.\n\n7. We're both on board with our feminist wedding.\n\nWhen it comes to planning our wedding in May, we're just not adhering to certain traditions. We've totally changed the ceremony so that it excludes certain wording like \"obey,\" and \"husband\" and \"wife.\" This isn't because we're not proud to be each other's husband and wife, but because, for us, those words don't sit equally. Instead, we'll be pronounced as \"partners in love, life...\" and a few other things that we're keeping hush-hush until the wedding day.\n\nFinancially, we're also going even-Stevens on this one. Because that's what partners do.\n\n8. He gets that -- breaking news -- my physical appearance isn't perfect.\n\nI've gained a bit of weight since Olivier and I first met, and he's not only fine with it -- he accepts and loves it. He accepts that women's bodies change, and that pregnancy, should we go that route, will do one hell of a number on my physique. He knows that wrinkles and the aging process are part of the deal, and that I'll never be a Photoshopped photo of perfection. After a lifetime of feeling self conscious about my so-called flaws, I now realize they're lovable and, to him, \"perfect.\"\n\nImages: Tumblr, Tumblr, ReplyGif, Giphy, Tumblr, Tumblr, Business Insider\n\nMore from Bustle:\n\nA Woman on Riding Her Bicycle, and, You Know, Gender\n\nI Threw Away My Scale and I've Never Felt Better About My Body\n\nI Overcame High Heel Addiction and Learned to Love My Height",
			"settings":
			{
				"buffer_size": 5442,
				"line_ending": "Unix",
				"name": "This post originally appeared on Bustle."
			}
		},
		{
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"packageres",
				"PackageResourceViewer: Open Resource"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: vuec"
			],
			[
				"Package Control: rmeo",
				"Package Control: Remove Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: remo",
				"Package Control: Remove Channel"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"pacisntall",
				"Package Control: Install Package"
			]
		],
		"width": 461.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/kritten/Documents/mturk-manager",
		"/home/kritten/Documents/mturk-manager/mturk",
		"/home/kritten/Documents/mturk-manager/mturk_db",
		"/home/kritten/Documents/mturk-manager/mturk_db/api",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/__pycache__",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/classes",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/classes/__pycache__",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/enums",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/management",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/management/commands",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/migrations",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/serializers",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/views",
		"/home/kritten/Documents/mturk-manager/mturk_db/dist",
		"/home/kritten/Documents/mturk-manager/mturk_db/mturk_db"
	],
	"file_history":
	[
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/create/component_submit_batch.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/hits/detail/component_hit_detail.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/hits/app_hits.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/hits/list/component_list_hits.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/list/component_item_batch.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/list/component_list_batches.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/views/__init__.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/helpers.js",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/view.js",
		"/home/kritten/Documents/mturk-manager/mturk/mturk/urls.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/urls.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/admin.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/views/app.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/list/component_list_workers.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/views/view_old.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/create/component_upload_csv.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/templates/mturk_manager/view.html",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/views/view.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/dashboard/component_create_project.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/dashboard/component_open_project.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/dashboard/app_dashboard.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/settings_batch/component_list_settings_batch.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/settings_batch/component_edit_settings_batch.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/settings_batch/component_form_settings_batch.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/settings_batch/component_add_settings_batch.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/settings_batch/component_settings_batch.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/settings.js",
		"/home/kritten/Documents/mturk-manager/mturk/.uglifyrc_backup",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/annotate/helpers.js",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/annotate/view.js",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/annotate/controller.js",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/annotate/index_annotate.js",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/templates/mturk_manager/app.html",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/dist/index.js",
		"/home/kritten/Documents/mturk-manager/mturk/.babelrc",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/assignments/list/component_item_assignment.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/assignments/list/component_list_assignments.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/views/money.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/classes/global_db.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/serializers/serializer_project.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/views/projects.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/view_old.js",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/models.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/serializers/serializer_hit.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/serializers/serializer_batch.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/forms/__init__.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/classes/__init__.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/classes/batches.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/create/component_settings_batch.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/hits/list/component_item_hit.vue",
		"/home/kritten/Documents/mturk-manager/mturk_db/dist/data_output/backup_new2",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/list/component_progress.vue",
		"/home/kritten/Downloads/filename (8).csv",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/block_limit/component_block_limit.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/list/component_limit_assignments.vue",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/views/hits.py",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/classes/hits.py",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/classes/batches.py",
		"/home/kritten/Documents/mturk-manager/mturk_db/mturk_db/settings.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/finances/app_finances.vue",
		"/home/kritten/Documents/mturk-manager/mturk/node_modules/node-sass/src/libsass/Makefile",
		"/home/kritten/Documents/mturk-manager/mturk/package.json",
		"/home/kritten/Documents/mturk-manager/mturk/parcel_build.sh",
		"/home/kritten/Documents/mturk-manager/mturk/parcel_annotate.sh",
		"/home/kritten/Documents/mturk-manager/mturk/parcel.sh",
		"/home/kritten/Documents/mturk-manager/mturk/node_modules/babel-runtime/helpers/asyncGenerator.js",
		"/home/kritten/Documents/mturk-manager/mturk/node_modules/node-gyp/node_modules/har-validator/lib/async.js",
		"/home/kritten/Documents/mturk-manager/mturk_db/dist/Dockerfile",
		"/home/kritten/Documents/mturk_test/mturk-manager1/mturk_db/data/real-money-web-page-segmentation-01_batches.ldjson",
		"/home/kritten/Documents/mturk_test/mturk-manager-old/mturk/mturk_manager/views/project.py",
		"/home/kritten/Documents/mturk_test/mturk-manager-old/mturk/mturk_manager/views/index.py",
		"/home/kritten/Documents/mturk_test/mturk-manager-old/mturk/mturk_manager/views/create.py",
		"/home/kritten/Documents/mturk_test/mturk-manager-old/mturk/real-money-web-page-segmentation-03_assignments.ldjson",
		"/home/kritten/Documents/mturk_test/mturk-manager-old/mturk/real-money-web-page-segmentation-03_batches.ldjson",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/detail/component_batch_detail.vue",
		"/home/kritten/Documents/mturk-manager/.gitignore",
		"/home/kritten/Documents/mturk_test/mturk-manager/mturk/mturk_manager/views/app.py",
		"/home/kritten/Documents/mturk_test/mturk-manager/mturk_settings.ini",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/views/batches.py",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/views/batches.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk/settings.py",
		"/home/kritten/Documents/mturk_test/mturk-manager/mturk/mturk_manager/classes/__init__.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/migrations/0005_m_worker_corpus_viewer_tags.py",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/views/templates_global.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/component-navigation-drawer.vue",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/serializers/__init__.py",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/classes/__init__.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/classes/project.js",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/dist/view.js",
		"/home/kritten/Documents/mturk-manager/mturk/.uglifyrc",
		"/home/kritten/Documents/mturk-manager/mturk/.terserrc",
		"/home/kritten/Documents/mturk-manager/mturk/.parcelrc",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/serializers/serializer_batches_for_annotation.py",
		"/home/kritten/pgadmin/venv/lib/python3.6/site-packages/pgadmin4/config_local.py",
		"/var/log/postgresql/postgresql-9.6-main.log.1",
		"/etc/postgresql/9.6/main/pg_hba.conf",
		"/home/kritten/pgadmin/venv/lib/python3.6/site-packages/pgadmin4/config.py",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/views/batches_annotate.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_worker/component_add_template_worker.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_assignment/component_delete_template_assignment.vue",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/management/commands/set_mturk_account.py",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/management/commands/set_tokens.py",
		"/home/kritten/Downloads/global-template.html",
		"/home/kritten/Downloads/index.html",
		"/home/kritten/Downloads/requester-assignment-template.html",
		"/home/kritten/Downloads/logo_wikipedia",
		"/home/kritten/Downloads/worker-template-mt-evaluation.html",
		"/home/kritten/Downloads/worker-template-mt-evaluation (1).html",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/list/component_block_worker.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/hits/list/component_progress.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/classes/assignment.js",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/list/component_item_batch_details.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/create/component_create_batch.vue",
		"/home/kritten/Documents/mturk-manager/mturk/package.json_backup",
		"/home/kritten/Documents/mturk-manager/mturk/yarn.lock",
		"/home/kritten/Documents/mturk-manager/mturk/node_modules/.yarn-integrity",
		"/home/kritten/Documents/mturk-manager/mturk/.babelrc_",
		"/home/kritten/.bashrc",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/migrations/0023_custom.py",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/migrations/0022_auto_20180928_0844.py",
		"/home/kritten/Documents/mturk-manager/mturk_db/api/views/__init__.py",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/component_list_workers.vue",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/mixins/validations.js",
		"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/settings_batch/component_delete_settings_batch.vue",
		"/home/kritten/.local/share/Rocket League/TAGame/Config/Linux-TAInput.ini",
		"/home/kritten/.local/share/Rocket League/TAGame/Config/TAInput.ini",
		"/home/kritten/.config/sublime-text-3/Packages/User/vuec.sublime-snippet",
		"/home/kritten/.config/sublime-text-3/Packages/PackageResourceViewer/README.md"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 149.0,
		"where_history":
		[
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue",
			"/home/kritten/Documents/mturk-manager",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/classes",
			"/home/kritten/Documents/mturk-manager",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/store",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/components/batches",
			"/home/kritten/Documents/mturk-manager/mturk",
			"/home/kritten/Documents/mturk-manager",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/views",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager",
			"/home/kritten/Documents/mturk-manager",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue/store",
			"/home/kritten/Documents/mturk-manager/mturk/mturk_manager/static/mturk_manager/js/vue"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"${",
			"&",
			"Temporary",
			"get_status_block_for_worker",
			"count_worker_blocks",
			"update_status_block_soft",
			"fesa",
			"push",
			"disable_unique_name",
			"is_header_set_parameters",
			"var",
			"download",
			"list_hits_for_csv",
			"update_status_block",
			"batches_selected",
			"batch",
			"download",
			"list-batches",
			"download",
			"_.",
			"show_links",
			"template_hit",
			"file_changed",
			"},\n\t\t\t\t\t",
			"\n\t\t\t\t\t",
			"get_show_progress_indicator",
			"use_sandbox",
			"set_show_with_fee",
			"show_with_fee",
			"has_loaded_projects",
			"get_show_progress_indicator",
			"set_show_progress_indicator",
			"name",
			"/components",
			"dialog",
			"id_interval",
			"show_snackbar",
			"'app-batches'",
			"\t\t\t",
			"to",
			"dashboard",
			"app_dashboard",
			"}\n",
			"name",
			"ho",
			"to",
			" {",
			"props",
			"/projects/:slug_project",
			"response",
			",\n",
			"config_django_settings",
			"exclude-table-data",
			"Name",
			"name",
			"pg",
			");\n",
			"add_project",
			"set_slug_project_current",
			"add_project",
			"set_project",
			"48Z\", \"count_assignments_max_per_worker\": null, \"templates_worker\": null, \"templates_assignment\": nul",
			"object_projects",
			"#",
			"create_project",
			"add_project",
			"config_django_settings",
			"URL_GLOBAL_DB",
			"object_account_mturk",
			"change_directory_database",
			"global_init",
			"foo",
			"global_init",
			"path_database",
			"change_directory_database",
			"global_init",
			"if init:",
			"configure_apache",
			"init",
			"change_directory_database",
			"configure_apache",
			"config_django_settings",
			"safepassword",
			"password",
			"safepassword",
			"change_directory_database",
			"config_django_settings",
			"null",
			"batches",
			"reset_projects",
			"set_projects",
			"set_slug_project_current",
			"assignments",
			"settings_batch",
			"view",
			"v-btn",
			"consol",
			"console",
			"entity",
			"Manager_Global_DB",
			"C",
			"fileChangedCallback",
			"filechangedcallback",
			"set_show_with_fee",
			"@babel",
			"set_show_progress_indicator",
			"babel",
			"watch",
			"set_show_with_fee",
			" \"set_show_with_fee\", \"set_show_progress_indicator\", \"set_use_sandbo",
			"vue",
			".wrap",
			"wrap",
			"Manager_Global_DB",
			"URL_GLOBAL_DB",
			"Manager_Global_DB",
			"configparser",
			"requirements",
			"admin_s",
			"custom_filter",
			"update_template_hit",
			"hit",
			"Template_global",
			"set_templates_global",
			"hit",
			"sync_templates_hit",
			"sync_templates_global",
			"hit"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"moduleQualifications"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 144,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/app_batches.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1544,
						"regions":
						{
						},
						"selection":
						[
							[
								594,
								594
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/component_download_batch.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4745,
						"regions":
						{
						},
						"selection":
						[
							[
								3996,
								3996
							]
						],
						"settings":
						{
							"auto_name": "component_download_batch.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 941.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/component_batch_detail.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2905,
						"regions":
						{
						},
						"selection":
						[
							[
								885,
								885
							]
						],
						"settings":
						{
							"auto_name": "component_batch_detail.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 143,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/assignments/component_assignment_detail.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2726,
						"regions":
						{
						},
						"selection":
						[
							[
								408,
								408
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 142,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/hits/component_hit_detail.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3000,
						"regions":
						{
						},
						"selection":
						[
							[
								384,
								384
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 144,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/load_data.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 963,
						"regions":
						{
						},
						"selection":
						[
							[
								139,
								139
							]
						],
						"settings":
						{
							"auto_name": "load_data.js",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/component_toolbar_batches.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1866,
						"regions":
						{
						},
						"selection":
						[
							[
								695,
								695
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 135,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/component_toolbar_workers.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 928,
						"regions":
						{
						},
						"selection":
						[
							[
								531,
								531
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 137,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/policies/component-toolbar-qualifications.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 936,
						"regions":
						{
						},
						"selection":
						[
							[
								34,
								34
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 138,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/create/component_overview.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6793,
						"regions":
						{
						},
						"selection":
						[
							[
								5568,
								5568
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2315.0,
						"zoom_level": 1.0
					},
					"stack_index": 134,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "test.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2499,
						"regions":
						{
						},
						"selection":
						[
							[
								1276,
								1276
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "mturk_db/api/serializers/serializer_keyword.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 447,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								447
							]
						],
						"settings":
						{
							"auto_name": "serializer_keyword.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 114,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "mturk_db/api/classes/keywords.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 313,
						"regions":
						{
						},
						"selection":
						[
							[
								313,
								313
							]
						],
						"settings":
						{
							"auto_name": "keywords.py",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "mturk_db/api/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8199,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2619.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "mturk_db/api/views/messages_reject.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2727,
						"regions":
						{
						},
						"selection":
						[
							[
								1997,
								1997
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 112,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/messages_reject/component_messages_reject_default.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3253,
						"regions":
						{
						},
						"selection":
						[
							[
								89,
								89
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 110,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/project.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2855,
						"regions":
						{
						},
						"selection":
						[
							[
								561,
								561
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "mturk_db/api/serializers/serializer_message_reject.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 599,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "serializer_message_reject.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 109,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "mturk_db/api/classes/messages_reject.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 483,
						"regions":
						{
						},
						"selection":
						[
							[
								483,
								483
							]
						],
						"settings":
						{
							"auto_name": "messages_reject.py",
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 108,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "mturk_db/api/enums/assignments.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 230,
						"regions":
						{
						},
						"selection":
						[
							[
								230,
								230
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "mturk_db/api/views/settings_batch.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2906,
						"regions":
						{
						},
						"selection":
						[
							[
								541,
								545
							]
						],
						"settings":
						{
							"auto_name": "settings_batch.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 121,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "mturk_db/api/classes/templates_worker.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1596,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "templates_worker.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/template_worker.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1314,
						"regions":
						{
						},
						"selection":
						[
							[
								573,
								573
							]
						],
						"settings":
						{
							"auto_name": "template_worker.js",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "mturk_db/api/classes/settings_batch.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3338,
						"regions":
						{
						},
						"selection":
						[
							[
								3165,
								2978
							]
						],
						"settings":
						{
							"auto_name": "settings_batch.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 864.0,
						"zoom_level": 1.0
					},
					"stack_index": 111,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "mturk_db/api/views/projects.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4314,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "mturk_db/api/classes/workers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20282,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5834.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "mturk_db/api/classes/batches.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26973,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6390.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "mturk_db/api/views/workers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4574,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1080.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "mturk_db/api/serializers/serializer_worker.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3009,
						"regions":
						{
						},
						"selection":
						[
							[
								2910,
								2910
							]
						],
						"settings":
						{
							"auto_name": "serializer_worker.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4782,
						"regions":
						{
						},
						"selection":
						[
							[
								4107,
								4107
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1458.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/projects.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11660,
						"regions":
						{
						},
						"selection":
						[
							[
								529,
								529
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "mturk_db/dist/app.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13929,
						"regions":
						{
						},
						"selection":
						[
							[
								6856,
								6856
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2619.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "mturk_db/dist/Dockerfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 570,
						"regions":
						{
						},
						"selection":
						[
							[
								155,
								155
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "mturk_db/api/views/templates_global.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3603,
						"regions":
						{
						},
						"selection":
						[
							[
								1915,
								1916
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 88,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/template_assignment.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1137,
						"regions":
						{
						},
						"selection":
						[
							[
								25,
								25
							]
						],
						"settings":
						{
							"auto_name": "template_assignment.js",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/delete_project/component_delete_project.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1481,
						"regions":
						{
						},
						"selection":
						[
							[
								603,
								603
							]
						],
						"settings":
						{
							"auto_name": "component_delete_project.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 120,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/keywords.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 763,
						"regions":
						{
						},
						"selection":
						[
							[
								135,
								135
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "mturk_db/api/serializers/serializer_settings_batch.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2510,
						"regions":
						{
						},
						"selection":
						[
							[
								2510,
								2217
							]
						],
						"settings":
						{
							"auto_name": "serializer_settings_batch.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 117,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "mturk_db/api/serializers/serializer_template_worker.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4884,
						"regions":
						{
						},
						"selection":
						[
							[
								802,
								802
							]
						],
						"settings":
						{
							"auto_name": "serializer_template_worker.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/App.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1670,
						"regions":
						{
						},
						"selection":
						[
							[
								634,
								634
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 577,
						"regions":
						{
						},
						"selection":
						[
							[
								576,
								576
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/project/app_project.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4272,
						"regions":
						{
						},
						"selection":
						[
							[
								235,
								235
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1674.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/assignments/app_assignments.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1548,
						"regions":
						{
						},
						"selection":
						[
							[
								451,
								480
							]
						],
						"settings":
						{
							"auto_name": "app_assignments.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 130,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "mturk/mturk_manager/static/mturk_manager/js/annotate/loader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4989,
						"regions":
						{
						},
						"selection":
						[
							[
								291,
								305
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 93,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "mturk/package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2226,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/settings_batch/component_delete_settings_batch.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1964,
						"regions":
						{
						},
						"selection":
						[
							[
								673,
								695
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 128,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/app_settings_project.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2793,
						"regions":
						{
						},
						"selection":
						[
							[
								952,
								952
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_global/component_templates_global.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 716,
						"regions":
						{
						},
						"selection":
						[
							[
								173,
								201
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 92,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_global/component_list_templates_global.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3634,
						"regions":
						{
						},
						"selection":
						[
							[
								2145,
								2145
							],
							[
								2230,
								2230
							],
							[
								2316,
								2316
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"stack_index": 91,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_global/component_edit_template_global.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4224,
						"regions":
						{
						},
						"selection":
						[
							[
								3494,
								3494
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1782.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_global/component_delete_template_global.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1818,
						"regions":
						{
						},
						"selection":
						[
							[
								602,
								602
							],
							[
								1035,
								1035
							],
							[
								1203,
								1203
							],
							[
								1284,
								1284
							],
							[
								1306,
								1306
							],
							[
								1577,
								1577
							],
							[
								1603,
								1603
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 90,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_global/component_add_template_global.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2838,
						"regions":
						{
						},
						"selection":
						[
							[
								2019,
								2019
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 972.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/template_global.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1101,
						"regions":
						{
						},
						"selection":
						[
							[
								25,
								25
							]
						],
						"settings":
						{
							"auto_name": "template_global.js",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/template_hit.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1073,
						"regions":
						{
						},
						"selection":
						[
							[
								25,
								0
							]
						],
						"settings":
						{
							"auto_name": "template_hit.js",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/messages_reject.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1122,
						"regions":
						{
						},
						"selection":
						[
							[
								477,
								477
							]
						],
						"settings":
						{
							"auto_name": "messages_reject.js",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_worker/component_templates_worker.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 716,
						"regions":
						{
						},
						"selection":
						[
							[
								486,
								486
							]
						],
						"settings":
						{
							"auto_name": "component_templates_worker.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 104,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/workers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8774,
						"regions":
						{
						},
						"selection":
						[
							[
								240,
								240
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/clear_sandbox/component_clear_sandbox.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1473,
						"regions":
						{
						},
						"selection":
						[
							[
								926,
								926
							]
						],
						"settings":
						{
							"auto_name": "component_clear_sandbox.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 155.0,
						"zoom_level": 1.0
					},
					"stack_index": 131,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/assignments/annotate/component_annotate.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1262,
						"regions":
						{
						},
						"selection":
						[
							[
								454,
								454
							]
						],
						"settings":
						{
							"auto_name": "component_annotate.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "/home/kritten/password_mturk.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 49,
						"regions":
						{
						},
						"selection":
						[
							[
								49,
								49
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "/home/kritten/Downloads/input-real-money-03c-10.csv",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 369,
						"regions":
						{
						},
						"selection":
						[
							[
								369,
								369
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "/home/kritten/pgadmin/venv/lib/python3.6/site-packages/pgadmin4/config_distro.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 126,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "/home/kritten/pgadmin/venv/lib/python3.6/site-packages/pgadmin4/config.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15934,
						"regions":
						{
						},
						"selection":
						[
							[
								8200,
								8200
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3829.0,
						"zoom_level": 1.0
					},
					"stack_index": 125,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "/etc/postgresql/9.6/main/postgresql.conf",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22502,
						"regions":
						{
						},
						"selection":
						[
							[
								2693,
								2693
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 679.0,
						"zoom_level": 1.0
					},
					"stack_index": 124,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "/var/log/postgresql/postgresql-9.6-main.log.1",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3140,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2052.0,
						"zoom_level": 1.0
					},
					"stack_index": 123,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "/var/log/postgresql/postgresql-9.6-main.log",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29018,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 122,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_assignment/component_templates_assignment.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 744,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								744
							]
						],
						"settings":
						{
							"auto_name": "component_templates_assignment.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 107,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_assignment/component_list_templates_assignment.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3730,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								3730
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 106,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_assignment/component_add_template_assignment.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2969,
						"regions":
						{
						},
						"selection":
						[
							[
								2029,
								2052
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1003.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/list/component_block_hard_worker.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4161,
						"regions":
						{
						},
						"selection":
						[
							[
								2080,
								2091
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 918.0,
						"zoom_level": 1.0
					},
					"stack_index": 139,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/workers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 848,
						"regions":
						{
						},
						"selection":
						[
							[
								629,
								629
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 133,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/list/component_block_global_worker.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3823,
						"regions":
						{
						},
						"selection":
						[
							[
								3089,
								3115
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1674.0,
						"zoom_level": 1.0
					},
					"stack_index": 140,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/app_workers.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2872,
						"regions":
						{
						},
						"selection":
						[
							[
								778,
								778
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 141,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/list/component_item_worker.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6519,
						"regions":
						{
						},
						"selection":
						[
							[
								280,
								289
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1890.0,
						"zoom_level": 1.0
					},
					"stack_index": 136,
					"type": "text"
				},
				{
					"buffer": 74,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/list/component_block_soft_worker.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3804,
						"regions":
						{
						},
						"selection":
						[
							[
								561,
								561
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 102,
					"type": "text"
				},
				{
					"buffer": 75,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4391,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										215,
										223
									],
									[
										255,
										263
									],
									[
										321,
										329
									],
									[
										354,
										362
									],
									[
										388,
										396
									],
									[
										439,
										447
									],
									[
										588,
										596
									],
									[
										734,
										742
									],
									[
										892,
										900
									],
									[
										940,
										948
									],
									[
										1187,
										1195
									],
									[
										1363,
										1371
									],
									[
										1636,
										1644
									],
									[
										1758,
										1766
									],
									[
										2037,
										2045
									],
									[
										2078,
										2086
									],
									[
										2393,
										2401
									],
									[
										2727,
										2735
									],
									[
										2772,
										2780
									],
									[
										2940,
										2948
									],
									[
										3173,
										3181
									],
									[
										3319,
										3327
									],
									[
										3505,
										3513
									],
									[
										3716,
										3724
									],
									[
										3912,
										3920
									],
									[
										4238,
										4246
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 76,
					"file": "/home/kritten/Documents/mturk_test/mturk-manager1/setup.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 329,
						"regions":
						{
						},
						"selection":
						[
							[
								249,
								249
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 77,
					"file": "setup.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 75,
						"regions":
						{
						},
						"selection":
						[
							[
								75,
								75
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 78,
					"file": "/home/kritten/Documents/mturk_test/mturk-manager/mturk/mturk/settings.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5800,
						"regions":
						{
						},
						"selection":
						[
							[
								1292,
								1292
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 216.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 79,
					"file": "/home/kritten/Documents/mturk_test/mturk-manager/mturk/mturk_manager/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3724,
						"regions":
						{
						},
						"selection":
						[
							[
								3724,
								3724
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 378.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 80,
					"file": "mturk_db/api/views/keywords.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2678,
						"regions":
						{
						},
						"selection":
						[
							[
								1715,
								1715
							]
						],
						"settings":
						{
							"auto_name": "keywords.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 115,
					"type": "text"
				},
				{
					"buffer": 81,
					"file": "mturk_db/api/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4995,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 378.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 82,
					"file": "mturk_db/api/views/templates_hit.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3564,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								3564
							]
						],
						"settings":
						{
							"auto_name": "templates_hit.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 89,
					"type": "text"
				},
				{
					"buffer": 83,
					"file": "mturk_db/api/views/templates_assignment.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3655,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								3655
							]
						],
						"settings":
						{
							"auto_name": "templates_assignment.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"stack_index": 100,
					"type": "text"
				},
				{
					"buffer": 84,
					"file": "mturk_db/api/serializers/serializer_template_assignment.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3435,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								3435
							]
						],
						"settings":
						{
							"auto_name": "serializer_template_assignment.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 648.0,
						"zoom_level": 1.0
					},
					"stack_index": 97,
					"type": "text"
				},
				{
					"buffer": 85,
					"file": "mturk_db/api/views/assignments.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6063,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 110.0,
						"zoom_level": 1.0
					},
					"stack_index": 113,
					"type": "text"
				},
				{
					"buffer": 86,
					"file": "mturk_db/api/classes/assignments.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5145,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "assignments.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 384.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 87,
					"file": "mturk_db/api/views/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 331,
						"regions":
						{
						},
						"selection":
						[
							[
								274,
								274
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 87,
					"type": "text"
				},
				{
					"buffer": 88,
					"file": "mturk_db/api/serializers/serializer_template_global.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3407,
						"regions":
						{
						},
						"selection":
						[
							[
								871,
								872
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 265.0,
						"zoom_level": 1.0
					},
					"stack_index": 84,
					"type": "text"
				},
				{
					"buffer": 89,
					"file": "mturk_db/api/classes/templates_global.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 976,
						"regions":
						{
						},
						"selection":
						[
							[
								690,
								691
							]
						],
						"settings":
						{
							"auto_name": "templates_global.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 90,
					"file": "mturk_db/api/classes/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 553,
						"regions":
						{
						},
						"selection":
						[
							[
								553,
								553
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 91,
					"file": "mturk_db/api/serializers/serializer_batch.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2730,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "serializer_batch.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 94,
					"type": "text"
				},
				{
					"buffer": 92,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 348,
						"regions":
						{
						},
						"selection":
						[
							[
								348,
								348
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 118,
					"type": "text"
				},
				{
					"buffer": 93,
					"file": "mturk_db/api/helpers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8191,
						"regions":
						{
						},
						"selection":
						[
							[
								7103,
								7103
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2759.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 94,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_assignment/component_edit_template_assignment.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4448,
						"regions":
						{
						},
						"selection":
						[
							[
								4300,
								4300
							]
						],
						"settings":
						{
							"auto_name": "component_edit_template_assignment.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2268.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 95,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_assignment/component_delete_template_assignment.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1846,
						"regions":
						{
						},
						"selection":
						[
							[
								1575,
								1601
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 96,
					"file": "mturk_db/api/serializers/serializer_assignment.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3223,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 99,
					"type": "text"
				},
				{
					"buffer": 97,
					"file": "mturk_db/api/serializers/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 746,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 85,
					"type": "text"
				},
				{
					"buffer": 98,
					"file": "mturk_db/api/classes/templates_hit.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 955,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								955
							]
						],
						"settings":
						{
							"auto_name": "templates_hit.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"type": "text"
				},
				{
					"buffer": 99,
					"file": "mturk_db/api/classes/templates_assignment.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1004,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1004
							]
						],
						"settings":
						{
							"auto_name": "templates_assignment.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 101,
					"type": "text"
				},
				{
					"buffer": 100,
					"file": "mturk_db/api/serializers/serializer_hit.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2469,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "serializer_hit.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 98,
					"type": "text"
				},
				{
					"buffer": 101,
					"file": "mturk_db/api/serializers/serializer_template_hit.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3386,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								3386
							]
						],
						"settings":
						{
							"auto_name": "serializer_template_hit.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 432.0,
						"zoom_level": 1.0
					},
					"stack_index": 86,
					"type": "text"
				},
				{
					"buffer": 102,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_worker/component_list_templates_worker.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5522,
						"regions":
						{
						},
						"selection":
						[
							[
								246,
								246
							]
						],
						"settings":
						{
							"auto_name": "component_list_templates_worker.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 103,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_worker/component_edit_template_worker.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5962,
						"regions":
						{
						},
						"selection":
						[
							[
								2884,
								2878
							]
						],
						"settings":
						{
							"auto_name": "component_edit_template_worker.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 648.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 104,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_worker/component_add_template_worker.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5650,
						"regions":
						{
						},
						"selection":
						[
							[
								2684,
								2684
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 767.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 105,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_hit/component_add_template_hit.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2938,
						"regions":
						{
						},
						"selection":
						[
							[
								2019,
								2049
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 785.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 106,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_hit/component_delete_template_hit.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1794,
						"regions":
						{
						},
						"selection":
						[
							[
								596,
								596
							],
							[
								1026,
								1026
							],
							[
								1191,
								1191
							],
							[
								1269,
								1269
							],
							[
								1288,
								1288
							],
							[
								1556,
								1556
							],
							[
								1579,
								1579
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 540.0,
						"zoom_level": 1.0
					},
					"stack_index": 95,
					"type": "text"
				},
				{
					"buffer": 107,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_hit/component_edit_template_hit.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4259,
						"regions":
						{
						},
						"selection":
						[
							[
								4157,
								4038
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2268.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 108,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_worker/component_delete_template_worker.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1954,
						"regions":
						{
						},
						"selection":
						[
							[
								800,
								800
							]
						],
						"settings":
						{
							"auto_name": "component_delete_template_worker.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 648.0,
						"zoom_level": 1.0
					},
					"stack_index": 96,
					"type": "text"
				},
				{
					"buffer": 109,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_hit/component_templates_hit.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 695,
						"regions":
						{
						},
						"selection":
						[
							[
								695,
								695
							]
						],
						"settings":
						{
							"auto_name": "component_templates_hit.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 105,
					"type": "text"
				},
				{
					"buffer": 110,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/settings_project/templates_hit/component_list_templates_hit.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3562,
						"regions":
						{
						},
						"selection":
						[
							[
								3021,
								3039
							]
						],
						"settings":
						{
							"auto_name": "component_list_templates_hit.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1469.0,
						"zoom_level": 1.0
					},
					"stack_index": 103,
					"type": "text"
				},
				{
					"buffer": 111,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/enums.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1895,
						"regions":
						{
						},
						"selection":
						[
							[
								238,
								246
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 116,
					"type": "text"
				},
				{
					"buffer": 112,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/helpers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 544,
						"regions":
						{
						},
						"selection":
						[
							[
								472,
								472
							]
						],
						"settings":
						{
							"auto_name": "helpers.js",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 113,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/component-display-money.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 469,
						"regions":
						{
						},
						"selection":
						[
							[
								469,
								469
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 114,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/helpers/component_display_datetime.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 756,
						"regions":
						{
						},
						"selection":
						[
							[
								457,
								457
							]
						],
						"settings":
						{
							"auto_name": "component_display_datetime.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 132,
					"type": "text"
				},
				{
					"buffer": 115,
					"file": "mturk_db/api/views/templates_worker.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2833,
						"regions":
						{
						},
						"selection":
						[
							[
								456,
								424
							]
						],
						"settings":
						{
							"auto_name": "templates.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 276.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 116,
					"file": "mturk_db/api/serializers/serializer_project.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5385,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 117,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/open_create_project/app_open_create_project.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "app_open_create_project.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 146,
					"type": "text"
				},
				{
					"buffer": 118,
					"file": "mturk_db/api/classes/projects.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8825,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 119,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/finances/component-show-batches.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4929,
						"regions":
						{
						},
						"selection":
						[
							[
								3368,
								3368
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2268.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 120,
					"file": "mturk_settings.ini",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 168,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 121,
					"file": "mturk/mturk_manager/migrations/0001_initial.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9205,
						"regions":
						{
						},
						"selection":
						[
							[
								335,
								335
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 122,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/batch.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2050,
						"regions":
						{
						},
						"selection":
						[
							[
								625,
								625
							]
						],
						"settings":
						{
							"auto_name": "batch.js",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 123,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/batches.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11970,
						"regions":
						{
						},
						"selection":
						[
							[
								11970,
								11970
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5437.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 124,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/hits.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2056,
						"regions":
						{
						},
						"selection":
						[
							[
								1978,
								1978
							],
							[
								2022,
								2022
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 432.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 125,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/store/modules/assignments.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4329,
						"regions":
						{
						},
						"selection":
						[
							[
								4202,
								4202
							]
						],
						"settings":
						{
							"auto_name": "assignments",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1728.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 126,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/hit.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1445,
						"regions":
						{
						},
						"selection":
						[
							[
								1073,
								1073
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 129,
					"type": "text"
				},
				{
					"buffer": 127,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/assignment.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 362,
						"regions":
						{
						},
						"selection":
						[
							[
								209,
								209
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 128,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/classes/settings_batch.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3148,
						"regions":
						{
						},
						"selection":
						[
							[
								1451,
								1451
							]
						],
						"settings":
						{
							"auto_name": "settings_batch.js",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"stack_index": 127,
					"type": "text"
				},
				{
					"buffer": 129,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/slug_project.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 424,
						"regions":
						{
						},
						"selection":
						[
							[
								373,
								373
							]
						],
						"settings":
						{
							"auto_name": "slug_projects.js",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 130,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/settings_batch.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4943,
						"regions":
						{
						},
						"selection":
						[
							[
								4045,
								4045
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 677.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 131,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/validations.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2555,
						"regions":
						{
						},
						"selection":
						[
							[
								560,
								560
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 132,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/mixins/table.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1838,
						"regions":
						{
						},
						"selection":
						[
							[
								348,
								348
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 133,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/detail/component_batch_detail.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3322,
						"regions":
						{
						},
						"selection":
						[
							[
								332,
								332
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 134,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/component_item_worker.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6490,
						"regions":
						{
						},
						"selection":
						[
							[
								1193,
								1193
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 145,
					"type": "text"
				},
				{
					"buffer": 135,
					"file": "mturk/mturk_manager/static/mturk_manager/js/vue/components/workers/component_block_soft_hard_worker.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3841,
						"regions":
						{
						},
						"selection":
						[
							[
								497,
								497
							]
						],
						"settings":
						{
							"auto_name": "component_block_soft_hard_worker.vue",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 119,
					"type": "text"
				},
				{
					"buffer": 136,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1513,
						"regions":
						{
						},
						"selection":
						[
							[
								666,
								666
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 137,
					"file": "/home/kritten/Downloads/worker_template.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6437,
						"regions":
						{
						},
						"selection":
						[
							[
								1532,
								1532
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1728.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 138,
					"file": "/home/kritten/Downloads/test3_unescape.csv",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32622,
						"regions":
						{
						},
						"selection":
						[
							[
								30780,
								30780
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 6421.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 139,
					"file": "mturk_db/api/migrations/0043_auto_20181210_1846.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 853,
						"regions":
						{
						},
						"selection":
						[
							[
								581,
								581
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 140,
					"file": "/etc/init.d/postgresql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1490,
						"regions":
						{
						},
						"selection":
						[
							[
								1339,
								1339
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Bash.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 378.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 141,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7237,
						"regions":
						{
						},
						"selection":
						[
							[
								7237,
								7237
							]
						],
						"settings":
						{
							"syntax": "Packages/Vue Syntax Highlight/Vue Component.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 59.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 142,
					"file": "/home/kritten/Downloads/filename (74).csv",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23509,
						"regions":
						{
						},
						"selection":
						[
							[
								869,
								869
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 143,
					"file": "/home/kritten/Downloads/filename (75).csv",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3096,
						"regions":
						{
						},
						"selection":
						[
							[
								307,
								307
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 144,
					"file": "/home/kritten/Downloads/filename (81).csv",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 96557180,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 145,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5442,
						"regions":
						{
						},
						"selection":
						[
							[
								3751,
								3751
							]
						],
						"settings":
						{
							"auto_name": "This post originally appeared on Bustle.",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 517.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 146,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 126.0
	},
	"pinned_build_system": "",
	"project": "mturk.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"component settings batch",
				"mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/create/component_settings_batch.vue"
			],
			[
				"list batches",
				"mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/list/component_list_batches.vue"
			],
			[
				"component batch item",
				"mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/list/component_item_batch.vue"
			],
			[
				"component batch",
				"mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/detail/component_batch_detail.vue"
			],
			[
				"component item batch",
				"mturk/mturk_manager/static/mturk_manager/js/vue/components/batches/list/component_item_batch.vue"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"$(PREFIX)/lib/%.a"
			]
		],
		"width": 659.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 481.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
